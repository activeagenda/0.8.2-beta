<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

  $grid = unserialize('O:8:"viewgrid":21:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:8:"pple_ksa";s:6:"phrase";s:28:"Knowledge, Skills, Abilities";s:6:"number";N;s:6:"Fields";a:5:{s:8:"PersonID";O:14:"invisiblefield":11:{s:4:"name";s:8:"PersonID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"pple_ksa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:3:"KSA";O:9:"viewfield":16:{s:4:"name";s:3:"KSA";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"pple_ksa";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"pple_ksa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:5:"Level";O:9:"viewfield":16:{s:4:"name";s:5:"Level";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"pple_ksa";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"pple_ksa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"DaysRemaining";O:9:"viewfield":16:{s:4:"name";s:13:"DaysRemaining";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:14:"Days Remaining";s:8:"dataType";s:8:"pple_ksa";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"pple_ksa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:4:"Type";O:9:"viewfield":16:{s:4:"name";s:4:"Type";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"pple_ksa";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"pple_ksa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:6301:"SELECT COUNT(*) FROM ( SELECT `inv1`.PersonInvolvedID AS PersonID,`trak`.KSAID AS KSAID,NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,`trak`.LevelID AS LevelID,NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ksa2`.KSATitle,\'\'),\' (\',IFNULL(`ksa2`.KSAAbbr,\'\'),\')\'),\' ()\'),\'\'),\' - \',IFNULL(`cod1`.Description,\'\')),\' - \') AS Level,CASE WHEN DATEDIFF(CASE `tra1`.ValidityUnitID 
                WHEN 48 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity SECOND)
                WHEN 5 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MINUTE)
                WHEN 19 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity HOUR)
                WHEN 53 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity DAY)
                WHEN 54 THEN 
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (7 * `tra1`.Validity) DAY)
                WHEN 55 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MONTH)
                WHEN 56 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (3 * `tra1`.Validity) MONTH)
                WHEN 57 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity YEAR)
                ELSE
                    NULL
                END, NOW()) > 0 THEN DATEDIFF(CASE `tra1`.ValidityUnitID 
                WHEN 48 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity SECOND)
                WHEN 5 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MINUTE)
                WHEN 19 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity HOUR)
                WHEN 53 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity DAY)
                WHEN 54 THEN 
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (7 * `tra1`.Validity) DAY)
                WHEN 55 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MONTH)
                WHEN 56 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (3 * `tra1`.Validity) MONTH)
                WHEN 57 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity YEAR)
                ELSE
                    NULL
                END, NOW()) ELSE 0 END AS DaysRemaining,\'Training\' AS Type FROM `trak` inner JOIN `tracl` AS `tracl` ON (`trak`.CourseID = `tracl`.CourseID) LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`trak`.KSAID = `ksa1`.KSAID ) LEFT OUTER JOIN `ksal` AS ksal1 
   ON (`trak`.LevelID = `ksal1`.LevelID ) inner JOIN `traas` AS `traas` ON (`tracl`.TrainingClassID = `traas`.TrainingClassID) LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksal1`.KSALevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'267\') LEFT OUTER JOIN `ksa` AS ksa2 
   ON (`ksal1`.KSAID = `ksa2`.KSAID ) LEFT OUTER JOIN `inv` AS inv1 
    ON (`traas`.AttendeeSchedID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'traas\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'57\') LEFT OUTER JOIN `tracl` AS tracl1 
   ON (`traas`.TrainingClassID = `tracl1`.TrainingClassID ) LEFT OUTER JOIN `tra` AS tra1 
   ON (`tracl1`.CourseID = `tra1`.CourseID ) WHERE `trak`._Deleted = 0  AND CASE WHEN DATEDIFF(CASE `tra1`.ValidityUnitID 
                WHEN 48 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity SECOND)
                WHEN 5 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MINUTE)
                WHEN 19 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity HOUR)
                WHEN 53 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity DAY)
                WHEN 54 THEN 
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (7 * `tra1`.Validity) DAY)
                WHEN 55 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MONTH)
                WHEN 56 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (3 * `tra1`.Validity) MONTH)
                WHEN 57 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity YEAR)
                ELSE
                    NULL
                END, NOW()) > 0 THEN DATEDIFF(CASE `tra1`.ValidityUnitID 
                WHEN 48 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity SECOND)
                WHEN 5 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MINUTE)
                WHEN 19 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity HOUR)
                WHEN 53 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity DAY)
                WHEN 54 THEN 
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (7 * `tra1`.Validity) DAY)
                WHEN 55 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MONTH)
                WHEN 56 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (3 * `tra1`.Validity) MONTH)
                WHEN 57 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity YEAR)
                ELSE
                    NULL
                END, NOW()) ELSE 0 END > \'0\' UNION SELECT `pplek`.PersonID AS PersonID,`pplek`.KSAID AS KSAID,NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,`pplek`.LevelID AS LevelID,NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ksa2`.KSATitle,\'\'),\' (\',IFNULL(`ksa2`.KSAAbbr,\'\'),\')\'),\' ()\'),\'\'),\' - \',IFNULL(`cod2`.Description,\'\')),\' - \') AS Level,\'n/a\' AS DaysRemaining,\'Experience\' AS Type FROM `pplek`  LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`pplek`.KSAID = `ksa1`.KSAID ) LEFT OUTER JOIN `ksal` AS ksal1 
   ON (`pplek`.LevelID = `ksal1`.LevelID ) LEFT OUTER JOIN `cod` AS cod2 
   ON (`ksal1`.KSALevelID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'267\') LEFT OUTER JOIN `ksa` AS ksa2 
   ON (`ksal1`.KSAID = `ksa2`.KSAID ) WHERE `pplek`._Deleted = 0  ) AS pple_ksa WHERE 1=1 ";s:7:"listSQL";s:6350:"SELECT PersonID, KSAID, KSA, LevelID, Level, DaysRemaining, Type FROM ( SELECT `inv1`.PersonInvolvedID AS PersonID,`trak`.KSAID AS KSAID,NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,`trak`.LevelID AS LevelID,NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ksa2`.KSATitle,\'\'),\' (\',IFNULL(`ksa2`.KSAAbbr,\'\'),\')\'),\' ()\'),\'\'),\' - \',IFNULL(`cod1`.Description,\'\')),\' - \') AS Level,CASE WHEN DATEDIFF(CASE `tra1`.ValidityUnitID 
                WHEN 48 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity SECOND)
                WHEN 5 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MINUTE)
                WHEN 19 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity HOUR)
                WHEN 53 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity DAY)
                WHEN 54 THEN 
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (7 * `tra1`.Validity) DAY)
                WHEN 55 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MONTH)
                WHEN 56 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (3 * `tra1`.Validity) MONTH)
                WHEN 57 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity YEAR)
                ELSE
                    NULL
                END, NOW()) > 0 THEN DATEDIFF(CASE `tra1`.ValidityUnitID 
                WHEN 48 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity SECOND)
                WHEN 5 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MINUTE)
                WHEN 19 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity HOUR)
                WHEN 53 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity DAY)
                WHEN 54 THEN 
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (7 * `tra1`.Validity) DAY)
                WHEN 55 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MONTH)
                WHEN 56 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (3 * `tra1`.Validity) MONTH)
                WHEN 57 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity YEAR)
                ELSE
                    NULL
                END, NOW()) ELSE 0 END AS DaysRemaining,\'Training\' AS Type FROM `trak` inner JOIN `tracl` AS `tracl` ON (`trak`.CourseID = `tracl`.CourseID) LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`trak`.KSAID = `ksa1`.KSAID ) LEFT OUTER JOIN `ksal` AS ksal1 
   ON (`trak`.LevelID = `ksal1`.LevelID ) inner JOIN `traas` AS `traas` ON (`tracl`.TrainingClassID = `traas`.TrainingClassID) LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksal1`.KSALevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'267\') LEFT OUTER JOIN `ksa` AS ksa2 
   ON (`ksal1`.KSAID = `ksa2`.KSAID ) LEFT OUTER JOIN `inv` AS inv1 
    ON (`traas`.AttendeeSchedID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'traas\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'57\') LEFT OUTER JOIN `tracl` AS tracl1 
   ON (`traas`.TrainingClassID = `tracl1`.TrainingClassID ) LEFT OUTER JOIN `tra` AS tra1 
   ON (`tracl1`.CourseID = `tra1`.CourseID ) WHERE `trak`._Deleted = 0  AND CASE WHEN DATEDIFF(CASE `tra1`.ValidityUnitID 
                WHEN 48 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity SECOND)
                WHEN 5 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MINUTE)
                WHEN 19 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity HOUR)
                WHEN 53 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity DAY)
                WHEN 54 THEN 
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (7 * `tra1`.Validity) DAY)
                WHEN 55 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MONTH)
                WHEN 56 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (3 * `tra1`.Validity) MONTH)
                WHEN 57 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity YEAR)
                ELSE
                    NULL
                END, NOW()) > 0 THEN DATEDIFF(CASE `tra1`.ValidityUnitID 
                WHEN 48 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity SECOND)
                WHEN 5 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MINUTE)
                WHEN 19 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity HOUR)
                WHEN 53 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity DAY)
                WHEN 54 THEN 
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (7 * `tra1`.Validity) DAY)
                WHEN 55 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity MONTH)
                WHEN 56 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL (3 * `tra1`.Validity) MONTH)
                WHEN 57 THEN
                    DATE_ADD(`tracl1`.ClassStartTime, INTERVAL `tra1`.Validity YEAR)
                ELSE
                    NULL
                END, NOW()) ELSE 0 END > \'0\' UNION SELECT `pplek`.PersonID AS PersonID,`pplek`.KSAID AS KSAID,NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,`pplek`.LevelID AS LevelID,NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ksa2`.KSATitle,\'\'),\' (\',IFNULL(`ksa2`.KSAAbbr,\'\'),\')\'),\' ()\'),\'\'),\' - \',IFNULL(`cod2`.Description,\'\')),\' - \') AS Level,\'n/a\' AS DaysRemaining,\'Experience\' AS Type FROM `pplek`  LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`pplek`.KSAID = `ksa1`.KSAID ) LEFT OUTER JOIN `ksal` AS ksal1 
   ON (`pplek`.LevelID = `ksal1`.LevelID ) LEFT OUTER JOIN `cod` AS cod2 
   ON (`ksal1`.KSALevelID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'267\') LEFT OUTER JOIN `ksa` AS ksa2 
   ON (`ksal1`.KSAID = `ksa2`.KSAID ) WHERE `pplek`._Deleted = 0  ) AS pple_ksa WHERE 1=1 ";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:8:"PersonID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:8:"PersonID";s:8:"pple_ksa";s:3:"KSA";s:8:"pple_ksa";s:5:"Level";s:8:"pple_ksa";s:13:"DaysRemaining";s:8:"pple_ksa";s:4:"Type";s:8:"pple_ksa";}s:4:"name";N;s:10:"isDataView";b:1;s:10:"fieldAlign";a:5:{s:8:"PersonID";s:4:"left";s:3:"KSA";s:4:"left";s:5:"Level";s:4:"left";s:13:"DaysRemaining";s:4:"left";s:4:"Type";s:4:"left";}}');;
?>