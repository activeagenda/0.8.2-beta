<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:12:{s:8:"PersonID";O:9:"viewfield":16:{s:4:"name";s:8:"PersonID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Person ID|Automatically assigned number used to track the contact information for people";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Organization|The organization the employee reports to";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"LastName";O:9:"viewfield":16:{s:4:"name";s:8:"LastName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:38:"Last Name|Family Name of an individual";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"FirstName";O:9:"viewfield":16:{s:4:"name";s:9:"FirstName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:38:"First Name|Given Name of an individual";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"DisplayName";O:9:"viewfield":16:{s:4:"name";s:11:"DisplayName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Display Name|Commonly used name of an individual used to display throughout this application";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"EmployeeNo";O:9:"viewfield":16:{s:4:"name";s:10:"EmployeeNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Employee Number|A uniques number assigned by the organization to each employee for tracking purposes";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"OrgJobTitle";O:9:"viewfield":16:{s:4:"name";s:11:"OrgJobTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:56:"Current Job Title|The job title occupied by the employee";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"WorkAddress";O:9:"viewfield":16:{s:4:"name";s:11:"WorkAddress";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Work Address|Physical street address where the person can be located at work";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"FullWorkPhone";O:9:"viewfield":16:{s:4:"name";s:13:"FullWorkPhone";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Work Phone|Telephone number of the individual at their place of work";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"WorkFax";O:9:"viewfield":16:{s:4:"name";s:7:"WorkFax";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Work Fax|Facsimile telephone number of the individual at work";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"MobilePhone";O:9:"viewfield":16:{s:4:"name";s:11:"MobilePhone";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Mobile Phone Number|Mobile telephone number";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"WorkEmail";O:9:"viewfield":16:{s:4:"name";s:9:"WorkEmail";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Work Email|Email address used by the individual at work";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:9:"WorkEmail";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Employment Record");

//field value array
$data = array(
        'PersonID' => '',
         'Organization' => '',
         'LastName' => '',
         'FirstName' => '',
         'DisplayName' => '',
         'EmployeeNo' => '',
         'OrgJobTitle' => '',
         'WorkAddress' => '',
         'FullWorkPhone' => '',
         'WorkFax' => '',
         'MobilePhone' => '',
         'WorkEmail' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:749:"SELECT 
   `ppld`.DependentID,
   `ppld`.LastName,
   `ppld`.FirstName,
   `ppld`.MiddleName,
   `cod1`.Description AS Relationship,
   `ppld`.RelationshipID,
   `cod2`.Description AS DepGender,
   `ppld`.DepGenderID,
   `ppld`.DepBirthdate,
   `ppld`.DepAge,
   `ppld`.DepSocialSecNo,
   `ppld`.Employed,
   `ppld`.SpecialFactors,
   `ppl1`.OrganizationID AS OrganizationID
FROM `ppld`
   
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ppld`.RelationshipID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'78\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`ppld`.DepGenderID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'133\')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ppld`.EmployeePersonID = `ppl1`.PersonID )
WHERE
   ppld.DependentID=\'/**RowID**/\'";s:9:"getRowSQL";s:602:"SELECT 
   `ppld`.DependentID,
   `ppld`.LastName,
   `ppld`.FirstName,
   `cod1`.Description AS Relationship,
   `cod2`.Description AS DepGender,
   `ppld`.DepAge,
   `ppld`.Employed,
   `ppl1`.OrganizationID AS OrganizationID
FROM `ppld`
   
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ppld`.RelationshipID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'78\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`ppld`.DepGenderID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'133\')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ppld`.EmployeePersonID = `ppl1`.PersonID )
WHERE
   ppld.DependentID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:11:{s:11:"DependentID";O:14:"invisiblefield":11:{s:4:"name";s:11:"DependentID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Dependent ID|A unique number assigned to each employee\'s\' dependent";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:8:"LastName";O:9:"editfield":14:{s:4:"name";s:8:"LastName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Last Name|Family name of the employee dependent";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:2:"50";s:5:"align";s:4:"left";}s:9:"FirstName";O:9:"editfield":14:{s:4:"name";s:9:"FirstName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"First Name|Given name of the employee dependent";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:2:"50";s:5:"align";s:4:"left";}s:10:"MiddleName";O:9:"editfield":14:{s:4:"name";s:10:"MiddleName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:60:"Middle Name|Middle name or initial of the employee dependent";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:2:"50";s:5:"align";s:4:"left";}s:14:"RelationshipID";O:14:"codecombofield":27:{s:4:"name";s:14:"RelationshipID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Relationship|The relationship of the dependent to the employee";s:8:"dataType";s:3:"int";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'78\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'78\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"ppld";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"78";}s:11:"DepGenderID";O:14:"codecombofield":27:{s:4:"name";s:11:"DepGenderID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:52:"Dependent Gender|Gender of the employee\'s dependent\'";s:8:"dataType";s:3:"int";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'133\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'133\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"ppld";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"133";}s:12:"DepBirthdate";O:9:"datefield":15:{s:4:"name";s:12:"DepBirthdate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Dependent Birthdate|The birth date of the employee\'s dependent";s:8:"dataType";s:4:"date";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";s:0:"";s:14:"conditionField";N;s:14:"conditionValue";N;}s:6:"DepAge";O:9:"viewfield":16:{s:4:"name";s:6:"DepAge";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"Dependent Age|Age of the employee\'s dependent which is automatically calculated using the birthdate and server date";s:8:"dataType";s:10:"varchar(5)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"DepSocialSecNo";O:9:"editfield":14:{s:4:"name";s:14:"DepSocialSecNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Dependent Social Security Number|The identification number assigned to individuals by the individual\'s country";s:8:"dataType";s:11:"varchar(25)";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"25";s:9:"maxLength";s:2:"25";s:5:"align";s:4:"left";}s:8:"Employed";O:13:"checkboxfield":14:{s:4:"name";s:8:"Employed";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Employed|Whether this dependent is employed";s:8:"dataType";s:4:"bool";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"SpecialFactors";O:9:"memofield":15:{s:4:"name";s:14:"SpecialFactors";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:122:"Additional Information|Any additional information relative to the dependent which may be of importance to the organization";s:8:"dataType";s:12:"varchar(255)";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:11:"DependentID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"ppld";s:6:"phrase";s:10:"Dependents";s:6:"number";i:1;s:6:"Fields";a:7:{s:11:"DependentID";O:14:"invisiblefield":11:{s:4:"name";s:11:"DependentID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Dependent ID|A unique number assigned to each employee\'s\' dependent";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:8:"LastName";O:9:"viewfield":16:{s:4:"name";s:8:"LastName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Last Name|Family name of the employee dependent";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"FirstName";O:9:"viewfield":16:{s:4:"name";s:9:"FirstName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"First Name|Given name of the employee dependent";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Relationship";O:9:"viewfield":16:{s:4:"name";s:12:"Relationship";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Relationship|The relationship of the dependent to the employee";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"DepGender";O:9:"viewfield":16:{s:4:"name";s:9:"DepGender";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:52:"Dependent Gender|Gender of the employee\'s dependent\'";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"DepAge";O:9:"viewfield":16:{s:4:"name";s:6:"DepAge";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"Dependent Age|Age of the employee\'s dependent which is automatically calculated using the birthdate and server date";s:8:"dataType";s:10:"varchar(5)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Employed";O:9:"viewfield":16:{s:4:"name";s:8:"Employed";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Employed|Whether this dependent is employed";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ppld";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:112:"SELECT 
    count(*) 
FROM `ppld`
   
WHERE ppld._Deleted = 0
   AND `ppld`.EmployeePersonID = \'/**RecordID**/\'
";s:7:"listSQL";s:605:"SELECT 
   `ppld`.DependentID,
`ppl1`.OrganizationID AS OrganizationID,
`ppld`.LastName,
`ppld`.FirstName,
`cod1`.Description AS Relationship,
`cod2`.Description AS DepGender,
`ppld`.DepAge,
`ppld`.Employed
FROM `ppld`

   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ppld`.EmployeePersonID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`ppld`.RelationshipID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'78\')
   LEFT OUTER JOIN `cod` AS cod2 
   ON (`ppld`.DepGenderID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'133\')
WHERE ppld._Deleted = 0
AND `ppld`.EmployeePersonID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:16:"EmployeePersonID";s:9:"parentKey";s:8:"PersonID";s:8:"PKFields";a:1:{i:0;s:11:"DependentID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');


    /**guidanceGrid**/

    $PKField = 'PersonID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Emergency";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    include_once(INCLUDE_PATH . '/ppleCustomizations.php');
$custom_employee_status = verifyEmployeeRecord();
loadPersonRecord('Form');


    $getSQL = "SELECT 
   `pple`.PersonID,
   `org1`.Name AS Organization,
   `ppl1`.LastName AS LastName,
   `ppl1`.FirstName AS FirstName,
   `ppl1`.DisplayName AS DisplayName,
   `pple`.EmployeeNo,
   NULLIF(CONCAT(IFNULL(`orgjt1`.JobTitleName,'')),'') AS OrgJobTitle,
   NULLIF(CONCAT(IFNULL(`ppl1`.WorkAddress1,''),'<br />',IFNULL(`ppl1`.WorkAddress2,''),'<br />',IFNULL(`ppl1`.WorkCity,''),', ',IFNULL(NULLIF(CONCAT(IFNULL(`sta3`.StateName,''),' (',IFNULL(`sta3`.StateAbbreviation,''),')'),' ()'),''),' ',IFNULL(`ppl1`.WorkPostalCode,''),'<br />',IFNULL(NULLIF(CONCAT(IFNULL(`ctr3`.CountryName,''),' (',IFNULL(`ctr3`.CountryAbbreviation,''),')'),' ()'),'')),'<br /><br />,  <br />') AS WorkAddress,
   NULLIF(CONCAT(IFNULL(`ppl1`.WorkPhone,''),', ext. ',IFNULL(`ppl1`.WorkExtension,'')),', ext. ') AS FullWorkPhone,
   `ppl1`.WorkFax AS WorkFax,
   `ppl1`.MobilePhone AS MobilePhone,
   `ppl1`.WorkEmail AS WorkEmail,
   NULLIF(CONCAT(IFNULL(`ppl1`.LastName,''),', ',IFNULL(`ppl1`.FirstName,''),' (',IFNULL(`ppl1`.DisplayName,''),') | ',IFNULL(`pple`.EmployeeNo,'')),',  () | ') AS RecordLabel,
   `ppl1`.OrganizationID AS OrganizationID
FROM `pple`
   
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`pple`.PersonID = `ppl1`.PersonID )
     LEFT OUTER JOIN `orgja` AS orgja1 
    ON (`pple`.PersonID = `orgja1`.RelatedRecordID 
     AND `orgja1`.RelatedModuleID = 'pple'
     AND `orgja1`._Deleted = 0)
     LEFT OUTER JOIN `org` AS org1 
   ON (`ppl1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cti` AS cti3 
   ON (`ppl1`.WorkCountyID = `cti3`.CountyID )
     LEFT OUTER JOIN `orgjt` AS orgjt1 
   ON (`orgja1`.OrgJobTitleID = `orgjt1`.OrgJobTitleID )
     LEFT OUTER JOIN `sta` AS sta3 
   ON (`cti3`.StateID = `sta3`.StateID )
     LEFT OUTER JOIN `ctr` AS ctr3 
   ON (`sta3`.CountryID = `ctr3`.CountryID )
WHERE
   pple.PersonID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if(EMPLOYEE_STATUS_NO_RECORD !== $custom_employee_status){

        $existing = true;

        $pageTitle = gettext("Employment Record");
        $screenPhrase = gettext("Dependents|Associate dependents with an employee");

        if(EMPLOYEE_STATUS_CURRENT === $custom_employee_status){


        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        }

    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Employment Records");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'PersonID' => gettext("Person ID|Automatically assigned number used to track the contact information for people"),
   'Organization' => gettext("Organization|The organization the employee reports to"),
   'LastName' => gettext("Last Name|Family Name of an individual"),
   'FirstName' => gettext("First Name|Given Name of an individual"),
   'DisplayName' => gettext("Display Name|Commonly used name of an individual used to display throughout this application"),
   'EmployeeNo' => gettext("Employee Number|A uniques number assigned by the organization to each employee for tracking purposes"),
   'OrgJobTitle' => gettext("Current Job Title|The job title occupied by the employee"),
   'WorkAddress' => gettext("Work Address|Physical street address where the person can be located at work"),
   'FullWorkPhone' => gettext("Work Phone|Telephone number of the individual at their place of work"),
   'WorkFax' => gettext("Work Fax|Facsimile telephone number of the individual at work"),
   'MobilePhone' => gettext("Mobile Phone Number|Mobile telephone number"),
   'WorkEmail' => gettext("Work Email|Email address used by the individual at work")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    $existing = true;


    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Employment Records"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Employment Record") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about an employment record") );
      $tempTabs['WorkContact'] = array( "edit.php?scr=WorkContact&$tabsQS", gettext("Work Contact|Edit the work address and contact information of an employee") );
      $tempTabs['Employment'] = array( "edit.php?scr=Employment&$tabsQS", gettext("Employment|Edit summary information about the employment details of an employee") );
      $tempTabs['JobHistory'] = array( "edit.php?scr=JobHistory&$tabsQS", gettext("Job History|Associate job title history with an employee") );
      $tempTabs['Availability'] = array( "edit.php?scr=Availability&$tabsQS", gettext("Availability|Associate availability modifications with an employee") );
      $tempTabs['PersonalData'] = array( "edit.php?scr=PersonalData&$tabsQS", gettext("Personal Data|Edit personal information for an employee") );
      $tempTabs['Dependents'] = array( "", gettext("Dependents|Associate dependents with an employee") );
      $tempTabs['Emergency'] = array( "edit.php?scr=Emergency&$tabsQS", gettext("Emergency Contacts|Associate emergency contacts with an employee") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate business agreements and/or contracts with an employee") );
      $tempTabs['PriorWork'] = array( "edit.php?scr=PriorWork&$tabsQS", gettext("Prior Work|Associate prior employment with an employee") );
      $tempTabs['Qualifications'] = array( "edit.php?scr=Qualifications&$tabsQS", gettext("Qualifications|Associate qualifications with an employee") );
      $tempTabs['KSAExperience'] = array( "edit.php?scr=KSAExperience&$tabsQS", gettext("KSA Experience|Associate knowledge, skills, and abilities, based on experience, with an employee") );
      $tempTabs['DriverInfo'] = array( "edit.php?scr=DriverInfo&$tabsQS", gettext("Driver's Information|Edit summary information about the driving qualifications of an employee") );
      $tempTabs['Citizenship'] = array( "edit.php?scr=Citizenship&$tabsQS", gettext("Citizenship|Edit summary information about the citizenship of an employee") );
      $tempTabs['BasicInfo'] = array( "edit.php?mdl=ppl&rid=$recordID", gettext("Contact Info|Contact info for this person") );
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Dependents'] = array( "", gettext("New Employment Record") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>