<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    $phrases[0] = array(
   'CodeTypeID' => gettext("Record ID|A number used to track code records."),
   'Name' => gettext("Name|The name of this code type"),
   'Description' => gettext("Description|A clarifying descrition of the code type"),
   'UseValue' => gettext("Use Value For IDs|When true, any combo box that uses this code type will have IDs reflected as in the Value field of the 'cod' table. This allows for duplicate values as well as using the value 0"),
   'Dependencies' => gettext("Dependencies|A calculated field representing the number of module dependent upon the code type"),
   'Items' => gettext("Items|A calculated field representing the number of items associated with the code type")
   );


    $sections = unserialize('a:2:{i:0;a:3:{s:6:"phrase";s:9:"Code Type";s:3:"sql";s:731:"SELECT 
   `codt`.CodeTypeID,
   `codt`.Name,
   `codt`.Description,
   `codt`.UseValue,
   `codtd1`.Dependencies AS Dependencies,
   `cod1`.Items AS Items,
   NULLIF(CONCAT(IFNULL(`codt`.Name,\'\'),\' | \',IFNULL(`codt`.CodeTypeID,\'\')),\' | \') AS RecordLabel
FROM `codt`
   
     LEFT OUTER JOIN (SELECT 
COUNT(`codtd`.DependencyID) AS Dependencies,
`codtd`.CodeTypeID FROM `codtd` 
 WHERE `codtd`._Deleted = 0 
GROUP BY `codtd`.CodeTypeID 
) AS codtd1 
ON (`codt`.CodeTypeID = codtd1.CodeTypeID) 
     LEFT OUTER JOIN (SELECT 
COUNT(`cod`.CodeID) AS Items,
`cod`.CodeTypeID FROM `cod` 
 WHERE `cod`._Deleted = 0 
GROUP BY `cod`.CodeTypeID 
) AS cod1 
ON (`codt`.CodeTypeID = cod1.CodeTypeID) 
WHERE
   codt.CodeTypeID=\'/**RecordID**/\'";s:6:"fields";a:6:{s:10:"CodeTypeID";O:9:"viewfield":16:{s:4:"name";s:10:"CodeTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:46:"Record ID|A number used to track code records.";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:4:"Name";O:9:"viewfield":16:{s:4:"name";s:4:"Name";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:31:"Name|The name of this code type";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"Description";O:9:"viewfield":16:{s:4:"name";s:11:"Description";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:52:"Description|A clarifying descrition of the code type";s:8:"dataType";s:12:"varchar(255)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"UseValue";O:9:"viewfield":16:{s:4:"name";s:8:"UseValue";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:195:"Use Value For IDs|When true, any combo box that uses this code type will have IDs reflected as in the Value field of the \'cod\' table. This allows for duplicate values as well as using the value 0";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Dependencies";O:9:"viewfield":16:{s:4:"name";s:12:"Dependencies";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Dependencies|A calculated field representing the number of module dependent upon the code type";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:5:"Items";O:9:"viewfield":16:{s:4:"name";s:5:"Items";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Items|A calculated field representing the number of items associated with the code type";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}}i:1;a:2:{s:6:"phrase";s:12:"Associations";s:5:"grids";a:2:{s:14:"viewgrid_codtd";O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"codtd";s:6:"phrase";s:22:"Code Type Dependencies";s:6:"number";N;s:6:"Fields";a:3:{s:20:"CodeTypeDependencyID";O:14:"invisiblefield":11:{s:4:"name";s:20:"CodeTypeDependencyID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Record ID|An automatically assigned number used to associate code type dependencies with dependent modules";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"codtd";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"DependencyID";O:9:"viewfield":16:{s:4:"name";s:12:"DependencyID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Module ID|The name of the module dependent upon the code type";s:8:"dataType";s:10:"varchar(5)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"codtd";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Dependency";O:9:"viewfield":16:{s:4:"name";s:10:"Dependency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Dependent Module|The name of the module dependent upon the code type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"codtd";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:109:"SELECT 
    count(*) 
FROM `codtd`
   
WHERE codtd._Deleted = 0
   AND `codtd`.CodeTypeID = \'/**RecordID**/\'
";s:7:"listSQL";s:253:"SELECT 
   `codtd`.CodeTypeDependencyID,
`codtd`.DependencyID,
`mod1`.Name AS Dependency
FROM `codtd`

   LEFT OUTER JOIN `mod` AS mod1 
   ON (`codtd`.DependencyID = `mod1`.ModuleID )
WHERE codtd._Deleted = 0
AND `codtd`.CodeTypeID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:10:"CodeTypeID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:20:"CodeTypeDependencyID";s:3:"int";s:12:"DependencyID";s:10:"varchar(5)";s:10:"Dependency";N;}s:4:"name";N;s:10:"fieldAlign";a:3:{s:20:"CodeTypeDependencyID";s:5:"right";s:12:"DependencyID";s:4:"left";s:10:"Dependency";s:4:"left";}}s:12:"viewgrid_cod";O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"cod";s:6:"phrase";s:10:"Code Items";s:6:"number";N;s:6:"Fields";a:5:{s:6:"CodeID";O:9:"viewfield":16:{s:4:"name";s:6:"CodeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:6:"CodeID";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"cod";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"CodeTypeID";O:14:"invisiblefield":11:{s:4:"name";s:10:"CodeTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"cod";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:11:"Description";O:9:"viewfield":16:{s:4:"name";s:11:"Description";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:11:"Description";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"cod";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"SortOrder";O:9:"viewfield":16:{s:4:"name";s:9:"SortOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:9:"SortOrder";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"cod";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:5:"Value";O:9:"viewfield":16:{s:4:"name";s:5:"Value";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:5:"Value";s:8:"dataType";s:11:"varchar(25)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"cod";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:103:"SELECT 
    count(*) 
FROM `cod`
   
WHERE cod._Deleted = 0
   AND `cod`.CodeTypeID = \'/**RecordID**/\'
";s:7:"listSQL";s:167:"SELECT 
   `cod`.CodeID,
`cod`.CodeTypeID,
`cod`.Description,
`cod`.SortOrder,
`cod`.Value
FROM `cod`

WHERE cod._Deleted = 0
AND `cod`.CodeTypeID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:10:"CodeTypeID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:6:"CodeID";s:3:"int";s:10:"CodeTypeID";s:3:"int";s:11:"Description";s:12:"varchar(128)";s:9:"SortOrder";s:3:"int";s:5:"Value";s:11:"varchar(25)";}s:4:"name";N;s:10:"fieldAlign";a:5:{s:6:"CodeID";s:5:"right";s:10:"CodeTypeID";s:5:"right";s:11:"Description";s:4:"left";s:9:"SortOrder";s:5:"right";s:5:"Value";s:4:"left";}}}}}');

?>