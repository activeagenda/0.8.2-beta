<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:23:{s:15:"TrainingClassID";O:9:"viewfield":16:{s:4:"name";s:15:"TrainingClassID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Record ID|An automatically assigned number used to track meetings held by the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:140:"Organization|The organization with primary responsibility for the design, development, and support for this course throughout the enterprise";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:59:"Class Location|The location of the scheduled training class";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"TrainingCategory";O:9:"viewfield":16:{s:4:"name";s:16:"TrainingCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Training Category|A word or short phrase used to describe the category of training";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"TrainingType";O:9:"viewfield":16:{s:4:"name";s:12:"TrainingType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Training Type|A combined field used to describe this training type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Course";O:9:"viewfield":16:{s:4:"name";s:6:"Course";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Course|A combined field used to describe this course when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"CourseCode";O:9:"viewfield":16:{s:4:"name";s:10:"CourseCode";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:156:"Course Code|A unique code used to identify a course offering. A course code can include numbers, letters and special characters; such as, dashes and periods";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"CourseDesc";O:9:"viewfield":16:{s:4:"name";s:10:"CourseDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:48:"Description|A detailed description of the course";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"CourseObj";O:9:"viewfield":16:{s:4:"name";s:9:"CourseObj";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:157:"Objective|A detailed description of the course objective. The course objective should reflect the knowledge expected of attendees as they complete the course";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"TrainingTypeDesc";O:9:"viewfield":16:{s:4:"name";s:16:"TrainingTypeDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Training Type Description|A detailed description of the training type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"OrgLevel";O:9:"viewfield":16:{s:4:"name";s:8:"OrgLevel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Organization Level|The hierarchical level of the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"MinClassSize";O:9:"viewfield":16:{s:4:"name";s:12:"MinClassSize";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Minimum Class Size|The minimum number of attendees required for a class to be conducted";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"MaxClassSize";O:9:"viewfield":16:{s:4:"name";s:12:"MaxClassSize";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Maximum Class Size|The maximum number of attendees allowed for this course";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"CoursePrep";O:9:"viewfield":16:{s:4:"name";s:10:"CoursePrep";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Preparation|A detailed description of the preparation required by attendees of the course in advance of class attendance";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"SpecialPreparation";O:9:"viewfield":16:{s:4:"name";s:18:"SpecialPreparation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:206:"Special Preparation|A detailed description of any special preparation required prior to attending the class. This preparation is in addition to the general preparation associated with the course description";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ClassStartTime";O:9:"viewfield":16:{s:4:"name";s:14:"ClassStartTime";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Start Time|The date and time the training class is scheduled to begin";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ClassEndTime";O:9:"viewfield":16:{s:4:"name";s:12:"ClassEndTime";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:172:"End Time|The date and time the training class is scheduled to end. The class end date and time is automatically calculated based on the class begin time and course duration";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:10:"Instructor";O:9:"viewfield":16:{s:4:"name";s:10:"Instructor";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Primary Instructor|The primary instructor of the training course class";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Contact";O:9:"viewfield":16:{s:4:"name";s:7:"Contact";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Primary Contact|The primary contact, liaison, and/or registrar for the scheduled class";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"ContactCard";O:9:"viewfield":16:{s:4:"name";s:11:"ContactCard";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Contact Card|A combined field used to group basic contact information of a person";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"ClassStatus";O:9:"viewfield":16:{s:4:"name";s:11:"ClassStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:59:"Class Status|Present status of the scheduled training class";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"IssuesDiscussed";O:9:"viewfield":16:{s:4:"name";s:15:"IssuesDiscussed";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:104:"Issues Discussed|A detailed description of issues discussed or concerns raised during the training class";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IsBestPractice";O:14:"invisiblefield":11:{s:4:"name";s:14:"IsBestPractice";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'TrainingClassID' => gettext("Record ID|An automatically assigned number used to track meetings held by the organization"),
   'Organization' => gettext("Organization|The organization with primary responsibility for the design, development, and support for this course throughout the enterprise"),
   'Location' => gettext("Class Location|The location of the scheduled training class"),
   'TrainingCategory' => gettext("Training Category|A word or short phrase used to describe the category of training"),
   'TrainingType' => gettext("Training Type|A combined field used to describe this training type when associating it with other records"),
   'Course' => gettext("Course|A combined field used to describe this course when associating it with other records"),
   'CourseCode' => gettext("Course Code|A unique code used to identify a course offering. A course code can include numbers, letters and special characters; such as, dashes and periods"),
   'CourseDesc' => gettext("Description|A detailed description of the course"),
   'CourseObj' => gettext("Objective|A detailed description of the course objective. The course objective should reflect the knowledge expected of attendees as they complete the course"),
   'TrainingTypeDesc' => gettext("Training Type Description|A detailed description of the training type"),
   'OrgLevel' => gettext("Organization Level|The hierarchical level of the organization"),
   'MinClassSize' => gettext("Minimum Class Size|The minimum number of attendees required for a class to be conducted"),
   'MaxClassSize' => gettext("Maximum Class Size|The maximum number of attendees allowed for this course"),
   'CoursePrep' => gettext("Preparation|A detailed description of the preparation required by attendees of the course in advance of class attendance"),
   'SpecialPreparation' => gettext("Special Preparation|A detailed description of any special preparation required prior to attending the class. This preparation is in addition to the general preparation associated with the course description"),
   'ClassStartTime' => gettext("Start Time|The date and time the training class is scheduled to begin"),
   'ClassEndTime' => gettext("End Time|The date and time the training class is scheduled to end. The class end date and time is automatically calculated based on the class begin time and course duration"),
   'Instructor' => gettext("Primary Instructor|The primary instructor of the training course class"),
   'Contact' => gettext("Primary Contact|The primary contact, liaison, and/or registrar for the scheduled class"),
   'ContactCard' => gettext("Contact Card|A combined field used to group basic contact information of a person"),
   'ClassStatus' => gettext("Class Status|Present status of the scheduled training class"),
   'IssuesDiscussed' => gettext("Issues Discussed|A detailed description of issues discussed or concerns raised during the training class"),
   'IsBestPractice' => gettext("Is Best Practice|Whether the associated record is a best practice")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    $useBestPractices = true;

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `tracl`.TrainingClassID,
   `org1`.Name AS Organization,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir2`.RoomName,`orgl1`.LocationName),'') AS Location,
   `cod1`.Description AS TrainingCategory,
   NULLIF(CONCAT(IFNULL(`cod2`.Description,''),' - ',IFNULL(`trat1`.TrainingTypeTitle,'')),' - ') AS TrainingType,
   NULLIF(CONCAT(IFNULL(`tra1`.CourseTitle,''),' (',IFNULL(`tra1`.CourseCode,''),')'),' ()') AS Course,
   `tra1`.CourseCode AS CourseCode,
   `tra1`.CourseDesc AS CourseDesc,
   `tra1`.CourseObj AS CourseObj,
   `trat1`.TrainingTypeDesc AS TrainingTypeDesc,
   `cod3`.Description AS OrgLevel,
   `tra1`.MinClassSize AS MinClassSize,
   `tra1`.MaxClassSize AS MaxClassSize,
   `tra1`.CoursePrep AS CoursePrep,
   `tracl`.SpecialPreparation,
   `tracl`.ClassStartTime,
   CASE `tra1`.TimeUnitID 
                WHEN 48 THEN
                    DATE_ADD(`tracl`.ClassStartTime, INTERVAL `tra1`.Duration SECOND)
                WHEN 5 THEN
                    DATE_ADD(`tracl`.ClassStartTime, INTERVAL `tra1`.Duration MINUTE)
                WHEN 19 THEN
                    DATE_ADD(`tracl`.ClassStartTime, INTERVAL `tra1`.Duration HOUR)
                WHEN 53 THEN
                    DATE_ADD(`tracl`.ClassStartTime, INTERVAL `tra1`.Duration DAY)
                WHEN 54 THEN 
                    DATE_ADD(`tracl`.ClassStartTime, INTERVAL (7 * `tra1`.Duration) DAY)
                WHEN 55 THEN
                    DATE_ADD(`tracl`.ClassStartTime, INTERVAL `tra1`.Duration MONTH)
                WHEN 56 THEN
                    DATE_ADD(`tracl`.ClassStartTime, INTERVAL (3 * `tra1`.Duration) MONTH)
                WHEN 57 THEN
                    DATE_ADD(`tracl`.ClassStartTime, INTERVAL `tra1`.Duration YEAR)
                ELSE
                    NULL
                END AS ClassEndTime,
   `ppl1`.DisplayName AS Instructor,
   `ppl2`.DisplayName AS Contact,
   NULLIF(CONCAT(IFNULL(`ppl2`.WorkPhone,''),', ext. ',IFNULL(`ppl2`.WorkExtension,''),' (work)','<br />',IFNULL(`ppl2`.MobilePhone,''),' (mobile)','<br />',IFNULL(`ppl2`.WorkFax,''),' (fax)',' <br /><a href=\"mailto:',IFNULL(`ppl2`.WorkEmail,''),'\">',IFNULL(`ppl2`.WorkEmail,''),'</a>'),', ext.  (work)<br /> (mobile)<br /> (fax) <br /><a href=\\\"mailto:\\\"></a>') AS ContactCard,
   `cod5`.Description AS ClassStatus,
   `tracl`.IssuesDiscussed,
   `bpc1`.IsBestPractice AS IsBestPractice,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`tra1`.CourseTitle,''),' (',IFNULL(`tra1`.CourseCode,''),')'),' ()'),''),' | ',IFNULL(`tracl`.ClassStartTime,'')),' | ') AS RecordLabel,
   `tracl`.OrganizationID
FROM `tracl`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`tracl`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`tracl`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `tra` AS tra1 
   ON (`tracl`.CourseID = `tra1`.CourseID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`tracl`.TrainingClassID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'tracl'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '129')
     LEFT OUTER JOIN `acc` AS acc2 
    ON (`tracl`.TrainingClassID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = 'tracl'
     AND `acc2`._Deleted = 0
     AND `acc2`.AccountabilityDescriptorID = '130')
     LEFT OUTER JOIN `cod` AS cod5 
   ON (`tracl`.ClassStatusID = `cod5`.CodeID 
     AND `cod5`.CodeTypeID = '241')
     LEFT OUTER JOIN (SELECT 
COUNT(`bpc`.BestPracticeID) AS IsBestPractice,
`bpc`.RelatedRecordID FROM `bpc` 
 WHERE `bpc`._Deleted = 0 
 AND 'tracl' = `bpc`.RelatedModuleID
GROUP BY `bpc`.RelatedRecordID 
) AS bpc1 
ON (`tracl`.TrainingClassID = bpc1.RelatedRecordID) 
     LEFT OUTER JOIN `buir` AS buir2 
   ON (`orgl1`.RoomID = `buir2`.RoomID )
     LEFT OUTER JOIN `trat` AS trat1 
   ON (`tra1`.TrainingTypeID = `trat1`.TrainingTypeID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`tra1`.OrgLevelID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '22')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`acc2`.PersonAccountableID = `ppl2`.PersonID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir2`.BuildingID = `bui1`.BuildingID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`trat1`.TrainingCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '59')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`trat1`.TrainingCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '59')
WHERE
   tracl.TrainingClassID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Training Classes"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a meeting") );
      $tempTabs['AttendeesScheduled'] = array( "edit.php?scr=AttendeesScheduled&$tabsQS", gettext("Attendees|Assign attendees to the scheduled training class") );
      $tempTabs['Completion'] = array( "edit.php?scr=Completion&$tabsQS", gettext("Completion|Identify employees that have completed the scheduled training class") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with the scheduled training course") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate accountable people with the scheduled training class") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate involved people with the scheduled training class") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the scheduled training class") , 'bpc');
      $tempTabs['RecordReports'] = array( "reports.php?scr=RecordReports&$tabsQS", gettext("Reports|View the training class reports") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Training Class") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Training Class");
    $screenPhrase = gettext("View|View summary information about a meeting");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
$content .= '<h1>'. gettext("Associations") .'</h1>';
$fields = '';
$phrases = array();
$SQL = '';
   $grids = array();
   $grids[1] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"traas";s:6:"phrase";s:19:"Attendees Scheduled";s:6:"number";i:1;s:6:"Fields";a:4:{s:15:"AttendeeSchedID";O:14:"invisiblefield":11:{s:4:"name";s:15:"AttendeeSchedID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Attendee ID|An automatically assigned number used to associate people with meetings";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traas";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:8:"Attendee";O:9:"viewfield":16:{s:4:"name";s:8:"Attendee";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:48:"Attendee|The person attending the training class";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traas";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Punctualness";O:9:"viewfield":16:{s:4:"name";s:12:"Punctualness";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Punctualness|The punctualness of the scheduled attendee";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traas";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"Completed";O:9:"viewfield":16:{s:4:"name";s:9:"Completed";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:51:"Completed|Whether the attendee completed the course";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traas";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:114:"SELECT 
    count(*) 
FROM `traas`
   
WHERE traas._Deleted = 0
   AND `traas`.TrainingClassID = \'/**RecordID**/\'
";s:7:"listSQL";s:776:"SELECT 
   `traas`.AttendeeSchedID,
NULLIF(CONCAT(IFNULL(`ppl1`.DisplayName,\'\'),\' - \',IFNULL(`org1`.ShortName,\'\')),\' - \') AS Attendee,
`cod1`.Description AS Punctualness,
`traas`.Completed
FROM `traas`

   LEFT OUTER JOIN `inv` AS inv1 
    ON (`traas`.AttendeeSchedID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'traas\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'57\')
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`traas`.PunctualnessID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'216\')
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`ppl1`.OrganizationID = `org1`.OrganizationID )
WHERE traas._Deleted = 0
AND `traas`.TrainingClassID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"TrainingClassID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:15:"AttendeeSchedID";s:3:"int";s:8:"Attendee";N;s:12:"Punctualness";N;s:9:"Completed";s:4:"bool";}s:4:"name";N;s:10:"fieldAlign";a:4:{s:15:"AttendeeSchedID";s:5:"right";s:8:"Attendee";s:7:"justify";s:12:"Punctualness";s:4:"left";s:9:"Completed";s:6:"center";}}');
   $grids[2] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prta";s:6:"phrase";s:16:"Accountabilities";s:6:"number";i:2;s:6:"Fields";a:4:{s:16:"ParticipantAccID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantAccID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Person Accountable|The name of the person accountable";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"AccountabilityType";O:9:"viewfield":16:{s:4:"name";s:18:"AccountabilityType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Accountability Type|The participant\'s specific type of accountability";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"AccountabilityStatus";O:9:"viewfield":16:{s:4:"name";s:20:"AccountabilityStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Accountability Status|The present status of this participant\'s ongoing involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:148:"SELECT 
    count(*) 
FROM `prta`
   
WHERE prta._Deleted = 0
   AND `prta`.RelatedModuleID = \'tracl\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1174:"SELECT 
   `prta`.ParticipantAccID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonAccountable,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS AccountabilityType,
`cod1`.Description AS AccountabilityStatus
FROM `prta`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prta`.RelatedRecordID = rdc1.RecordID AND `prta`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`prta`.ParticipantAccID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'prta\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'70\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prta`.AccountabilityTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `acc` AS acc2 
    ON (`prta`.ParticipantAccID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = \'prta\'
     AND `acc2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`acc2`.AccountabilityStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prta._Deleted = 0
AND `prta`.RelatedModuleID = \'tracl\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantAccID";s:3:"int";s:17:"PersonAccountable";N;s:18:"AccountabilityType";N;s:20:"AccountabilityStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantAccID";s:5:"right";s:17:"PersonAccountable";s:4:"left";s:18:"AccountabilityType";s:7:"justify";s:20:"AccountabilityStatus";s:4:"left";}}');
   $grids[3] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prti";s:6:"phrase";s:11:"Involvement";s:6:"number";i:3;s:6:"Fields";a:4:{s:16:"ParticipantInvID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantInvID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"PersonInvolved";O:9:"viewfield":16:{s:4:"name";s:14:"PersonInvolved";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Person Involved|The name of the person involved";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"InvolvementType";O:9:"viewfield":16:{s:4:"name";s:15:"InvolvementType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Involvement Type|The participant\'s specific type of involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"InvolvementStatus";O:9:"viewfield":16:{s:4:"name";s:17:"InvolvementStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Involvement Status|The present status of this participant\'s involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:148:"SELECT 
    count(*) 
FROM `prti`
   
WHERE prti._Deleted = 0
   AND `prti`.RelatedModuleID = \'tracl\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1153:"SELECT 
   `prti`.ParticipantInvID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonInvolved,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS InvolvementType,
`cod1`.Description AS InvolvementStatus
FROM `prti`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prti`.RelatedRecordID = rdc1.RecordID AND `prti`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `inv` AS inv1 
    ON (`prti`.ParticipantInvID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'prti\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'78\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prti`.InvolvementTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `inv` AS inv2 
    ON (`prti`.ParticipantInvID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = \'prti\'
     AND `inv2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`inv2`.InvolvementStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prti._Deleted = 0
AND `prti`.RelatedModuleID = \'tracl\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantInvID";s:3:"int";s:14:"PersonInvolved";N;s:15:"InvolvementType";N;s:17:"InvolvementStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantInvID";s:5:"right";s:14:"PersonInvolved";s:4:"left";s:15:"InvolvementType";s:7:"justify";s:17:"InvolvementStatus";s:4:"left";}}');
   $grids[4] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"filr";s:6:"phrase";s:14:"Physical Files";s:6:"number";i:4;s:6:"Fields";a:6:{s:12:"FileRecordID";O:14:"invisiblefield":11:{s:4:"name";s:12:"FileRecordID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Record ID|An automatically assigned number used to associate records with physical files";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"FilingOrganization";O:9:"viewfield":16:{s:4:"name";s:18:"FilingOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Filing Organization|The name of the organization where the  where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"File Location|Specific area within the facility where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"FileName";O:9:"viewfield":16:{s:4:"name";s:8:"FileName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"File Name|A short title or phrase used to identify the physical file";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"FileNumber";O:9:"viewfield":16:{s:4:"name";s:10:"FileNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"File Number|A number manually assigned to a file for tracking purposes";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"SystemNumber";O:9:"viewfield":16:{s:4:"name";s:12:"SystemNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:262:"System Number|A unique number assigned to the phisical file based on a combination of fields from within the file retention module. The system number is comprised of the filing organization ID, the filing location ID, the file type ID and the record retention ID";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:148:"SELECT 
    count(*) 
FROM `filr`
   
WHERE filr._Deleted = 0
   AND `filr`.RelatedModuleID = \'tracl\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1269:"SELECT 
   `filr`.FileRecordID,
`filph1`.FilingOrganizationID AS FilingOrganizationID,
`org1`.Name AS FilingOrganization,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
`filph1`.FileName AS FileName,
`filph1`.FileNumber AS FileNumber,
NULLIF(CONCAT(IFNULL(`filph1`.FilingOrganizationID,\'\'),IFNULL(`orgla1`.LocationID,\'\'),IFNULL(`fil1`.FileTypeID,\'\'),IFNULL(`filph1`.FileRetentionID,\'\')),\'\') AS SystemNumber
FROM `filr`

   LEFT OUTER JOIN `filph` AS filph1 
   ON (`filr`.FileRetentionID = `filph1`.FileRetentionID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`filph1`.FilingOrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`filph1`.FileRetentionID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'filph\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `fil` AS fil1 
   ON (`filph1`.FileReqID = `fil1`.FileReqID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE filr._Deleted = 0
AND `filr`.RelatedModuleID = \'tracl\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:6:{s:12:"FileRecordID";s:3:"int";s:18:"FilingOrganization";N;s:8:"Location";N;s:8:"FileName";N;s:10:"FileNumber";N;s:12:"SystemNumber";N;}s:4:"name";N;s:10:"fieldAlign";a:6:{s:12:"FileRecordID";s:5:"right";s:18:"FilingOrganization";s:4:"left";s:8:"Location";s:7:"justify";s:8:"FileName";s:4:"left";s:10:"FileNumber";s:4:"left";s:12:"SystemNumber";s:7:"justify";}}');
   $grids[5] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"bpc";s:6:"phrase";s:14:"Best Practices";s:6:"number";i:5;s:6:"Fields";a:4:{s:14:"BestPracticeID";O:14:"invisiblefield":11:{s:4:"name";s:14:"BestPracticeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Record ID|An automatically assigned number used to track best practices";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:20:"BestPracticeCategory";O:9:"viewfield":16:{s:4:"name";s:20:"BestPracticeCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Best Practice Category|A method of categorizing best practices of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"BestPracticeTitle";O:9:"viewfield":16:{s:4:"name";s:17:"BestPracticeTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Best Practice Title|A descriptive title of the best practice identified";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Evaluator|The individual evaluating and awarding the best practice";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:144:"SELECT 
    count(*) 
FROM `bpc`
   
WHERE bpc._Deleted = 0
   AND `bpc`.RelatedModuleID = \'tracl\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:678:"SELECT 
   `bpc`.BestPracticeID,
`cod1`.Description AS BestPracticeCategory,
`bpc`.BestPracticeTitle,
`ppl1`.DisplayName AS PersonAccountable
FROM `bpc`

   LEFT OUTER JOIN `cod` AS cod1 
   ON (`bpc`.BestPracticeCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'108\')
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`bpc`.BestPracticeID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'bpc\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'142\')
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE bpc._Deleted = 0
AND `bpc`.RelatedModuleID = \'tracl\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:14:"BestPracticeID";s:3:"int";s:20:"BestPracticeCategory";N;s:17:"BestPracticeTitle";s:12:"varchar(128)";s:17:"PersonAccountable";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:14:"BestPracticeID";s:5:"right";s:20:"BestPracticeCategory";s:4:"left";s:17:"BestPracticeTitle";s:4:"left";s:17:"PersonAccountable";s:4:"left";}}');
$content .= renderViewScreenSection($fields, $phrases, $SQL, $grids);

?>
