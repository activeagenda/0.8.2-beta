<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:10:{s:13:"MeasurementID";O:9:"viewfield":16:{s:4:"name";s:13:"MeasurementID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Record ID|An automatically assigned number used to track measurements used by the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"MeasurementTitle";O:9:"viewfield":16:{s:4:"name";s:16:"MeasurementTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Title|A word or phrase used to describe this organizational Measurement";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"MeasurementPurpose";O:9:"viewfield":16:{s:4:"name";s:18:"MeasurementPurpose";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Purpose|A brief description of the purpose for this measurement";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"MeasurementRationale";O:9:"viewfield":16:{s:4:"name";s:20:"MeasurementRationale";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:189:"Rationale|A detailed description of the rationale for using this measurement. the positive organizational behaviors likely to result from its use and any potential consequences from its use";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"BenchmarkDescription";O:9:"viewfield":16:{s:4:"name";s:20:"BenchmarkDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Benchmark Description|A brief description of the benchmark value and its source";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"BenchmarkValue";O:9:"viewfield":16:{s:4:"name";s:14:"BenchmarkValue";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Benchmark Value|The value against which measurement results are benchmarked";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:187:"Organization|The organization with primary responsibility for sponsoring this measurement, tracking performance, and supporting the organization\'s understanding and use of the measurement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:171:"Person Accountable|The person accountable for sponsoring this measurement, tracking performance, and supporting the organization\'s understanding and use of the measurement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"MeasurementOriginDate";O:9:"viewfield":16:{s:4:"name";s:21:"MeasurementOriginDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Origin Date|The date the measurement was first used by the organization";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"MeasurementStatus";O:9:"viewfield":16:{s:4:"name";s:17:"MeasurementStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Status|The status of this measurement\'s use within the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Measurement");

//field value array
$data = array(
        'MeasurementID' => '',
         'MeasurementTitle' => '',
         'MeasurementPurpose' => '',
         'MeasurementRationale' => '',
         'BenchmarkDescription' => '',
         'BenchmarkValue' => '',
         'Organization' => '',
         'PersonAccountable' => '',
         'MeasurementOriginDate' => '',
         'MeasurementStatus' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:10:"selectgrid":50:{s:16:"availableIDField";s:6:"CodeID";s:18:"availableNameField";s:11:"Description";s:16:"listAvailableSQL";s:114:"SELECT `cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod` WHERE
cod._Deleted = 0 AND cod.CodeTypeID = \'234\'
";s:14:"listConditions";a:0:{}s:15:"listSelectedSQL";s:302:"SELECT `rsk`.RiskImperativeID AS ID, `cod1`.Description AS Name  FROM rsk  
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`rsk`.RiskImperativeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'234\')
 WHERE  rsk.RelatedModuleID = \'mea\' AND rsk.RelatedRecordID = \'/*recordID*/\' AND rsk._Deleted = 0 ORDER BY Name";s:23:"listExistingSelectedSQL";s:281:"SELECT `rsk`.RiskImperativeID AS ID, `cod1`.Description AS Name , rsk._Deleted FROM rsk  
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`rsk`.RiskImperativeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'234\')
 WHERE  rsk.RelatedModuleID = \'mea\' AND rsk.RelatedRecordID = \'/*recordID*/\'";s:9:"insertSQL";s:148:"INSERT INTO rsk (RiskImperativeID, RelatedModuleID,RelatedRecordID, _ModBy, _ModDate) VALUES (\'/*value*/\', \'mea\',\'/*recordID*/\', /*userID*/, NOW());";s:15:"insertRemoteSQL";N;s:9:"removeSQL";s:232:"UPDATE rsk SET 
                _Deleted = 1,
                _ModBy = /*userID*/, 
                _ModDate = NOW()
            WHERE ImperativeID = /*rowID*/ AND rsk.RelatedModuleID = \'mea\' AND rsk.RelatedRecordID = \'/*recordID*/\'";s:15:"removeRemoteSQL";N;s:10:"restoreSQL";s:232:"UPDATE rsk SET 
                _Deleted = 0,
                _ModBy = /*userID*/, 
                _ModDate = NOW()
            WHERE ImperativeID = /*rowID*/ AND rsk.RelatedModuleID = \'mea\' AND rsk.RelatedRecordID = \'/*recordID*/\'";s:16:"restoreRemoteSQL";N;s:14:"getRemoteIDSQL";s:147:"SELECT ImperativeID AS RowID FROM rsk WHERE RiskImperativeID = \'/*value*/\' AND rsk.RelatedModuleID = \'mea\' AND rsk.RelatedRecordID = \'/*recordID*/\'";s:17:"getRemoteRowIDSQL";N;s:6:"logSQL";s:173:"INSERT INTO rsk_l (RiskImperativeID, RelatedModuleID,RelatedRecordID, _ModBy, _ModDate, _Deleted) VALUES (\'/*value*/\', \'mea\',\'/*recordID*/\', /*userID*/, NOW(), /*deleted*/);";s:12:"logRemoteSQL";N;s:14:"useRemoteField";b:0;s:11:"listKeyType";s:0:"";s:9:"updateSQL";N;s:9:"deleteSQL";N;s:10:"getFormSQL";s:0:"";s:9:"getRowSQL";s:0:"";s:12:"remoteFields";N;s:11:"hasGridForm";b:0;s:10:"FormFields";a:0:{}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";N;s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:3:"rsk";s:6:"phrase";s:16:"Risk Imperatives";s:6:"number";i:1;s:6:"Fields";a:0:{}s:8:"countSQL";N;s:7:"listSQL";N;s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:16:"primaryListField";s:14:"RiskImperative";s:10:"conditions";a:2:{s:15:"RelatedModuleID";s:3:"mea";s:15:"RelatedRecordID";s:12:"/*recordID*/";}s:12:"listModuleID";s:3:"cod";}');


    /**guidanceGrid**/

    $PKField = 'MeasurementID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "BestPractices";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `mea`.MeasurementID,
   `mea`.MeasurementTitle,
   `mea`.MeasurementPurpose,
   `mea`.MeasurementRationale,
   `mea`.BenchmarkDescription,
   `mea`.BenchmarkValue,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   `mea`.MeasurementOriginDate,
   `cod1`.Description AS MeasurementStatus,
   NULLIF(CONCAT(IFNULL(`mea`.MeasurementTitle,''),' | ',IFNULL(`org1`.Name,''),' | ',IFNULL(`mea`.Resultant,'')),' |  | ') AS RecordLabel,
   `mea`.OrganizationID
FROM `mea`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`mea`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`mea`.MeasurementID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'mea'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '57')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`mea`.MeasurementStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '192')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   mea.MeasurementID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Measurement");
        $screenPhrase = gettext("Imperatives|Associate risk imperatives with an organizational measurement");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Measurements");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'MeasurementID' => gettext("Record ID|An automatically assigned number used to track measurements used by the organization"),
   'MeasurementTitle' => gettext("Title|A word or phrase used to describe this organizational Measurement"),
   'MeasurementPurpose' => gettext("Purpose|A brief description of the purpose for this measurement"),
   'MeasurementRationale' => gettext("Rationale|A detailed description of the rationale for using this measurement. the positive organizational behaviors likely to result from its use and any potential consequences from its use"),
   'BenchmarkDescription' => gettext("Benchmark Description|A brief description of the benchmark value and its source"),
   'BenchmarkValue' => gettext("Benchmark Value|The value against which measurement results are benchmarked"),
   'Organization' => gettext("Organization|The organization with primary responsibility for sponsoring this measurement, tracking performance, and supporting the organization's understanding and use of the measurement"),
   'PersonAccountable' => gettext("Person Accountable|The person accountable for sponsoring this measurement, tracking performance, and supporting the organization's understanding and use of the measurement"),
   'MeasurementOriginDate' => gettext("Origin Date|The date the measurement was first used by the organization"),
   'MeasurementStatus' => gettext("Status|The status of this measurement's use within the organization")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Measurements"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Measurement") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about an organizational measurement") );
      $tempTabs['Assignments'] = array( "edit.php?scr=Assignments&$tabsQS", gettext("Assignments|Assign the measurement to additional organizations") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values considerations with an organizational measurement") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with an organizational measurement") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the measurement") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the measurement") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with a physical measurement file") );
      $tempTabs['Imperatives'] = array( "", gettext("Imperatives|Associate risk imperatives with an organizational measurement") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with an organizational measurement") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Imperatives'] = array( "", gettext("New Measurement") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>