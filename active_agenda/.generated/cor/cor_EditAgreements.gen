<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:13:{s:9:"CorrActID";O:9:"viewfield":16:{s:4:"name";s:9:"CorrActID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Record ID|An automatically assigned number used to track corrective actions";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:25:"CorrectiveSituationTypeID";O:14:"invisiblefield":11:{s:4:"name";s:25:"CorrectiveSituationTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"OrganizationID";O:14:"invisiblefield":11:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Organization|The organization directly associated with this corrective action";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:23:"CorrectiveSituationType";O:9:"viewfield":16:{s:4:"name";s:23:"CorrectiveSituationType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:117:"Situation Type|A combined field used to describe the corrective situation type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"CorrActSubject";O:9:"viewfield":16:{s:4:"name";s:14:"CorrActSubject";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Action Subject|The recipient of the corrective action";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"SituationDate";O:9:"viewfield":16:{s:4:"name";s:13:"SituationDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"Situation Date|The date and time of the situation which led to the corrective action";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"CorrActDate";O:9:"viewfield":16:{s:4:"name";s:11:"CorrActDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Action Date|The date and time the corrective action was taken";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"SituationDesc";O:9:"viewfield":16:{s:4:"name";s:13:"SituationDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Situation Description|A detailed description of the situation which led to the corrective action";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:26:"CorrectivePracticeCategory";O:9:"viewfield":16:{s:4:"name";s:26:"CorrectivePracticeCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Action Category|A brief phrase used to describe a category of corrective action practices";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:29:"CorrectivePracticeDescription";O:9:"viewfield":16:{s:4:"name";s:29:"CorrectivePracticeDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Action Description|A detailed description of the corrective action taken";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"TotalEstOpp";O:9:"viewfield":16:{s:4:"name";s:11:"TotalEstOpp";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Estimated Opportunity|The total estimated financial opportunity associated with the corrective action";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"TotalEstExp";O:9:"viewfield":16:{s:4:"name";s:11:"TotalEstExp";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Estimated Exposure|The total estimated cost exposure associated with the corrective action";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Corrective Action");

//field value array
$data = array(
        'CorrActID' => '',
         'CorrectiveSituationTypeID' => '',
         'OrganizationID' => '',
         'Organization' => '',
         'CorrectiveSituationType' => '',
         'CorrActSubject' => '',
         'SituationDate' => '',
         'CorrActDate' => '',
         'SituationDesc' => '',
         'CorrectivePracticeCategory' => '',
         'CorrectivePracticeDescription' => '',
         'TotalEstOpp' => '',
         'TotalEstExp' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[2] = unserialize('O:8:"editgrid":32:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:2202:"SELECT 
   `agr`.AgreementID,
   `cod2`.Description AS AgreementCategory,
   `agrt1`.AgreementCategoryID AS AgreementCategoryID,
   NULLIF(CONCAT(IFNULL(`agrt1`.AgreementTypeTitle,\'\')),\'\') AS AgreementType,
   `agr`.AgreementTypeID,
   `agr`.AgmtTitle,
   `agrt1`.AgreementTypeDesc AS AgreementDescGuide,
   `agr`.AgmtSummary,
   `agr`.TerminationFactors,
   `dat1`.RelatedDate AS AgreementDate,
   `dat2`.RelatedDate AS ExpirationDate,
   `org1`.Name AS Organization,
   `agr`.OrganizationID,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `org2`.Name AS SecondOrganization,
   `agr`.SecondOrganizationID,
   `ppl2`.DisplayName AS SecondPersonAccountable,
   `acc1`.PersonAccountableID AS SecondPersonAccountableID,
   `cod1`.Description AS AgmtStatus,
   `agr`.AgmtStatusID,
   `agr`.AgmtAttached
FROM `agr`
   
     LEFT OUTER JOIN `agrt` AS agrt1 
   ON (`agr`.AgreementTypeID = `agrt1`.AgreementTypeID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`agr`.AgreementID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'agr\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'17\')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`agr`.AgreementID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = \'agr\'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = \'10\')
     LEFT OUTER JOIN `org` AS org1 
   ON (`agr`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`agr`.AgreementID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'agr\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'7\')
     LEFT OUTER JOIN `org` AS org2 
   ON (`agr`.SecondOrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`agr`.AgmtStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'86\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`agrt1`.AgreementCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'125\')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`acc1`.PersonAccountableID = `ppl2`.PersonID )
WHERE
   agr.AgreementID=\'/**RowID**/\'";s:9:"getRowSQL";s:751:"SELECT 
   `agr`.AgreementID,
   `agr`.AgmtTitle,
   `dat1`.RelatedDate AS AgreementDate,
   `dat2`.RelatedDate AS ExpirationDate,
   `cod1`.Description AS AgmtStatus,
   `agr`.OrganizationID
FROM `agr`
   
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`agr`.AgreementID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'agr\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'17\')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`agr`.AgreementID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = \'agr\'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = \'10\')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`agr`.AgmtStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'86\')
WHERE
   agr.AgreementID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:15:{s:11:"AgreementID";O:14:"invisiblefield":11:{s:4:"name";s:11:"AgreementID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:142:"Record ID|An automatically assigned number used to associate agreements and contracts with related organizations, people, property, and events";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:19:"AgreementCategoryID";O:14:"codecombofield":27:{s:4:"name";s:19:"AgreementCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Category|A broad categoy used to group agreements of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'125\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'125\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:15:"AgreementTypeID";a:2:{s:4:"name";s:15:"AgreementTypeID";s:8:"findMode";s:4:"text";}}s:8:"moduleID";s:3:"agr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"125";}s:15:"AgreementTypeID";O:10:"combofield":26:{s:4:"name";s:15:"AgreementTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Agreement Type|A combined field used to describe this agreement type when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"agrt";s:10:"foreignKey";s:15:"AgreementTypeID";s:12:"foreignField";s:13:"AgreementType";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:197:"SELECT 
`agrt`.AgreementTypeID AS ID, NULLIF(CONCAT(IFNULL(`agrt`.AgreementTypeTitle,\'\')),\'\') AS Name, `agrt`.AgreementCategoryID AS ParentID FROM `agrt`
WHERE agrt._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:200:"SELECT 
`agrt`.AgreementTypeID AS ID, NULLIF(CONCAT(IFNULL(`agrt`.AgreementTypeTitle,\'\')),\'\') AS Name, `agrt`.AgreementCategoryID AS ParentID FROM `agrt`

WHERE `agrt`.AgreementTypeID = \'/*recordID*/\'";s:11:"parentField";s:19:"AgreementCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:18:"AgreementDescGuide";a:1:{s:4:"name";s:18:"AgreementDescGuide";}}s:8:"moduleID";s:3:"agr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:9:"AgmtTitle";O:9:"editfield":14:{s:4:"name";s:9:"AgmtTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Agreement Title|A brief phrase used to describe the title of this contract or agreement";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:18:"AgreementDescGuide";O:9:"viewfield":16:{s:4:"name";s:18:"AgreementDescGuide";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Guidance Description|A brief but thorough description of the agreement type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:15:"AgreementTypeID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"AgmtSummary";O:9:"memofield":15:{s:4:"name";s:11:"AgmtSummary";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Agreement Summary|A brief summary of the scope and purpose of the business continuation contract or agreement";s:8:"dataType";s:4:"text";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:18:"TerminationFactors";O:9:"memofield":15:{s:4:"name";s:18:"TerminationFactors";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Termination Factors|A brief summary of any factors which may lead to the termination of the agreement";s:8:"dataType";s:4:"text";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:2:"10";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:13:"AgreementDate";O:9:"datefield":15:{s:4:"name";s:13:"AgreementDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Effective Date|Date the agreement or contract was entered into and became effective";s:8:"dataType";s:4:"date";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"ExpirationDate";O:9:"datefield":15:{s:4:"name";s:14:"ExpirationDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:54:"Expiration Date|Date the agreement or contract expires";s:8:"dataType";s:4:"date";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Organization|The name of the primary organization associated with the agreement";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"agr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:78:"Party Accountable|The name of the person with accountability for the agreement";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"agr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:20:"SecondOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:20:"SecondOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Second Organization|The name of the second organization associated with the agreement";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"agr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:25:"SecondPersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:25:"SecondPersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Second Party Accountable|The name of the second person with accountability for the agreement";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"agr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:29:"SecondPersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"AgmtStatusID";O:10:"combofield":26:{s:4:"name";s:12:"AgmtStatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:50:"Status|Current status of the agreement or contract";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'86\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'86\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"agr";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:12:"AgmtAttached";O:13:"checkboxfield":14:{s:4:"name";s:12:"AgmtAttached";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Agreement Attached|Whether a digital copy of the agreement or contract has been attached to this record";s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:11:"AgreementID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:3:"agr";s:6:"phrase";s:10:"Agreements";s:6:"number";i:2;s:6:"Fields";a:5:{s:11:"AgreementID";O:14:"invisiblefield":11:{s:4:"name";s:11:"AgreementID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:142:"Record ID|An automatically assigned number used to associate agreements and contracts with related organizations, people, property, and events";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:9:"AgmtTitle";O:9:"viewfield":16:{s:4:"name";s:9:"AgmtTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Agreement Title|A brief phrase used to describe the title of this contract or agreement";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"AgreementDate";O:9:"viewfield":16:{s:4:"name";s:13:"AgreementDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Effective Date|Date the agreement or contract was entered into and became effective";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ExpirationDate";O:9:"viewfield":16:{s:4:"name";s:14:"ExpirationDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:54:"Expiration Date|Date the agreement or contract expires";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"AgmtStatus";O:9:"viewfield":16:{s:4:"name";s:10:"AgmtStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:50:"Status|Current status of the agreement or contract";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"agr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `agr`
   
WHERE agr._Deleted = 0
   AND `agr`.RelatedModuleID = \'cor\'
AND `agr`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:792:"SELECT 
   `agr`.AgreementID,
`agr`.OrganizationID,
`agr`.AgmtTitle,
`dat1`.RelatedDate AS AgreementDate,
`dat2`.RelatedDate AS ExpirationDate,
`cod1`.Description AS AgmtStatus
FROM `agr`

   LEFT OUTER JOIN `dat` AS dat1 
    ON (`agr`.AgreementID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'agr\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'17\')
   LEFT OUTER JOIN `dat` AS dat2 
    ON (`agr`.AgreementID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = \'agr\'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = \'10\')
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`agr`.AgmtStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'86\')
WHERE agr._Deleted = 0
AND `agr`.RelatedModuleID = \'cor\'
AND `agr`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";s:9:"CorrActID";s:8:"PKFields";a:1:{i:0;s:11:"AgreementID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:10:"conditions";a:1:{s:15:"RelatedModuleID";s:3:"cor";}}');


    $guidanceGrid = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:1:{s:20:"GuidanceOrganization";N;}s:6:"isInfo";b:0;s:10:"isGuidance";b:1;s:10:"isVertical";b:1;s:15:"verticalFormats";a:3:{s:16:"OrganizationLogo";s:9:"LogoField";s:27:"AgreementConsiderationTitle";s:10:"TitleField";s:33:"AgreementConsiderationDescription";s:12:"FeatureField";}s:8:"moduleID";s:4:"agrc";s:6:"phrase";s:18:"Agreement Guidance";s:6:"number";N;s:6:"Fields";a:6:{s:24:"AgreementConsiderationID";O:14:"invisiblefield":11:{s:4:"name";s:24:"AgreementConsiderationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:140:"Record ID|An automatically assigned number used to track the association of agreement considerations with records throughout the application";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"agrc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:16:"OrganizationLogo";O:9:"viewfield":16:{s:4:"name";s:16:"OrganizationLogo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Organization Logo|Displays the logo of the guidance organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"agrc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:27:"AgreementConsiderationTitle";O:9:"viewfield":16:{s:4:"name";s:27:"AgreementConsiderationTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Title|A short title or phrase used to describe the agreement consideration";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"agrc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:33:"AgreementConsiderationDescription";O:9:"viewfield":16:{s:4:"name";s:33:"AgreementConsiderationDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:172:"Consideration|A detailed description of the agreement consideration and the manner in which the activity associated with the related record may be impacted by the agreement";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"agrc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"GuidanceOrganization";O:9:"viewfield":16:{s:4:"name";s:20:"GuidanceOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Guidance Organization|The organization offering guidance for consideration";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"agrc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"GuidancePerson";O:9:"viewfield":16:{s:4:"name";s:14:"GuidancePerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Guidance Person|The individual providing guidance for consideration";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"agrc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:342:"SELECT 
    count(*) 
FROM `agrc`
   
   LEFT OUTER JOIN `gui` AS gui1 
   ON (`agrc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
 INNER JOIN `cor` AS `parent` ON `gui1`.RelatedRecordID = `parent`.CorrectiveSituationTypeID
WHERE agrc._Deleted = 0
   AND `gui1`.RelatedModuleID = \'corst\'
AND `parent`.CorrActID = \'/**RecordID**/\'
";s:7:"listSQL";s:1234:"SELECT 
   `agrc`.AgreementConsiderationID,
`agrc`.GuidanceOrganizationID,
NULLIF(CONCAT(\'<img src=\\"org/\',IFNULL(IFNULL(`org1`.GuidanceLogoName, \'transparent.gif\'),\'\'),\'\\" alt=\\"logo\\" />\'),\'<img src=\\\\\\"org/\\\\\\" alt=\\\\\\"logo\\\\\\" />\') AS OrganizationLogo,
`agrc`.AgreementConsiderationTitle,
`agrc`.AgreementConsiderationDescription,
NULLIF(CONCAT(IFNULL(`org2`.Name,\'\')),\'\') AS GuidanceOrganization,
`ppl1`.DisplayName AS GuidancePerson
FROM `agrc`

   LEFT OUTER JOIN `gui` AS gui1 
   ON (`agrc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`gui1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `org` AS org2 
   ON (`gui1`.OrganizationID = `org2`.OrganizationID )
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`gui1`.GuidanceOrganizationID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'gui\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'184\')
   LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
 INNER JOIN `cor` AS `parent` ON `gui1`.RelatedRecordID = `parent`.CorrectiveSituationTypeID
WHERE agrc._Deleted = 0
AND `gui1`.RelatedModuleID = \'corst\'
AND `parent`.CorrActID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:2:{s:13:"suppressTitle";b:1;s:19:"suppressRecordIcons";b:1;}s:10:"fieldTypes";a:6:{s:24:"AgreementConsiderationID";s:3:"int";s:16:"OrganizationLogo";N;s:27:"AgreementConsiderationTitle";s:12:"varchar(128)";s:33:"AgreementConsiderationDescription";s:4:"text";s:20:"GuidanceOrganization";N;s:14:"GuidancePerson";N;}s:4:"name";N;s:10:"fieldAlign";a:6:{s:24:"AgreementConsiderationID";s:5:"right";s:16:"OrganizationLogo";s:7:"justify";s:27:"AgreementConsiderationTitle";s:4:"left";s:33:"AgreementConsiderationDescription";s:7:"justify";s:20:"GuidanceOrganization";s:7:"justify";s:14:"GuidancePerson";s:4:"left";}}');


    $PKField = 'CorrActID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[2]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Insurance";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `cor`.CorrActID,
   `cor`.CorrectiveSituationTypeID,
   `cor`.OrganizationID,
   `org2`.Name AS Organization,
   NULLIF(CONCAT(IFNULL(`corst1`.CorrectiveSituationTitle,'')),'') AS CorrectiveSituationType,
   `ppl2`.DisplayName AS CorrActSubject,
   `dat1`.RelatedDate AS SituationDate,
   `dat2`.RelatedDate AS CorrActDate,
   `cor`.SituationDesc,
   `cod3`.Description AS CorrectivePracticeCategory,
   `cor`.CorrectivePracticeDescription,
   `opt1`.TotalEstOpp AS TotalEstOpp,
   `cosex1`.TotalEstExp AS TotalEstExp,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`corst1`.CorrectiveSituationTitle,'')),''),''),' | ',IFNULL(`ppl2`.DisplayName,''),' | ',IFNULL(`dat2`.RelatedDate,''),' | ',IFNULL(`cod3`.Description,'')),' |  |  | ') AS RecordLabel
FROM `cor`
   
     LEFT OUTER JOIN `org` AS org2 
   ON (`cor`.OrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `corst` AS corst1 
   ON (`cor`.CorrectiveSituationTypeID = `corst1`.CorrectiveSituationTypeID )
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`cor`.CorrActID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'cor'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '19')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`cor`.CorrActID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'cor'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '16')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`cor`.CorrActID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'cor'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '7')
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`cor`.CorrectivePracticeCategoryID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '57')
     LEFT OUTER JOIN (SELECT 
SUM(ROUND(`opt`.Estimate, 2)) AS TotalEstOpp,
`opt`.RelatedRecordID FROM `opt` 
 WHERE `opt`._Deleted = 0 
 AND RelatedModuleID = 'cor' 
 AND 'cor' = `opt`.RelatedModuleID
GROUP BY `opt`.RelatedRecordID 
) AS opt1 
ON (`cor`.CorrActID = opt1.RelatedRecordID) 
     LEFT OUTER JOIN (SELECT 
SUM(ROUND(`cosex`.Estimate, 2)) AS TotalEstExp,
`cosex`.RelatedRecordID FROM `cosex` 
 WHERE `cosex`._Deleted = 0 
 AND RelatedModuleID = 'cor' 
 AND 'cor' = `cosex`.RelatedModuleID
GROUP BY `cosex`.RelatedRecordID 
) AS cosex1 
ON (`cor`.CorrActID = cosex1.RelatedRecordID) 
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv1`.PersonInvolvedID = `ppl2`.PersonID )
WHERE
   cor.CorrActID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Corrective Action");
        $screenPhrase = gettext("Agreements|Associate business agreements and/or contracts with the corrective action");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Corrective Actions");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'CorrActID' => gettext("Record ID|An automatically assigned number used to track corrective actions"),
   'CorrectiveSituationTypeID' => gettext("Corrective Situation Type|A combined field used to describe the corrective situation type when associating it with other records"),
   'OrganizationID' => gettext("Organization|The organization directly associated with this corrective action"),
   'Organization' => gettext("Organization|The organization directly associated with this corrective action"),
   'CorrectiveSituationType' => gettext("Situation Type|A combined field used to describe the corrective situation type when associating it with other records"),
   'CorrActSubject' => gettext("Action Subject|The recipient of the corrective action"),
   'SituationDate' => gettext("Situation Date|The date and time of the situation which led to the corrective action"),
   'CorrActDate' => gettext("Action Date|The date and time the corrective action was taken"),
   'SituationDesc' => gettext("Situation Description|A detailed description of the situation which led to the corrective action"),
   'CorrectivePracticeCategory' => gettext("Action Category|A brief phrase used to describe a category of corrective action practices"),
   'CorrectivePracticeDescription' => gettext("Action Description|A detailed description of the corrective action taken"),
   'TotalEstOpp' => gettext("Estimated Opportunity|The total estimated financial opportunity associated with the corrective action"),
   'TotalEstExp' => gettext("Estimated Exposure|The total estimated cost exposure associated with the corrective action")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**-remove_begin-**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        


        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**-remove_end-**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Corrective Actions"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Corrective Action") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a corrective action") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the corrective action") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Exposures|Associate cost exposures with the corrective action") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the corrective action") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the corrective action") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the corrective action") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the corrective action") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the corrective action") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate audit items with the corrective action") );
      $tempTabs['Agreements'] = array( "", gettext("Agreements|Associate business agreements and/or contracts with the corrective action") );
      $tempTabs['Insurance'] = array( "edit.php?scr=Insurance&$tabsQS", gettext("Insurance|Associate insurance policies with the corrective action") );
      $tempTabs['RootCause'] = array( "edit.php?scr=RootCause&$tabsQS", gettext("Causes|Associate root causes with the corrective action") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the corrective action") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the corrective action") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with corrective action") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with the corrective action") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the corrective action") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Agreements'] = array( "", gettext("New Action") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>