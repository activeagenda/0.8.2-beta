<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:17:{s:9:"CorrActID";O:9:"viewfield":16:{s:4:"name";s:9:"CorrActID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Record ID|An automatically assigned number used to track corrective actions";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"PolicyOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:20:"PolicyOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:29:"CorrectiveSituationCategoryID";a:1:{s:4:"name";s:29:"CorrectiveSituationCategoryID";}}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:29:"CorrectiveSituationCategoryID";O:14:"codecombofield":27:{s:4:"name";s:29:"CorrectiveSituationCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'58\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:382:"SELECT DISTINCT
`corst`.CorrectiveSituationCategoryID AS ID, `cod1`.Description AS Name, `corst`.PolicyOrganizationID AS ParentID
FROM `corst`

LEFT OUTER JOIN `cod` AS cod1 
   ON (`corst`.CorrectiveSituationCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'58\')
WHERE `corst`._Deleted = 0
AND `corst`.CorrectiveSituationCategoryID IS NOT NULL
 ORDER BY Name, ID, ParentID;";s:6:"getSQL";s:332:"SELECT DISTINCT
`corst`.CorrectiveSituationCategoryID AS ID, `cod1`.Description AS Name, `corst`.PolicyOrganizationID AS ParentID
FROM `corst`

LEFT OUTER JOIN `cod` AS cod1 
   ON (`corst`.CorrectiveSituationCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'58\')
WHERE `corst`.CorrectiveSituationCategoryID = \'/*recordID*/\'";s:11:"parentField";s:20:"PolicyOrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:25:"CorrectiveSituationTypeID";a:2:{s:4:"name";s:25:"CorrectiveSituationTypeID";s:15:"listParentField";s:29:"CorrectiveSituationCategoryID";}}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"58";}s:25:"CorrectiveSituationTypeID";O:10:"combofield":26:{s:4:"name";s:25:"CorrectiveSituationTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"corst";s:10:"foreignKey";s:25:"CorrectiveSituationTypeID";s:12:"foreignField";s:23:"CorrectiveSituationType";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:228:"SELECT 
`corst`.CorrectiveSituationTypeID AS ID, NULLIF(CONCAT(IFNULL(`corst`.CorrectiveSituationTitle,\'\')),\'\') AS Name, `corst`.CorrectiveSituationCategoryID AS ParentID FROM `corst`
WHERE corst._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:241:"SELECT 
`corst`.CorrectiveSituationTypeID AS ID, NULLIF(CONCAT(IFNULL(`corst`.CorrectiveSituationTitle,\'\')),\'\') AS Name, `corst`.CorrectiveSituationCategoryID AS ParentID FROM `corst`

WHERE `corst`.CorrectiveSituationTypeID = \'/*recordID*/\'";s:11:"parentField";s:29:"CorrectiveSituationCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:2:{s:10:"WorkRuleNo";a:1:{s:4:"name";s:10:"WorkRuleNo";}s:30:"CorrectiveSituationDescription";a:1:{s:4:"name";s:30:"CorrectiveSituationDescription";}}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:36:"`corst`.PolicyOrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:30:"CorrectiveSituationDescription";O:9:"viewfield":16:{s:4:"name";s:30:"CorrectiveSituationDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Situation Type Description|A general description of a corrective situation type requiring corrective action";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:25:"CorrectiveSituationTypeID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:10:"WorkRuleNo";O:9:"viewfield":16:{s:4:"name";s:10:"WorkRuleNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Rule Number|Work rule or policy number associated with the corrective situation type to be addressed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:25:"CorrectiveSituationTypeID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:13:"SituationDate";O:9:"datefield":15:{s:4:"name";s:13:"SituationDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:16:"CorrActSubjectID";O:16:"personcombofield":29:{s:4:"name";s:16:"CorrActSubjectID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:20:"CorrActSubjectID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:13:"SituationDesc";O:9:"memofield":15:{s:4:"name";s:13:"SituationDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:9:"OccurNoID";O:14:"coderadiofield":29:{s:4:"name";s:9:"OccurNoID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'75\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'75\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:11:"orientation";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:11:"CorrActDate";O:9:"datefield":15:{s:4:"name";s:11:"CorrActDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:28:"CorrectivePracticeCategoryID";O:14:"codecombofield":27:{s:4:"name";s:28:"CorrectivePracticeCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'57\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'57\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"57";}s:29:"CorrectivePracticeDescription";O:9:"memofield":15:{s:4:"name";s:29:"CorrectivePracticeDescription";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:11:"CorrActByID";O:16:"personcombofield":29:{s:4:"name";s:11:"CorrActByID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:15:"CorrActByID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"CorrActStatusID";O:14:"codecombofield":27:{s:4:"name";s:15:"CorrActStatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'123\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'123\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"cor";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"123";}}');

$hasEditableFields = true;


$singularRecordName = gettext("Corrective Action");

//field value array
$data = array(
        'CorrActID' => '',
         'PolicyOrganizationID' => '',
         'CorrectiveSituationCategoryID' => '',
         'CorrectiveSituationTypeID' => '',
         'CorrectiveSituationDescription' => '',
         'WorkRuleNo' => '',
         'OrganizationID' => '',
         'SituationDate' => '',
         'CorrActSubjectID' => '',
         'SituationDesc' => '',
         'OccurNoID' => '',
         'CorrActDate' => '',
         'CorrectivePracticeCategoryID' => '',
         'CorrectivePracticeDescription' => '',
         'CorrActByID' => '',
         'PersonAccountableID' => '',
         'CorrActStatusID' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'CorrActID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Culture";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `cor`.CorrActID,
   `org1`.Name AS PolicyOrganization,
   `corst1`.PolicyOrganizationID AS PolicyOrganizationID,
   `cod1`.Description AS CorrectiveSituationCategory,
   `corst1`.CorrectiveSituationCategoryID AS CorrectiveSituationCategoryID,
   NULLIF(CONCAT(IFNULL(`corst1`.CorrectiveSituationTitle,'')),'') AS CorrectiveSituationType,
   `cor`.CorrectiveSituationTypeID,
   `corst1`.CorrectiveSituationDescription AS CorrectiveSituationDescription,
   `corst1`.WorkRuleNo AS WorkRuleNo,
   `org2`.Name AS Organization,
   `cor`.OrganizationID,
   `dat1`.RelatedDate AS SituationDate,
   `ppl2`.DisplayName AS CorrActSubject,
   `inv1`.PersonInvolvedID AS CorrActSubjectID,
   `cor`.SituationDesc,
   `cod2`.Description AS OccurNo,
   `cor`.OccurNoID,
   `dat2`.RelatedDate AS CorrActDate,
   `cod3`.Description AS CorrectivePracticeCategory,
   `cor`.CorrectivePracticeCategoryID,
   `cor`.CorrectivePracticeDescription,
   `ppl3`.DisplayName AS CorrActBy,
   `inv2`.PersonInvolvedID AS CorrActByID,
   `ppl4`.DisplayName AS PersonAccountable,
   `acc2`.PersonAccountableID AS PersonAccountableID,
   `cod4`.Description AS CorrActStatus,
   `cor`.CorrActStatusID,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`corst1`.CorrectiveSituationTitle,'')),''),''),' | ',IFNULL(`ppl2`.DisplayName,''),' | ',IFNULL(`dat2`.RelatedDate,''),' | ',IFNULL(`cod3`.Description,'')),' |  |  | ') AS RecordLabel
FROM `cor`
   
     LEFT OUTER JOIN `corst` AS corst1 
   ON (`cor`.CorrectiveSituationTypeID = `corst1`.CorrectiveSituationTypeID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`cor`.OrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`cor`.CorrActID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'cor'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '16')
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`cor`.CorrActID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'cor'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '19')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`cor`.OccurNoID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '75')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`cor`.CorrActID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'cor'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '7')
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`cor`.CorrectivePracticeCategoryID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '57')
     LEFT OUTER JOIN `inv` AS inv2 
    ON (`cor`.CorrActID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = 'cor'
     AND `inv2`._Deleted = 0
     AND `inv2`.InvolvementDescriptorID = '18')
     LEFT OUTER JOIN `acc` AS acc2 
    ON (`cor`.CorrActID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = 'cor'
     AND `acc2`._Deleted = 0
     AND `acc2`.AccountabilityDescriptorID = '21')
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`cor`.CorrActStatusID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '123')
     LEFT OUTER JOIN `org` AS org1 
   ON (`corst1`.PolicyOrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`corst1`.CorrectiveSituationCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '58')
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv1`.PersonInvolvedID = `ppl2`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl3 
   ON (`inv2`.PersonInvolvedID = `ppl3`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl4 
   ON (`acc2`.PersonAccountableID = `ppl4`.PersonID )
WHERE
   cor.CorrActID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Corrective Action");
        $screenPhrase = gettext("Form|Edit summary information about a corrective action");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Corrective Actions");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'CorrActID' => gettext("Record ID|An automatically assigned number used to track corrective actions"),
   'PolicyOrganizationID' => gettext("Policy Organization|The organization responsible for the establishment and enforcement of consistent employment practices"),
   'CorrectiveSituationCategoryID' => gettext("Category|A broadly defined title or phrase used to group similar corrective situation types requiring corrective action"),
   'CorrectiveSituationTypeID' => gettext("Situation Type|A combined field used to describe the corrective situation type when associating it with other records"),
   'CorrectiveSituationDescription' => gettext("Situation Type Description|A general description of a corrective situation type requiring corrective action"),
   'WorkRuleNo' => gettext("Rule Number|Work rule or policy number associated with the corrective situation type to be addressed"),
   'OrganizationID' => gettext("Organization|The organization directly associated with this corrective action"),
   'SituationDate' => gettext("Situation Date|The date and time of the situation which led to the corrective action"),
   'CorrActSubjectID' => gettext("Action Subject|The recipient of the corrective action"),
   'SituationDesc' => gettext("Situation Description|A detailed description of the situation which led to the corrective action"),
   'OccurNoID' => gettext("Occurrence|The number of times the corrective action subject has been responsible for the same or similar corrective situation"),
   'CorrActDate' => gettext("Action Date|The date and time the corrective action was taken"),
   'CorrectivePracticeCategoryID' => gettext("Action Category|A brief phrase used to describe a category of corrective action practices"),
   'CorrectivePracticeDescription' => gettext("Action Description|A detailed description of the corrective action taken"),
   'CorrActByID' => gettext("Action By|The name of the person taking the corrective action"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for managing this corrective action process"),
   'CorrActStatusID' => gettext("Status|Status of the corrective action process")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['SituationDate'], ShortPhrase($phrases['SituationDate']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SituationDate']->invalid = TRUE;
            }
$vMsg = Validate($data['OccurNoID'], ShortPhrase($phrases['OccurNoID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['OccurNoID']->invalid = TRUE;
            }
$vMsg = Validate($data['CorrActDate'], ShortPhrase($phrases['CorrActDate']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['CorrActDate']->invalid = TRUE;
            }
$vMsg = Validate($data['CorrectivePracticeCategoryID'], ShortPhrase($phrases['CorrectivePracticeCategoryID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['CorrectivePracticeCategoryID']->invalid = TRUE;
            }
$vMsg = Validate($data['CorrectivePracticeDescription'], ShortPhrase($phrases['CorrectivePracticeDescription']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['CorrectivePracticeDescription']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Corrective Actions"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Corrective Action") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about a corrective action") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the corrective action") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Exposures|Associate cost exposures with the corrective action") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the corrective action") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the corrective action") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the corrective action") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the corrective action") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the corrective action") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate audit items with the corrective action") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate business agreements and/or contracts with the corrective action") );
      $tempTabs['Insurance'] = array( "edit.php?scr=Insurance&$tabsQS", gettext("Insurance|Associate insurance policies with the corrective action") );
      $tempTabs['RootCause'] = array( "edit.php?scr=RootCause&$tabsQS", gettext("Causes|Associate root causes with the corrective action") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the corrective action") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the corrective action") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with corrective action") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with the corrective action") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the corrective action") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Action") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"SituationDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_SituationDate\"
});
Calendar.setup({
   inputField : \"CorrActDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_CorrActDate\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>