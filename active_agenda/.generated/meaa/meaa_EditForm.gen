<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:26:{s:13:"MeasurementID";O:9:"viewfield":16:{s:4:"name";s:13:"MeasurementID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Measurement|A combined field used to describe this measurement when associating it with related records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"MeasurementTitle";O:9:"viewfield":16:{s:4:"name";s:16:"MeasurementTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Title|A word or phrase used to describe this organizational Measurement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"MeasurementPurpose";O:9:"viewfield":16:{s:4:"name";s:18:"MeasurementPurpose";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Purpose|A brief description of the purpose for this measurement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"MeasurementRationale";O:9:"viewfield":16:{s:4:"name";s:20:"MeasurementRationale";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:189:"Rationale|A detailed description of the rationale for using this measurement. the positive organizational behaviors likely to result from its use and any potential consequences from its use";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"BenchmarkDescription";O:9:"viewfield":16:{s:4:"name";s:20:"BenchmarkDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Benchmark Description|A brief description of the benchmark value and its source";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"BenchmarkValue";O:9:"viewfield":16:{s:4:"name";s:14:"BenchmarkValue";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Benchmark Value|The value against which measurement results are benchmarked";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"AssigningOrganization";O:9:"viewfield":16:{s:4:"name";s:21:"AssigningOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:197:"Assigning Organization|The organization with primary responsibility for sponsoring this measurement, tracking performance, and supporting the organization\'s understanding and use of the measurement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:22:"AssignedOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:22:"AssignedOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"meaa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:171:"Person Accountable|The person accountable for sponsoring this measurement, tracking performance, and supporting the organization\'s understanding and use of the measurement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:24:"LocalPersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:24:"LocalPersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"meaa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:28:"LocalPersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:21:"MeasurementOriginDate";O:9:"viewfield":16:{s:4:"name";s:21:"MeasurementOriginDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Origin Date|The date the measurement was first used by the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"MeasurementStatus";O:9:"viewfield":16:{s:4:"name";s:17:"MeasurementStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Status|The status of this measurement\'s use within the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"NumeratorTitle";O:9:"viewfield":16:{s:4:"name";s:14:"NumeratorTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Numerator Title|A word or phrase used to describe the numerator used for the measurement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"NumeratorModule";O:9:"viewfield":16:{s:4:"name";s:15:"NumeratorModule";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:95:"Numerator Module|The name of the module containing data to be used as the measurement numerator";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:23:"NumeratorOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:23:"NumeratorOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"meaa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:13:"NumeratorType";O:9:"viewfield":16:{s:4:"name";s:13:"NumeratorType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Numerator Type|Whether the measurement numerator is a frequency or cost calculation";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"DenominatorTitle";O:9:"viewfield":16:{s:4:"name";s:16:"DenominatorTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Denominator Title|A word or phrase used to describe the denominator used for the measurement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"DenominatorModule";O:9:"viewfield":16:{s:4:"name";s:17:"DenominatorModule";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Denominator Module|The name of the module containing data to be used as the measurement denominator";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:25:"DenominatorOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:25:"DenominatorOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"meaa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:15:"DenominatorType";O:9:"viewfield":16:{s:4:"name";s:15:"DenominatorType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Denominator Type|Whether the measurement denominator is a frequency or cost calculation";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"ChartType";O:9:"editfield":14:{s:4:"name";s:9:"ChartType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";N;s:9:"maxLength";N;s:5:"align";s:4:"left";}s:14:"XIntervalValue";O:9:"editfield":14:{s:4:"name";s:14:"XIntervalValue";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:23:"XIntervalUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:23:"XIntervalUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:11:"XIntervalID";a:1:{s:4:"name";s:11:"XIntervalID";}}s:8:"moduleID";s:4:"meaa";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:11:"XIntervalID";O:10:"combofield":26:{s:4:"name";s:11:"XIntervalID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:23:"XIntervalUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"meaa";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:20:"MeasurementStartDate";O:9:"datefield":15:{s:4:"name";s:20:"MeasurementStartDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:18:"MeasurementEndDate";O:9:"datefield":15:{s:4:"name";s:18:"MeasurementEndDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:9:"Resultant";O:9:"viewfield":16:{s:4:"name";s:9:"Resultant";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:165:"Assignor Result|The rate which results from the calculation of the numerator module, organization, and type divided by the denominator module, organization, and type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"AssigneeResultant";O:9:"viewfield":16:{s:4:"name";s:17:"AssigneeResultant";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:165:"Assignee Result|The rate which results from the calculation of the numerator module, organization, and type divided by the denominator module, organization, and type";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Assigned Measurement");

//field value array
$data = array(
        'MeasurementID' => '',
         'MeasurementTitle' => '',
         'MeasurementPurpose' => '',
         'MeasurementRationale' => '',
         'BenchmarkDescription' => '',
         'BenchmarkValue' => '',
         'AssigningOrganization' => '',
         'AssignedOrganizationID' => '',
         'PersonAccountable' => '',
         'LocalPersonAccountableID' => '',
         'MeasurementOriginDate' => '',
         'MeasurementStatus' => '',
         'NumeratorTitle' => '',
         'NumeratorModule' => '',
         'NumeratorOrganizationID' => '',
         'NumeratorType' => '',
         'DenominatorTitle' => '',
         'DenominatorModule' => '',
         'DenominatorOrganizationID' => '',
         'DenominatorType' => '',
         'ChartType' => '',
         'XIntervalUnitCategoryID' => '',
         'XIntervalID' => '',
         'XIntervalValue' => '',
         'MeasurementStartDate' => '',
         'MeasurementEndDate' => '',
         'Resultant' => '',
         'AssigneeResultant' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'AssignedMeasurementID';

    $ownerField = 'AssignedOrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Culture";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `meaa`.MeasurementID,
   `mea1`.MeasurementTitle AS MeasurementTitle,
   `mea1`.MeasurementPurpose AS MeasurementPurpose,
   `mea1`.MeasurementRationale AS MeasurementRationale,
   `mea1`.BenchmarkDescription AS BenchmarkDescription,
   `mea1`.BenchmarkValue AS BenchmarkValue,
   `org1`.Name AS AssigningOrganization,
   `org4`.Name AS AssignedOrganization,
   `meaa`.AssignedOrganizationID,
   `ppl1`.DisplayName AS PersonAccountable,
   `ppl2`.DisplayName AS LocalPersonAccountable,
   `acc2`.PersonAccountableID AS LocalPersonAccountableID,
   `mea1`.MeasurementOriginDate AS MeasurementOriginDate,
   `cod1`.Description AS MeasurementStatus,
   `mea1`.NumeratorTitle AS NumeratorTitle,
   `mod1`.Name AS NumeratorModule,
   `org2`.Name AS NumeratorOrganization,
   `meaa`.NumeratorOrganizationID,
   `cod2`.Description AS NumeratorType,
   `mea1`.DenominatorTitle AS DenominatorTitle,
   `mod2`.Name AS DenominatorModule,
   `org3`.Name AS DenominatorOrganization,
   `meaa`.DenominatorOrganizationID,
   `cod3`.Description AS DenominatorType,
   `cod4`.Description AS ChartType,
   `cod5`.Description AS XIntervalUnitCategory,
   `uts1`.UnitCategoryID AS XIntervalUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS XInterval,
   `meaa`.XIntervalID,
   `mea1`.XIntervalValue AS XIntervalValue,
   `mea1`.MeasurementStartDate AS MeasurementStartDate,
   `mea1`.MeasurementEndDate AS MeasurementEndDate,
   `mea1`.Resultant AS Resultant,
   `meaa`.AssigneeResultant,
   NULLIF(CONCAT(IFNULL(`mea1`.MeasurementTitle,''),' for the period of: ',IFNULL(`mea1`.MeasurementStartDate,''),' through ',IFNULL(`mea1`.MeasurementEndDate,''),'= ',IFNULL(`meaa`.AssigneeResultant,'')),' for the period of:  through = ') AS RecordLabel
FROM `meaa`
   
     LEFT OUTER JOIN `mea` AS mea1 
   ON (`meaa`.MeasurementID = `mea1`.MeasurementID )
     LEFT OUTER JOIN `org` AS org4 
   ON (`meaa`.AssignedOrganizationID = `org4`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc2 
    ON (`meaa`.AssignedMeasurementID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = 'meaa'
     AND `acc2`._Deleted = 0
     AND `acc2`.AccountabilityDescriptorID = '118')
     LEFT OUTER JOIN `org` AS org2 
   ON (`meaa`.NumeratorOrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `org` AS org3 
   ON (`meaa`.DenominatorOrganizationID = `org3`.OrganizationID )
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`meaa`.XIntervalID = `uts1`.UnitID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`mea1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`mea1`.MeasurementID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'mea'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '57')
     LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`mea1`.MeasurementStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '192')
     LEFT OUTER JOIN `mod` AS mod1 
   ON (`mea1`.NumeratorModuleID = `mod1`.ModuleID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`mea1`.NumeratorTypeID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '71')
     LEFT OUTER JOIN `mod` AS mod2 
   ON (`mea1`.DenominatorModuleID = `mod2`.ModuleID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`mea1`.DenominatorTypeID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '71')
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`mea1`.ChartTypeID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '44')
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`acc2`.PersonAccountableID = `ppl2`.PersonID )
     LEFT OUTER JOIN `cod` AS cod5 
   ON (`uts1`.UnitCategoryID = `cod5`.CodeID 
     AND `cod5`.CodeTypeID = '37')
WHERE
   meaa.AssignedMeasurementID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Assigned Measurement");
        $screenPhrase = gettext("Form|Edit summary information about the organizational measurement");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Assigned Measurements");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'MeasurementID' => gettext("Measurement|A combined field used to describe this measurement when associating it with related records"),
   'MeasurementTitle' => gettext("Title|A word or phrase used to describe this organizational Measurement"),
   'MeasurementPurpose' => gettext("Purpose|A brief description of the purpose for this measurement"),
   'MeasurementRationale' => gettext("Rationale|A detailed description of the rationale for using this measurement. the positive organizational behaviors likely to result from its use and any potential consequences from its use"),
   'BenchmarkDescription' => gettext("Benchmark Description|A brief description of the benchmark value and its source"),
   'BenchmarkValue' => gettext("Benchmark Value|The value against which measurement results are benchmarked"),
   'AssigningOrganization' => gettext("Assigning Organization|The organization with primary responsibility for sponsoring this measurement, tracking performance, and supporting the organization's understanding and use of the measurement"),
   'AssignedOrganizationID' => gettext("Assigned Organization|The organization assigned the measurement and responsible for impacting the results"),
   'PersonAccountable' => gettext("Person Accountable|The person accountable for sponsoring this measurement, tracking performance, and supporting the organization's understanding and use of the measurement"),
   'LocalPersonAccountableID' => gettext("Local Person Accountable|The person accountable for enhancing understanding of the measurement purpose, tracking performance, and leading the local organization to impact results"),
   'MeasurementOriginDate' => gettext("Origin Date|The date the measurement was first used by the organization"),
   'MeasurementStatus' => gettext("Status|The status of this measurement's use within the organization"),
   'NumeratorTitle' => gettext("Numerator Title|A word or phrase used to describe the numerator used for the measurement"),
   'NumeratorModule' => gettext("Numerator Module|The name of the module containing data to be used as the measurement numerator"),
   'NumeratorOrganizationID' => gettext("Numerator Organization|The organization associated with the numerator module selected"),
   'NumeratorType' => gettext("Numerator Type|Whether the measurement numerator is a frequency or cost calculation"),
   'DenominatorTitle' => gettext("Denominator Title|A word or phrase used to describe the denominator used for the measurement"),
   'DenominatorModule' => gettext("Denominator Module|The name of the module containing data to be used as the measurement denominator"),
   'DenominatorOrganizationID' => gettext("Denominator Organization|The organization associated with the denominator module selected"),
   'DenominatorType' => gettext("Denominator Type|Whether the measurement denominator is a frequency or cost calculation"),
   'ChartType' => gettext("Chart Type|The type of chart to be used to display the measurement"),
   'XIntervalValue' => gettext("Interval Value (x axis)|The value associated with the 'x' axis interval"),
   'MeasurementStartDate' => gettext("Start Date|The starting date of the measurement period for charting purposes"),
   'MeasurementEndDate' => gettext("End Date|The ending date of the measurement period for charting purposes"),
   'Resultant' => gettext("Assignor Result|The rate which results from the calculation of the numerator module, organization, and type divided by the denominator module, organization, and type"),
   'AssigneeResultant' => gettext("Assignee Result|The rate which results from the calculation of the numerator module, organization, and type divided by the denominator module, organization, and type")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['AssignedOrganizationID'], ShortPhrase($phrases['AssignedOrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AssignedOrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['LocalPersonAccountableID'], ShortPhrase($phrases['LocalPersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['LocalPersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['NumeratorOrganizationID'], ShortPhrase($phrases['NumeratorOrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['NumeratorOrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['DenominatorOrganizationID'], ShortPhrase($phrases['DenominatorOrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['DenominatorOrganizationID']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Assigned Measurements"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Assigned Measurement") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about the organizational measurement") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the organizational measurement") );
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Assigned Measurement") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"MeasurementStartDate\",
".$User->getCalFormat(false)."
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_MeasurementStartDate\"
});
Calendar.setup({
   inputField : \"MeasurementEndDate\",
".$User->getCalFormat(false)."
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_MeasurementEndDate\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>