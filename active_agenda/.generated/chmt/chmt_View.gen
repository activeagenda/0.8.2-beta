<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:6:{s:14:"ChemicalTypeID";O:9:"viewfield":16:{s:4:"name";s:14:"ChemicalTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:134:"Record ID|A unique number assigned to chemical types which is used to associate and track chemicals possessing similar characteristics";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ChemicalCategory";O:9:"viewfield":16:{s:4:"name";s:16:"ChemicalCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Chemical Category|A method of categorizing chemicals with similar characteristics";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ChemicalTypeName";O:9:"viewfield":16:{s:4:"name";s:16:"ChemicalTypeName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:78:"Chemical Type Name|A specific name used to identify chemicals of similar types";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ChemicalTypeDesc";O:9:"viewfield":16:{s:4:"name";s:16:"ChemicalTypeDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:131:"Chemical Type Description|A detailed description of the chemical category and the criteria for chemicals to belong to this category";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ChemicalTypeColor";O:9:"viewfield":16:{s:4:"name";s:17:"ChemicalTypeColor";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:372:"Chemical Type Color|A method of categorizing and tracking chemicals by assigning colors which are rapidly and readibly distinguishable. This practice can be very helpful within work environments which employ people that speak different languages, where rapid chemical type recognition is necessary (i.e. food plants), or where literacy levels make reading labels difficult";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ApplyColorToLabel";O:9:"viewfield":16:{s:4:"name";s:17:"ApplyColorToLabel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:102:"Apply Color To Label|Whether this category color should be applied to internal chemical control labels";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'ChemicalTypeID' => gettext("Record ID|A unique number assigned to chemical types which is used to associate and track chemicals possessing similar characteristics"),
   'ChemicalCategory' => gettext("Chemical Category|A method of categorizing chemicals with similar characteristics"),
   'ChemicalTypeName' => gettext("Chemical Type Name|A specific name used to identify chemicals of similar types"),
   'ChemicalTypeDesc' => gettext("Chemical Type Description|A detailed description of the chemical category and the criteria for chemicals to belong to this category"),
   'ChemicalTypeColor' => gettext("Chemical Type Color|A method of categorizing and tracking chemicals by assigning colors which are rapidly and readibly distinguishable. This practice can be very helpful within work environments which employ people that speak different languages, where rapid chemical type recognition is necessary (i.e. food plants), or where literacy levels make reading labels difficult"),
   'ApplyColorToLabel' => gettext("Apply Color To Label|Whether this category color should be applied to internal chemical control labels")
   );


    $ownerField = '';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `chmt`.ChemicalTypeID,
   `cod1`.Description AS ChemicalCategory,
   `chmt`.ChemicalTypeName,
   `chmt`.ChemicalTypeDesc,
   `chmt`.ChemicalTypeColor,
   `chmt`.ApplyColorToLabel,
   NULLIF(CONCAT(IFNULL(`cod1`.Description,''),' | ',IFNULL(`chmt`.ChemicalTypeName,'')),' | ') AS RecordLabel
FROM `chmt`
   
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`chmt`.ChemicalCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '17')
WHERE
   chmt.ChemicalTypeID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Chemical Types"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Chemical Type") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about chemical categories") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Chemical Type") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Chemical Type") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Chemical Type");
    $screenPhrase = gettext("View|View summary information about chemical categories");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
