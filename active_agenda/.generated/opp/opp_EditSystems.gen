<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:12:{s:11:"OppPermitID";O:9:"viewfield":16:{s:4:"name";s:11:"OppPermitID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Record ID|An automatically assigned number used to operating permits";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"PermitTypeID";O:14:"invisiblefield":11:{s:4:"name";s:12:"PermitTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:10:"PermitName";O:9:"viewfield":16:{s:4:"name";s:10:"PermitName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:46:"Permit Name|The name of the operational permit";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"Organization|The name of the organization responsible for application for, and maintenance of, the operating permit";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Person Accountable|The individual assigned primary accountability for managing this permit";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"PermitType";O:9:"viewfield":16:{s:4:"name";s:10:"PermitType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Permit Type|A combined field used to describe this permit type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"PermitTypeDesc";O:9:"viewfield":16:{s:4:"name";s:14:"PermitTypeDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Permit Type Description|A detailed description of the operating permit type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"PermitDesc";O:9:"viewfield":16:{s:4:"name";s:10:"PermitDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Permit Description|A brief description of the scope, purpose and conditions of the permit and any other pertinent information";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"EffectiveDate";O:9:"viewfield":16:{s:4:"name";s:13:"EffectiveDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Effective Date|The date the operating permit first went into into effect";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ExpirationDate";O:9:"viewfield":16:{s:4:"name";s:14:"ExpirationDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Expiration Date|The date the operating permit is scheduled to expire if it is not renewed";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"TotalEstOpp";O:9:"viewfield":16:{s:4:"name";s:11:"TotalEstOpp";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Estimated Opportunity|The total estimated financial opportunity associated with the operating permit";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"TotalEstExp";O:9:"viewfield":16:{s:4:"name";s:11:"TotalEstExp";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Estimated Exposure|The total estimated cost exposure associated with the operating permit";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Operating Permit");

//field value array
$data = array(
        'OppPermitID' => '',
         'PermitTypeID' => '',
         'PermitName' => '',
         'Organization' => '',
         'PersonAccountable' => '',
         'PermitType' => '',
         'PermitTypeDesc' => '',
         'PermitDesc' => '',
         'EffectiveDate' => '',
         'ExpirationDate' => '',
         'TotalEstOpp' => '',
         'TotalEstExp' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:1018:"SELECT 
   `oppsa`.PermitSystemID,
   `org1`.Name AS Organization,
   `sys1`.OrganizationID AS OrganizationID,
   NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
   `orgla1`.LocationID AS LocationID,
   NULLIF(CONCAT(IFNULL(`sys1`.SystemName,\'\')),\'\') AS System,
   `oppsa`.SystemID,
   `oppsa`.PermitSystemEffect
FROM `oppsa`
   
     LEFT OUTER JOIN `sys` AS sys1 
   ON (`oppsa`.SystemID = `sys1`.SystemID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`oppsa`.PermitSystemID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'oppsa\'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `org` AS org1 
   ON (`sys1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   oppsa.PermitSystemID=\'/**RowID**/\'";s:9:"getRowSQL";s:932:"SELECT 
   `org1`.Name AS Organization,
   NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
   NULLIF(CONCAT(IFNULL(`sys1`.SystemName,\'\')),\'\') AS System,
   `oppsa`.PermitSystemEffect,
   `sys1`.OrganizationID AS OrganizationID
FROM `oppsa`
   
     LEFT OUTER JOIN `sys` AS sys1 
   ON (`oppsa`.SystemID = `sys1`.SystemID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`oppsa`.PermitSystemID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'oppsa\'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `org` AS org1 
   ON (`sys1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   oppsa.PermitSystemID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:5:{s:14:"PermitSystemID";O:14:"invisiblefield":11:{s:4:"name";s:14:"PermitSystemID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:126:"Permit System ID|A unique number assigned to systems so that multiple systems can be associated with a single operating permit";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"oppsa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Organization|The name of the organization where the system or process exists";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"oppsa";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"LocationID";a:1:{s:4:"name";s:10:"LocationID";}}s:8:"moduleID";s:5:"oppsa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:10:"LocationID";O:10:"combofield":26:{s:4:"name";s:10:"LocationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Location|Specific location within the facility where the system is located";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"oppsa";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgl";s:10:"foreignKey";s:10:"LocationID";s:12:"foreignField";s:8:"Location";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:371:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE orgl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:369:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `orgl`.LocationID = \'/*recordID*/\'";s:11:"parentField";s:14:"OrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:8:"SystemID";a:1:{s:4:"name";s:8:"SystemID";}}s:8:"moduleID";s:5:"oppsa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`orgl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:8:"SystemID";O:10:"combofield":26:{s:4:"name";s:8:"SystemID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"System|A combined field used to describe this system when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"oppsa";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"sys";s:10:"foreignKey";s:8:"SystemID";s:12:"foreignField";s:6:"System";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:332:"SELECT 
`sys`.SystemID AS ID, NULLIF(CONCAT(IFNULL(`sys`.SystemName,\'\')),\'\') AS Name, `orgla1`.LocationID AS ParentID FROM `sys`
 
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`sys`.SystemID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'sys\'
     AND `orgla1`._Deleted = 0)
WHERE sys._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:328:"SELECT 
`sys`.SystemID AS ID, NULLIF(CONCAT(IFNULL(`sys`.SystemName,\'\')),\'\') AS Name, `orgla1`.LocationID AS ParentID FROM `sys`
 
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`sys`.SystemID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'sys\'
     AND `orgla1`._Deleted = 0)

WHERE `sys`.SystemID = \'/*recordID*/\'";s:11:"parentField";s:10:"LocationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"oppsa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`sys`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:18:"PermitSystemEffect";O:9:"memofield":15:{s:4:"name";s:18:"PermitSystemEffect";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:108:"Effect of Permit|A detailed description of how the operating permit affects the status and use of the system";s:8:"dataType";s:12:"varchar(255)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:14:"PermitSystemID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:5:"oppsa";s:6:"phrase";s:16:"Systems Affected";s:6:"number";i:1;s:6:"Fields";a:4:{s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Organization|The name of the organization where the system or process exists";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"oppsa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Location|Specific location within the facility where the system is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"oppsa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"System";O:9:"viewfield":16:{s:4:"name";s:6:"System";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"System|A combined field used to describe this system when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"oppsa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"PermitSystemEffect";O:9:"viewfield":16:{s:4:"name";s:18:"PermitSystemEffect";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:108:"Effect of Permit|A detailed description of how the operating permit affects the status and use of the system";s:8:"dataType";s:12:"varchar(255)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"oppsa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:110:"SELECT 
    count(*) 
FROM `oppsa`
   
WHERE oppsa._Deleted = 0
   AND `oppsa`.OppPermitID = \'/**RecordID**/\'
";s:7:"listSQL";s:955:"SELECT 
   `oppsa`.PermitSystemID,
`sys1`.OrganizationID AS OrganizationID,
`org1`.Name AS Organization,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
NULLIF(CONCAT(IFNULL(`sys1`.SystemName,\'\')),\'\') AS System,
`oppsa`.PermitSystemEffect
FROM `oppsa`

   LEFT OUTER JOIN `sys` AS sys1 
   ON (`oppsa`.SystemID = `sys1`.SystemID )
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`oppsa`.PermitSystemID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'oppsa\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `org` AS org1 
   ON (`sys1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE oppsa._Deleted = 0
AND `oppsa`.OppPermitID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:11:"OppPermitID";s:9:"parentKey";s:11:"OppPermitID";s:8:"PKFields";a:1:{i:0;s:14:"PermitSystemID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');


    /**guidanceGrid**/

    $PKField = 'OppPermitID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Waste";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `opp`.OppPermitID,
   `opp`.PermitTypeID,
   `opp`.PermitName,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   NULLIF(CONCAT(IFNULL(`oppt1`.PermitTypeName,'')),'') AS PermitType,
   `oppt1`.PermitTypeDesc AS PermitTypeDesc,
   `opp`.PermitDesc,
   `dat1`.RelatedDate AS EffectiveDate,
   `dat2`.RelatedDate AS ExpirationDate,
   `opt1`.TotalEstOpp AS TotalEstOpp,
   `cosex1`.TotalEstExp AS TotalEstExp,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`oppt1`.PermitTypeName,'')),''),''),' | ',IFNULL(`opp`.PermitName,'')),' | ') AS RecordLabel,
   `opp`.OrganizationID
FROM `opp`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`opp`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`opp`.OppPermitID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'opp'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '59')
     LEFT OUTER JOIN `oppt` AS oppt1 
   ON (`opp`.PermitTypeID = `oppt1`.PermitTypeID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`opp`.OppPermitID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'opp'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '17')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`opp`.OppPermitID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'opp'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '10')
     LEFT OUTER JOIN (SELECT 
SUM(ROUND(`opt`.Estimate, 2)) AS TotalEstOpp,
`opt`.RelatedRecordID FROM `opt` 
 WHERE `opt`._Deleted = 0 
 AND RelatedModuleID = 'opp' 
 AND 'opp' = `opt`.RelatedModuleID
GROUP BY `opt`.RelatedRecordID 
) AS opt1 
ON (`opp`.OppPermitID = opt1.RelatedRecordID) 
     LEFT OUTER JOIN (SELECT 
SUM(ROUND(`cosex`.Estimate, 2)) AS TotalEstExp,
`cosex`.RelatedRecordID FROM `cosex` 
 WHERE `cosex`._Deleted = 0 
 AND RelatedModuleID = 'opp' 
 AND 'opp' = `cosex`.RelatedModuleID
GROUP BY `cosex`.RelatedRecordID 
) AS cosex1 
ON (`opp`.OppPermitID = cosex1.RelatedRecordID) 
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   opp.OppPermitID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Operating Permit");
        $screenPhrase = gettext("Systems|Associate systems affected by the operating permit");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Operating Permits");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'OppPermitID' => gettext("Record ID|An automatically assigned number used to operating permits"),
   'PermitTypeID' => gettext("Record ID|An automatically assigned number used to track permit types required throughout the enterprise"),
   'PermitName' => gettext("Permit Name|The name of the operational permit"),
   'Organization' => gettext("Organization|The name of the organization responsible for application for, and maintenance of, the operating permit"),
   'PersonAccountable' => gettext("Person Accountable|The individual assigned primary accountability for managing this permit"),
   'PermitType' => gettext("Permit Type|A combined field used to describe this permit type when associating it with other records"),
   'PermitTypeDesc' => gettext("Permit Type Description|A detailed description of the operating permit type"),
   'PermitDesc' => gettext("Permit Description|A brief description of the scope, purpose and conditions of the permit and any other pertinent information"),
   'EffectiveDate' => gettext("Effective Date|The date the operating permit first went into into effect"),
   'ExpirationDate' => gettext("Expiration Date|The date the operating permit is scheduled to expire if it is not renewed"),
   'TotalEstOpp' => gettext("Estimated Opportunity|The total estimated financial opportunity associated with the operating permit"),
   'TotalEstExp' => gettext("Estimated Exposure|The total estimated cost exposure associated with the operating permit")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**-remove_begin-**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        


        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**-remove_end-**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Operating Permits"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Operating Permit") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about an operating permit") );
      $tempTabs['Application'] = array( "edit.php?scr=Application&$tabsQS", gettext("Application|Associate permit applications with the operating permit") );
      $tempTabs['Fees'] = array( "edit.php?scr=Fees&$tabsQS", gettext("Fees|Associate permit fees with the operating permit") );
      $tempTabs['Numbers'] = array( "edit.php?scr=Numbers&$tabsQS", gettext("Numbers|Associate permit numbers with the operating permit") );
      $tempTabs['Categories'] = array( "edit.php?scr=Categories&$tabsQS", gettext("Categories|Associate permit categories with the operating permit") );
      $tempTabs['Conditions'] = array( "edit.php?scr=Conditions&$tabsQS", gettext("Conditions|Associate permit conditions with the operating permit") );
      $tempTabs['Reporting'] = array( "edit.php?scr=Reporting&$tabsQS", gettext("Reporting|Associate reporting requirements with the operating permit") );
      $tempTabs['Penalties'] = array( "edit.php?scr=Penalties&$tabsQS", gettext("Penalties|Associate penalties with the operating permit") );
      $tempTabs['Organizations'] = array( "edit.php?scr=Organizations&$tabsQS", gettext("Organizations|Associate organizations affected with the operating permit") );
      $tempTabs['Buildings'] = array( "edit.php?scr=Buildings&$tabsQS", gettext("Buildings|Associate buildings with the operating permit") );
      $tempTabs['Chemicals'] = array( "edit.php?scr=Chemicals&$tabsQS", gettext("Chemicals|Associate chemicals affected by the operating permit") );
      $tempTabs['Equipment'] = array( "edit.php?scr=Equipment&$tabsQS", gettext("Equipment|Associate equipment affected by the operating permit") );
      $tempTabs['Systems'] = array( "", gettext("Systems|Associate systems affected by the operating permit") );
      $tempTabs['Waste'] = array( "edit.php?scr=Waste&$tabsQS", gettext("Waste|Associate waste streams by the operating permit") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate audit requirements with the operating permit") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Exposures|Associate cost exposures with the operating permit") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the operating permit") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the operating permit") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the operating permit") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the operating permit") );
      $tempTabs['BusinessContinuation'] = array( "edit.php?scr=BusinessContinuation&$tabsQS", gettext("Continuity|Associate an operating permit with business continuation requirements") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate business agreements and/or contracts with an operating permit") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the operating permit") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the operating permit") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with a physical operating permit file") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with an operating permit") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with an operating permit") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Systems'] = array( "", gettext("New Permit") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>