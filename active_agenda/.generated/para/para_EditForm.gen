<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:16:{s:18:"PartnershipAuditID";O:9:"viewfield":16:{s:4:"name";s:18:"PartnershipAuditID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Record ID|An automatically assigned number used to track partnership audits";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:13:"PartnershipID";a:1:{s:4:"name";s:13:"PartnershipID";}}s:8:"moduleID";s:4:"para";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:13:"PartnershipID";O:10:"combofield":26:{s:4:"name";s:13:"PartnershipID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"par";s:10:"foreignKey";s:13:"PartnershipID";s:12:"foreignField";s:11:"Partnership";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:183:"SELECT 
`par`.PartnershipID AS ID, NULLIF(CONCAT(IFNULL(`par`.PartnershipTitle,\'\')),\'\') AS Name, `par`.OrganizationID AS ParentID FROM `par`
WHERE par._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:184:"SELECT 
`par`.PartnershipID AS ID, NULLIF(CONCAT(IFNULL(`par`.PartnershipTitle,\'\')),\'\') AS Name, `par`.OrganizationID AS ParentID FROM `par`

WHERE `par`.PartnershipID = \'/*recordID*/\'";s:11:"parentField";s:14:"OrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"para";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`par`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:22:"AuditingOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:22:"AuditingOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"para";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"para";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"AuditBeginDate";O:9:"datefield":15:{s:4:"name";s:14:"AuditBeginDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"AuditEndDate";O:9:"datefield":15:{s:4:"name";s:12:"AuditEndDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"AuditPurpose";O:9:"memofield":15:{s:4:"name";s:12:"AuditPurpose";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:10:"AuditScope";O:9:"memofield":15:{s:4:"name";s:10:"AuditScope";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:22:"ImprovementOpportunity";O:9:"memofield":15:{s:4:"name";s:22:"ImprovementOpportunity";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:18:"SharingOpportunity";O:9:"memofield":15:{s:4:"name";s:18:"SharingOpportunity";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:17:"GoalEstablisherID";O:16:"personcombofield":29:{s:4:"name";s:17:"GoalEstablisherID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"para";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:21:"GoalEstablisherID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:22:"SharedExpectationsGoal";O:9:"editfield":14:{s:4:"name";s:22:"SharedExpectationsGoal";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:23:"SharedExpectationsScore";O:9:"viewfield":16:{s:4:"name";s:23:"SharedExpectationsScore";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Shared Expectations Score|The shared expectations score achieved by the organization implementing the partnership";s:8:"dataType";s:10:"decimal(2)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";s:5:"01.2f";s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:21:"LocalExpectationsGoal";O:9:"editfield":14:{s:4:"name";s:21:"LocalExpectationsGoal";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:22:"LocalExpectationsScore";O:9:"viewfield":16:{s:4:"name";s:22:"LocalExpectationsScore";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:111:"Local Expectations Score|The local expectations score achieved by the organization implementing the partnership";s:8:"dataType";s:10:"decimal(2)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";s:5:"01.2f";s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Partnership Audit");

//field value array
$data = array(
        'PartnershipAuditID' => '',
         'OrganizationID' => '',
         'PartnershipID' => '',
         'AuditingOrganizationID' => '',
         'PersonAccountableID' => '',
         'AuditBeginDate' => '',
         'AuditEndDate' => '',
         'AuditPurpose' => '',
         'AuditScope' => '',
         'ImprovementOpportunity' => '',
         'SharingOpportunity' => '',
         'GoalEstablisherID' => '',
         'SharedExpectationsGoal' => '',
         'SharedExpectationsScore' => '',
         'LocalExpectationsGoal' => '',
         'LocalExpectationsScore' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'PartnershipAuditID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "SharedExpectationScores";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `para`.PartnershipAuditID,
   `org1`.Name AS Organization,
   `par1`.OrganizationID AS OrganizationID,
   NULLIF(CONCAT(IFNULL(`par1`.PartnershipTitle,'')),'') AS Partnership,
   `para`.PartnershipID,
   `org2`.Name AS AuditingOrganization,
   `para`.AuditingOrganizationID,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `dat1`.RelatedDate AS AuditBeginDate,
   `dat2`.RelatedDate AS AuditEndDate,
   `para`.AuditPurpose,
   `para`.AuditScope,
   `para`.ImprovementOpportunity,
   `para`.SharingOpportunity,
   `ppl2`.DisplayName AS GoalEstablisher,
   `acc2`.PersonAccountableID AS GoalEstablisherID,
   `para`.SharedExpectationsGoal,
   `parss1`.SharedExpectationsScore AS SharedExpectationsScore,
   `para`.LocalExpectationsGoal,
   `parls1`.LocalExpectationsScore AS LocalExpectationsScore,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`par1`.PartnershipTitle,'')),''),''),' | ',IFNULL(`org1`.Name,''),' | Audited By: ',IFNULL(`org2`.Name,'')),' |  | Audited By: ') AS RecordLabel
FROM `para`
   
     LEFT OUTER JOIN `par` AS par1 
   ON (`para`.PartnershipID = `par1`.PartnershipID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`para`.AuditingOrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`para`.PartnershipAuditID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'para'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '133')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`para`.PartnershipAuditID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'para'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '28')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`para`.PartnershipAuditID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'para'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '36')
     LEFT OUTER JOIN `acc` AS acc2 
    ON (`para`.PartnershipAuditID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = 'para'
     AND `acc2`._Deleted = 0
     AND `acc2`.AccountabilityDescriptorID = '134')
     LEFT OUTER JOIN (SELECT 
AVG(`parss`.Score) AS SharedExpectationsScore,
`parss`.PartnershipAuditID FROM `parss` 
 WHERE `parss`._Deleted = 0 
GROUP BY `parss`.PartnershipAuditID 
) AS parss1 
ON (`para`.PartnershipAuditID = parss1.PartnershipAuditID) 
     LEFT OUTER JOIN (SELECT 
AVG(`parls`.Score) AS LocalExpectationsScore,
`parls`.PartnershipAuditID FROM `parls` 
 WHERE `parls`._Deleted = 0 
GROUP BY `parls`.PartnershipAuditID 
) AS parls1 
ON (`para`.PartnershipAuditID = parls1.PartnershipAuditID) 
     LEFT OUTER JOIN `org` AS org1 
   ON (`par1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`acc2`.PersonAccountableID = `ppl2`.PersonID )
WHERE
   para.PartnershipAuditID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Partnership Audit");
        $screenPhrase = gettext("Form|Edit a partnership audit");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Partnership Audits");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'PartnershipAuditID' => gettext("Record ID|An automatically assigned number used to track partnership audits"),
   'OrganizationID' => gettext("Implementing Organization|The organization with primary responsibility for implementing this partnership and maintaining currency with existing laws and internal requirements"),
   'PartnershipID' => gettext("Partnership|A combined field used to describe this partnership when associating it with other records"),
   'AuditingOrganizationID' => gettext("Auditing Organization|The name of the organization responsible for conducting the audit"),
   'PersonAccountableID' => gettext("Audit Team Leader|The individual assigned primary accountability for conducting the audit of this partnership and ensuring compliance with existing laws and internal requirements"),
   'AuditBeginDate' => gettext("Audit Begin Date|Date and time the audit started"),
   'AuditEndDate' => gettext("Audit End Date|Date and time the audit ended"),
   'AuditPurpose' => gettext("Purpose|A detailed description of the purpose for the audit"),
   'AuditScope' => gettext("Scope|A detailed description of the scope of the audit"),
   'ImprovementOpportunity' => gettext("Opportunities for Improvement|A detailed description of any improvement opportunities identified during the course of the audit"),
   'SharingOpportunity' => gettext("Opportunities to Share|A detailed description of any opportunities to share best practices identified during the course of the audit"),
   'GoalEstablisherID' => gettext("Goal Establisher|The person establishing the shared and local expectation audit score goals"),
   'SharedExpectationsGoal' => gettext("Shared Expectations Goal|The goal established by the organization implementing the partnership relative to the shared expectations"),
   'SharedExpectationsScore' => gettext("Shared Expectations Score|The shared expectations score achieved by the organization implementing the partnership"),
   'LocalExpectationsGoal' => gettext("Local Expectations Goal|The goal established by the organization implementing the partnership relative to location specific expectations based on self determined best practices"),
   'LocalExpectationsScore' => gettext("Local Expectations Score|The local expectations score achieved by the organization implementing the partnership")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['PartnershipID'], ShortPhrase($phrases['PartnershipID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PartnershipID']->invalid = TRUE;
            }
$vMsg = Validate($data['AuditingOrganizationID'], ShortPhrase($phrases['AuditingOrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AuditingOrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['AuditBeginDate'], ShortPhrase($phrases['AuditBeginDate']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AuditBeginDate']->invalid = TRUE;
            }
$vMsg = Validate($data['AuditEndDate'], ShortPhrase($phrases['AuditEndDate']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AuditEndDate']->invalid = TRUE;
            }
$vMsg = Validate($data['AuditPurpose'], ShortPhrase($phrases['AuditPurpose']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AuditPurpose']->invalid = TRUE;
            }
$vMsg = Validate($data['AuditScope'], ShortPhrase($phrases['AuditScope']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AuditScope']->invalid = TRUE;
            }
$vMsg = Validate($data['ImprovementOpportunity'], ShortPhrase($phrases['ImprovementOpportunity']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ImprovementOpportunity']->invalid = TRUE;
            }
$vMsg = Validate($data['SharingOpportunity'], ShortPhrase($phrases['SharingOpportunity']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SharingOpportunity']->invalid = TRUE;
            }
$vMsg = Validate($data['GoalEstablisherID'], ShortPhrase($phrases['GoalEstablisherID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['GoalEstablisherID']->invalid = TRUE;
            }
$vMsg = Validate($data['SharedExpectationsGoal'], ShortPhrase($phrases['SharedExpectationsGoal']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SharedExpectationsGoal']->invalid = TRUE;
            }
$vMsg = Validate($data['LocalExpectationsGoal'], ShortPhrase($phrases['LocalExpectationsGoal']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['LocalExpectationsGoal']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Partnership Audits"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Partnership Audit") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit a partnership audit") );
      $tempTabs['SharedExpectationScores'] = array( "edit.php?scr=SharedExpectationScores&$tabsQS", gettext("Shared Scores|Enter or modify shared expectation scores") );
      $tempTabs['LocalExpectationScores'] = array( "edit.php?scr=LocalExpectationScores&$tabsQS", gettext("Local Scores|Enter or modify local expectation scores") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate local regulations with a partnership") );
      $tempTabs['Responsibilities'] = array( "edit.php?scr=Responsibilities&$tabsQS", gettext("Responsibilities|Assign organizational level responsibilities to a partnership") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the partnership") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the partnership") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with a partnership") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with a partnership") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Audit") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"AuditBeginDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_AuditBeginDate\"
});
Calendar.setup({
   inputField : \"AuditEndDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_AuditEndDate\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>