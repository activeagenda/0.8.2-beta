<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:9:{s:18:"PartnershipAuditID";O:9:"viewfield":16:{s:4:"name";s:18:"PartnershipAuditID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Record ID|An automatically assigned number used to track partnership audits";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:174:"Implementing Organization|The organization with primary responsibility for implementing this partnership and maintaining currency with existing laws and internal requirements";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"Partnership";O:9:"viewfield":16:{s:4:"name";s:11:"Partnership";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Partnership|A combined field used to describe this partnership when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"AuditingOrganization";O:9:"viewfield":16:{s:4:"name";s:20:"AuditingOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Auditing Organization|The name of the organization responsible for conducting the audit";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:178:"Audit Team Leader|The individual assigned primary accountability for conducting the audit of this partnership and ensuring compliance with existing laws and internal requirements";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"AuditBeginDate";O:9:"viewfield":16:{s:4:"name";s:14:"AuditBeginDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:48:"Audit Begin Date|Date and time the audit started";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"AuditPurpose";O:9:"viewfield":16:{s:4:"name";s:12:"AuditPurpose";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:59:"Purpose|A detailed description of the purpose for the audit";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:23:"SharedExpectationsScore";O:9:"viewfield":16:{s:4:"name";s:23:"SharedExpectationsScore";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Shared Expectations Score|The shared expectations score achieved by the organization implementing the partnership";s:8:"dataType";s:10:"decimal(2)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";s:5:"01.2f";s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:22:"LocalExpectationsScore";O:9:"viewfield":16:{s:4:"name";s:22:"LocalExpectationsScore";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:111:"Local Expectations Score|The local expectations score achieved by the organization implementing the partnership";s:8:"dataType";s:10:"decimal(2)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";s:5:"01.2f";s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Partnership Audit");

//field value array
$data = array(
        'PartnershipAuditID' => '',
         'Organization' => '',
         'Partnership' => '',
         'AuditingOrganization' => '',
         'PersonAccountable' => '',
         'AuditBeginDate' => '',
         'AuditPurpose' => '',
         'SharedExpectationsScore' => '',
         'LocalExpectationsScore' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":32:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:2349:"SELECT 
   `filr`.FileRecordID,
   `org1`.Name AS FilingOrganization,
   `filph1`.FilingOrganizationID AS FilingOrganizationID,
   NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
   `orgla1`.LocationID AS LocationID,
   NULLIF(CONCAT(IFNULL(`filph1`.FileName,\'\'),\' \',IFNULL(`ppl1`.DisplayName,\'\')),\' \') AS FileRetention,
   `filr`.FileRetentionID,
   `filph1`.FileName AS FileName,
   `filph1`.FileNumber AS FileNumber,
   NULLIF(CONCAT(IFNULL(`filph1`.FilingOrganizationID,\'\'),IFNULL(`orgla1`.LocationID,\'\'),IFNULL(`fil1`.FileTypeID,\'\'),IFNULL(`filph1`.FileRetentionID,\'\')),\'\') AS SystemNumber,
   `ppl2`.DisplayName AS FilingPersonAccountable,
   `ppl3`.DisplayName AS FileSubject,
   `cod1`.Description AS PhysicalFileStatus
FROM `filr`
   
     LEFT OUTER JOIN `filph` AS filph1 
   ON (`filr`.FileRetentionID = `filph1`.FileRetentionID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`filph1`.FilingOrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`filph1`.FileRetentionID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'filph\'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`filph1`.FileRetentionID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'filph\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'85\')
     LEFT OUTER JOIN `fil` AS fil1 
   ON (`filph1`.FileReqID = `fil1`.FileReqID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`filph1`.FileRetentionID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'filph\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'107\')
     LEFT OUTER JOIN `ppl` AS ppl2 
ON (`acc1`.PersonAccountableID = `ppl2`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl3 
ON (`inv1`.PersonInvolvedID = `ppl3`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`filph1`.PhysicalFileStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'85\')
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   filr.FileRecordID=\'/**RowID**/\'";s:9:"getRowSQL";s:1236:"SELECT 
   `filr`.FileRecordID,
   `org1`.Name AS FilingOrganization,
   NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
   `filph1`.FileName AS FileName,
   `filph1`.FileNumber AS FileNumber,
   NULLIF(CONCAT(IFNULL(`filph1`.FilingOrganizationID,\'\'),IFNULL(`orgla1`.LocationID,\'\'),IFNULL(`fil1`.FileTypeID,\'\'),IFNULL(`filph1`.FileRetentionID,\'\')),\'\') AS SystemNumber,
   `filph1`.FilingOrganizationID AS FilingOrganizationID
FROM `filr`
   
     LEFT OUTER JOIN `filph` AS filph1 
   ON (`filr`.FileRetentionID = `filph1`.FileRetentionID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`filph1`.FilingOrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`filph1`.FileRetentionID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'filph\'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `fil` AS fil1 
   ON (`filph1`.FileReqID = `fil1`.FileReqID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   filr.FileRecordID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:10:{s:12:"FileRecordID";O:14:"invisiblefield":11:{s:4:"name";s:12:"FileRecordID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Record ID|An automatically assigned number used to associate records with physical files";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:20:"FilingOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:20:"FilingOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Filing Organization|The name of the organization where the  where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"LocationID";a:1:{s:4:"name";s:10:"LocationID";}}s:8:"moduleID";s:4:"filr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:10:"LocationID";O:10:"combofield":26:{s:4:"name";s:10:"LocationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"File Location|Specific area within the facility where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgl";s:10:"foreignKey";s:10:"LocationID";s:12:"foreignField";s:8:"Location";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:371:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE orgl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:369:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `orgl`.LocationID = \'/*recordID*/\'";s:11:"parentField";s:20:"FilingOrganizationID";s:21:"parentListModuleField";s:14:"OrganizationID";s:11:"childFields";a:1:{s:15:"FileRetentionID";a:1:{s:4:"name";s:15:"FileRetentionID";}}s:8:"moduleID";s:4:"filr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`orgl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:15:"FileRetentionID";O:10:"combofield":26:{s:4:"name";s:15:"FileRetentionID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"File|The name of the file where the where the record is located";s:8:"dataType";s:3:"int";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"filph";s:10:"foreignKey";s:15:"FileRetentionID";s:12:"foreignField";s:13:"FileRetention";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:681:"SELECT 
`filph`.FileRetentionID AS ID, NULLIF(CONCAT(IFNULL(`filph`.FileName,\'\'),\' \',IFNULL(`ppl1`.DisplayName,\'\')),\' \') AS Name, `orgla1`.LocationID AS ParentID FROM `filph`
 
 LEFT OUTER JOIN `inv` AS inv1 
    ON (`filph`.FileRetentionID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'filph\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'85\')
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`filph`.FileRetentionID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'filph\'
     AND `orgla1`._Deleted = 0)
 LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
WHERE filph._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:684:"SELECT 
`filph`.FileRetentionID AS ID, NULLIF(CONCAT(IFNULL(`filph`.FileName,\'\'),\' \',IFNULL(`ppl1`.DisplayName,\'\')),\' \') AS Name, `orgla1`.LocationID AS ParentID FROM `filph`
 
 LEFT OUTER JOIN `inv` AS inv1 
    ON (`filph`.FileRetentionID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'filph\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'85\')
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`filph`.FileRetentionID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'filph\'
     AND `orgla1`._Deleted = 0)
 LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )

WHERE `filph`.FileRetentionID = \'/*recordID*/\'";s:11:"parentField";s:10:"LocationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"filr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:36:"`filph`.FilingOrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:8:"FileName";O:9:"viewfield":16:{s:4:"name";s:8:"FileName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"File Name|A short title or phrase used to identify the physical file";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:15:"FileRetentionID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:10:"FileNumber";O:9:"viewfield":16:{s:4:"name";s:10:"FileNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"File Number|A number manually assigned to a file for tracking purposes";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:15:"FileRetentionID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:12:"SystemNumber";O:9:"viewfield":16:{s:4:"name";s:12:"SystemNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:262:"System Number|A unique number assigned to the phisical file based on a combination of fields from within the file retention module. The system number is comprised of the filing organization ID, the filing location ID, the file type ID and the record retention ID";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:15:"FileRetentionID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:23:"FilingPersonAccountable";O:9:"viewfield":16:{s:4:"name";s:23:"FilingPersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Person Accountable|The name of the person responsible for records retention and disposal";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:15:"FileRetentionID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"FileSubject";O:9:"viewfield":16:{s:4:"name";s:11:"FileSubject";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"File Subject|The name of the individual, when applicable, that is the subject of the physical file";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:15:"FileRetentionID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:18:"PhysicalFileStatus";O:9:"viewfield":16:{s:4:"name";s:18:"PhysicalFileStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:78:"File Status|The current status of the physical file associated with the record";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:15:"FileRetentionID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:12:"FileRecordID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"filr";s:6:"phrase";s:14:"Physical Files";s:6:"number";i:1;s:6:"Fields";a:6:{s:12:"FileRecordID";O:14:"invisiblefield":11:{s:4:"name";s:12:"FileRecordID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Record ID|An automatically assigned number used to associate records with physical files";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"FilingOrganization";O:9:"viewfield":16:{s:4:"name";s:18:"FilingOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Filing Organization|The name of the organization where the  where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"File Location|Specific area within the facility where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"FileName";O:9:"viewfield":16:{s:4:"name";s:8:"FileName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"File Name|A short title or phrase used to identify the physical file";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"FileNumber";O:9:"viewfield":16:{s:4:"name";s:10:"FileNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"File Number|A number manually assigned to a file for tracking purposes";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"SystemNumber";O:9:"viewfield":16:{s:4:"name";s:12:"SystemNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:262:"System Number|A unique number assigned to the phisical file based on a combination of fields from within the file retention module. The system number is comprised of the filing organization ID, the filing location ID, the file type ID and the record retention ID";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:147:"SELECT 
    count(*) 
FROM `filr`
   
WHERE filr._Deleted = 0
   AND `filr`.RelatedModuleID = \'para\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1268:"SELECT 
   `filr`.FileRecordID,
`filph1`.FilingOrganizationID AS FilingOrganizationID,
`org1`.Name AS FilingOrganization,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
`filph1`.FileName AS FileName,
`filph1`.FileNumber AS FileNumber,
NULLIF(CONCAT(IFNULL(`filph1`.FilingOrganizationID,\'\'),IFNULL(`orgla1`.LocationID,\'\'),IFNULL(`fil1`.FileTypeID,\'\'),IFNULL(`filph1`.FileRetentionID,\'\')),\'\') AS SystemNumber
FROM `filr`

   LEFT OUTER JOIN `filph` AS filph1 
   ON (`filr`.FileRetentionID = `filph1`.FileRetentionID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`filph1`.FilingOrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`filph1`.FileRetentionID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'filph\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `fil` AS fil1 
   ON (`filph1`.FileReqID = `fil1`.FileReqID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE filr._Deleted = 0
AND `filr`.RelatedModuleID = \'para\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";s:18:"PartnershipAuditID";s:8:"PKFields";a:1:{i:0;s:12:"FileRecordID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:10:"conditions";a:1:{s:15:"RelatedModuleID";s:4:"para";}}');


    /**guidanceGrid**/

    $PKField = 'PartnershipAuditID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "BestPractices";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `para`.PartnershipAuditID,
   `org1`.Name AS Organization,
   NULLIF(CONCAT(IFNULL(`par1`.PartnershipTitle,'')),'') AS Partnership,
   `org2`.Name AS AuditingOrganization,
   `ppl1`.DisplayName AS PersonAccountable,
   `dat1`.RelatedDate AS AuditBeginDate,
   `para`.AuditPurpose,
   `parss1`.SharedExpectationsScore AS SharedExpectationsScore,
   `parls1`.LocalExpectationsScore AS LocalExpectationsScore,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`par1`.PartnershipTitle,'')),''),''),' | ',IFNULL(`org1`.Name,''),' | Audited By: ',IFNULL(`org2`.Name,'')),' |  | Audited By: ') AS RecordLabel,
   `par1`.OrganizationID AS OrganizationID
FROM `para`
   
     LEFT OUTER JOIN `par` AS par1 
   ON (`para`.PartnershipID = `par1`.PartnershipID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`para`.AuditingOrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`para`.PartnershipAuditID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'para'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '133')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`para`.PartnershipAuditID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'para'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '28')
     LEFT OUTER JOIN (SELECT 
AVG(`parss`.Score) AS SharedExpectationsScore,
`parss`.PartnershipAuditID FROM `parss` 
 WHERE `parss`._Deleted = 0 
GROUP BY `parss`.PartnershipAuditID 
) AS parss1 
ON (`para`.PartnershipAuditID = parss1.PartnershipAuditID) 
     LEFT OUTER JOIN (SELECT 
AVG(`parls`.Score) AS LocalExpectationsScore,
`parls`.PartnershipAuditID FROM `parls` 
 WHERE `parls`._Deleted = 0 
GROUP BY `parls`.PartnershipAuditID 
) AS parls1 
ON (`para`.PartnershipAuditID = parls1.PartnershipAuditID) 
     LEFT OUTER JOIN `org` AS org1 
   ON (`par1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   para.PartnershipAuditID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Partnership Audit");
        $screenPhrase = gettext("Files|Associate physical files and retention methods with a partnership");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Partnership Audits");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'PartnershipAuditID' => gettext("Record ID|An automatically assigned number used to track partnership audits"),
   'Organization' => gettext("Implementing Organization|The organization with primary responsibility for implementing this partnership and maintaining currency with existing laws and internal requirements"),
   'Partnership' => gettext("Partnership|A combined field used to describe this partnership when associating it with other records"),
   'AuditingOrganization' => gettext("Auditing Organization|The name of the organization responsible for conducting the audit"),
   'PersonAccountable' => gettext("Audit Team Leader|The individual assigned primary accountability for conducting the audit of this partnership and ensuring compliance with existing laws and internal requirements"),
   'AuditBeginDate' => gettext("Audit Begin Date|Date and time the audit started"),
   'AuditPurpose' => gettext("Purpose|A detailed description of the purpose for the audit"),
   'SharedExpectationsScore' => gettext("Shared Expectations Score|The shared expectations score achieved by the organization implementing the partnership"),
   'LocalExpectationsScore' => gettext("Local Expectations Score|The local expectations score achieved by the organization implementing the partnership")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**-remove_begin-**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        


        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**-remove_end-**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Partnership Audits"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Partnership Audit") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit a partnership audit") );
      $tempTabs['SharedExpectationScores'] = array( "edit.php?scr=SharedExpectationScores&$tabsQS", gettext("Shared Scores|Enter or modify shared expectation scores") );
      $tempTabs['LocalExpectationScores'] = array( "edit.php?scr=LocalExpectationScores&$tabsQS", gettext("Local Scores|Enter or modify local expectation scores") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate local regulations with a partnership") );
      $tempTabs['Responsibilities'] = array( "edit.php?scr=Responsibilities&$tabsQS", gettext("Responsibilities|Assign organizational level responsibilities to a partnership") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the partnership") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the partnership") );
      $tempTabs['FileRetention'] = array( "", gettext("Files|Associate physical files and retention methods with a partnership") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with a partnership") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['FileRetention'] = array( "", gettext("New Audit") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>