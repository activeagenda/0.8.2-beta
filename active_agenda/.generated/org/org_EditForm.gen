<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:16:{s:14:"OrganizationID";O:9:"viewfield":16:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Record ID|Numerical ID to identify the organization within this application";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:22:"OrganizationCategoryID";O:14:"codecombofield":27:{s:4:"name";s:22:"OrganizationCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'38\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'38\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:18:"OrganizationTypeID";a:2:{s:4:"name";s:18:"OrganizationTypeID";s:15:"listParentField";s:22:"OrganizationCategoryID";}}s:8:"moduleID";s:3:"org";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"38";}s:18:"OrganizationTypeID";O:10:"combofield":26:{s:4:"name";s:18:"OrganizationTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgt";s:10:"foreignKey";s:18:"OrganizationTypeID";s:12:"foreignField";s:16:"OrganizationType";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:206:"SELECT 
`orgt`.OrganizationTypeID AS ID, NULLIF(CONCAT(IFNULL(`orgt`.OrganizationTypeTitle,\'\')),\'\') AS Name, `orgt`.OrganizationCategoryID AS ParentID FROM `orgt`
WHERE orgt._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:212:"SELECT 
`orgt`.OrganizationTypeID AS ID, NULLIF(CONCAT(IFNULL(`orgt`.OrganizationTypeTitle,\'\')),\'\') AS Name, `orgt`.OrganizationCategoryID AS ParentID FROM `orgt`

WHERE `orgt`.OrganizationTypeID = \'/*recordID*/\'";s:11:"parentField";s:22:"OrganizationCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"org";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:4:"Name";O:9:"editfield":14:{s:4:"name";s:4:"Name";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:9:"ShortName";O:9:"editfield":14:{s:4:"name";s:9:"ShortName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(20)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"20";s:9:"maxLength";s:2:"20";s:5:"align";s:4:"left";}s:16:"GuidanceLogoName";O:9:"editfield":14:{s:4:"name";s:16:"GuidanceLogoName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(50)";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:2:"50";s:5:"align";s:4:"left";}s:11:"Description";O:9:"memofield":15:{s:4:"name";s:11:"Description";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:3:"URL";O:9:"editfield":14:{s:4:"name";s:3:"URL";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"org";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:22:"PrimaryContactPersonID";O:16:"personcombofield":29:{s:4:"name";s:22:"PrimaryContactPersonID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"org";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:26:"PrimaryContactPersonID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:16:"IndustrySectorID";O:10:"combofield":26:{s:4:"name";s:16:"IndustrySectorID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"nais";s:10:"foreignKey";s:16:"IndustrySectorID";s:12:"foreignField";s:14:"IndustrySector";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:145:"SELECT 
`nais`.IndustrySectorID AS ID, NULLIF(CONCAT(IFNULL(`nais`.Title,\'\')),\'\') AS Name FROM `nais`
WHERE nais._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:149:"SELECT 
`nais`.IndustrySectorID AS ID, NULLIF(CONCAT(IFNULL(`nais`.Title,\'\')),\'\') AS Name FROM `nais`

WHERE `nais`.IndustrySectorID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:19:"IndustrySubSectorID";a:1:{s:4:"name";s:19:"IndustrySubSectorID";}}s:8:"moduleID";s:3:"org";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:1;}s:19:"IndustrySubSectorID";O:10:"combofield":26:{s:4:"name";s:19:"IndustrySubSectorID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"naiss";s:10:"foreignKey";s:19:"IndustrySubSectorID";s:12:"foreignField";s:17:"IndustrySubSector";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:238:"SELECT 
`naiss`.IndustrySubSectorID AS ID, NULLIF(CONCAT(IFNULL(`naiss`.Title,\'\'),\' | \',IFNULL(`naiss`.IndustrySubSectorID,\'\')),\' | \') AS Name, `naiss`.IndustrySectorID AS ParentID FROM `naiss`
WHERE naiss._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:245:"SELECT 
`naiss`.IndustrySubSectorID AS ID, NULLIF(CONCAT(IFNULL(`naiss`.Title,\'\'),\' | \',IFNULL(`naiss`.IndustrySubSectorID,\'\')),\' | \') AS Name, `naiss`.IndustrySectorID AS ParentID FROM `naiss`

WHERE `naiss`.IndustrySubSectorID = \'/*recordID*/\'";s:11:"parentField";s:16:"IndustrySectorID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:15:"IndustryGroupID";a:1:{s:4:"name";s:15:"IndustryGroupID";}}s:8:"moduleID";s:3:"org";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:1;}s:15:"IndustryGroupID";O:10:"combofield":26:{s:4:"name";s:15:"IndustryGroupID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"naig";s:10:"foreignKey";s:15:"IndustryGroupID";s:12:"foreignField";s:13:"IndustryGroup";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:227:"SELECT 
`naig`.IndustryGroupID AS ID, NULLIF(CONCAT(IFNULL(`naig`.Title,\'\'),\' | \',IFNULL(`naig`.IndustryGroupID,\'\')),\' | \') AS Name, `naig`.IndustrySubSectorID AS ParentID FROM `naig`
WHERE naig._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:230:"SELECT 
`naig`.IndustryGroupID AS ID, NULLIF(CONCAT(IFNULL(`naig`.Title,\'\'),\' | \',IFNULL(`naig`.IndustryGroupID,\'\')),\' | \') AS Name, `naig`.IndustrySubSectorID AS ParentID FROM `naig`

WHERE `naig`.IndustryGroupID = \'/*recordID*/\'";s:11:"parentField";s:19:"IndustrySubSectorID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:14:"IndustryCodeID";a:1:{s:4:"name";s:14:"IndustryCodeID";}}s:8:"moduleID";s:3:"org";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:1;}s:14:"IndustryCodeID";O:10:"combofield":26:{s:4:"name";s:14:"IndustryCodeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"naic";s:10:"foreignKey";s:14:"IndustryCodeID";s:12:"foreignField";s:12:"IndustryCode";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:221:"SELECT 
`naic`.IndustryCodeID AS ID, NULLIF(CONCAT(IFNULL(`naic`.IndustryCodeID,\'\'),\' | \',IFNULL(`naic`.Title,\'\')),\' | \') AS Name, `naic`.IndustryGroupID AS ParentID FROM `naic`
WHERE naic._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:223:"SELECT 
`naic`.IndustryCodeID AS ID, NULLIF(CONCAT(IFNULL(`naic`.IndustryCodeID,\'\'),\' | \',IFNULL(`naic`.Title,\'\')),\' | \') AS Name, `naic`.IndustryGroupID AS ParentID FROM `naic`

WHERE `naic`.IndustryCodeID = \'/*recordID*/\'";s:11:"parentField";s:15:"IndustryGroupID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"org";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:1;}s:3:"SIC";O:9:"editfield":14:{s:4:"name";s:3:"SIC";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(20)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"10";s:9:"maxLength";s:2:"20";s:5:"align";s:4:"left";}s:11:"Participant";O:13:"checkboxfield":14:{s:4:"name";s:11:"Participant";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Organization");

//field value array
$data = array(
        'OrganizationID' => '',
         'OrganizationCategoryID' => '',
         'OrganizationTypeID' => '',
         'Name' => '',
         'ShortName' => '',
         'GuidanceLogoName' => '',
         'Description' => '',
         'URL' => '',
         'PersonAccountableID' => '',
         'PrimaryContactPersonID' => '',
         'IndustrySectorID' => '',
         'IndustrySubSectorID' => '',
         'IndustryGroupID' => '',
         'IndustryCodeID' => '',
         'SIC' => '',
         'Participant' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'OrganizationID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Address";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `org`.OrganizationID,
   `cod1`.Description AS OrganizationCategory,
   `orgt1`.OrganizationCategoryID AS OrganizationCategoryID,
   NULLIF(CONCAT(IFNULL(`orgt1`.OrganizationTypeTitle,'')),'') AS OrganizationType,
   `org`.OrganizationTypeID,
   `org`.Name,
   `org`.ShortName,
   `org`.GuidanceLogoName,
   `org`.Description,
   `org`.URL,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `ppl2`.DisplayName AS PrimaryContactPerson,
   `inv1`.PersonInvolvedID AS PrimaryContactPersonID,
   NULLIF(CONCAT(IFNULL(`nais1`.Title,'')),'') AS IndustrySector,
   `naiss1`.IndustrySectorID AS IndustrySectorID,
   NULLIF(CONCAT(IFNULL(`naiss1`.Title,''),' | ',IFNULL(`naiss1`.IndustrySubSectorID,'')),' | ') AS IndustrySubSector,
   `naig1`.IndustrySubSectorID AS IndustrySubSectorID,
   NULLIF(CONCAT(IFNULL(`naig1`.Title,''),' | ',IFNULL(`naig1`.IndustryGroupID,'')),' | ') AS IndustryGroup,
   `naic1`.IndustryGroupID AS IndustryGroupID,
   NULLIF(CONCAT(IFNULL(`naic1`.IndustryCodeID,''),' | ',IFNULL(`naic1`.Title,'')),' | ') AS IndustryCode,
   `org`.IndustryCodeID,
   `org`.SIC,
   `org`.Participant,
   NULLIF(CONCAT(IFNULL(`org`.Name,'')),'') AS RecordLabel
FROM `org`
   
     LEFT OUTER JOIN `orgt` AS orgt1 
   ON (`org`.OrganizationTypeID = `orgt1`.OrganizationTypeID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`org`.OrganizationID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'org'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '61')
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`org`.OrganizationID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'org'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '64')
     LEFT OUTER JOIN `naic` AS naic1 
   ON (`org`.IndustryCodeID = `naic1`.IndustryCodeID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`orgt1`.OrganizationCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '38')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv1`.PersonInvolvedID = `ppl2`.PersonID )
     LEFT OUTER JOIN `naig` AS naig1 
   ON (`naic1`.IndustryGroupID = `naig1`.IndustryGroupID )
     LEFT OUTER JOIN `naiss` AS naiss1 
   ON (`naig1`.IndustrySubSectorID = `naiss1`.IndustrySubSectorID )
     LEFT OUTER JOIN `nais` AS nais1 
   ON (`naiss1`.IndustrySectorID = `nais1`.IndustrySectorID )
WHERE
   org.OrganizationID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Organization");
        $screenPhrase = gettext("Form|Edit summary information about an organization");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Organizations");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'OrganizationID' => gettext("Record ID|Numerical ID to identify the organization within this application"),
   'OrganizationCategoryID' => gettext("Organization Category|A short term used to identify organizations with similar characteristics"),
   'OrganizationTypeID' => gettext("Organization Type|A detailed description of the organization type"),
   'Name' => gettext("Name|Name used to identify the organization"),
   'ShortName' => gettext("Short Name|A short name used to identify the organization"),
   'GuidanceLogoName' => gettext("Guidance Logo Filename|The name of an image file used in the Guidance feature. This field only needs to be filled in if this organization provides guidance through the Guidance feature."),
   'Description' => gettext("Description|Text description of the organization"),
   'URL' => gettext("URL|Uniform resource locator of the organization which is usually the organization's home page"),
   'PersonAccountableID' => gettext("Person Accountable|The individual with organizational oversight responisibilites. This is the highest ranking person at the local organization"),
   'PrimaryContactPersonID' => gettext("Primary Contact Person|The person acting as the primary contact for the organization"),
   'IndustrySectorID' => gettext("Industry Sector|First level of a hirearchy to identify the organization's industrial classification."),
   'IndustrySubSectorID' => gettext("Industry Subsector|Second level of a hirearchy to identify the organization's industrial classification."),
   'IndustryGroupID' => gettext("Industry Group|Third level of a hirearchy to identify the organization's industrial classification."),
   'IndustryCodeID' => gettext("Industry Code|Numerical code used to identify the organization's industrial classification. If multiple codes apply, choose the most relevant one."),
   'SIC' => gettext("S.I.C.|The Standard Industry Classification assigned to the organization by the US Census Bureau"),
   'Participant' => gettext("Participant|Whether this organization is a participant in this installation of Active Agenda.  If this box is checked, the organization will be available within all drop down lists where the organization field listType='allParticipants'. Users of the application can add organizations to the lists by checking this box but listTypes can only be modified from within the specification file for the application prior to the application being parsed. In other words, listTypes are determined by programmers while the list of participants is controlled by this field, by application users")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['Name'], ShortPhrase($phrases['Name']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Name']->invalid = TRUE;
            }
$vMsg = Validate($data['ShortName'], ShortPhrase($phrases['ShortName']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ShortName']->invalid = TRUE;
            }
$vMsg = Validate($data['SIC'], ShortPhrase($phrases['SIC']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SIC']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Organizations"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Organization") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about an organization") );
      $tempTabs['Address'] = array( "edit.php?scr=Address&$tabsQS", gettext("Address|Edit address information for an organization") );
      $tempTabs['Hierarchy'] = array( "edit.php?scr=Hierarchy&$tabsQS", gettext("Hierarchy|Associate application defaults with an organization") );
      $tempTabs['People'] = array( "edit.php?scr=People&$tabsQS", gettext("People|Associate people with an organization") );
      $tempTabs['Departments'] = array( "edit.php?scr=Departments&$tabsQS", gettext("Departments|Associate departments with an organization") );
      $tempTabs['JobTitles'] = array( "edit.php?scr=JobTitles&$tabsQS", gettext("Job Titles|Associate job titles with an organization") );
      $tempTabs['Locations'] = array( "edit.php?scr=Locations&$tabsQS", gettext("Locations|Associate physical locations with an organization") );
      $tempTabs['HoursWorked'] = array( "edit.php?scr=HoursWorked&$tabsQS", gettext("Hours|Associate hours worked for an organization, by a specific payroll class, during a stated period of time") );
      $tempTabs['Availability'] = array( "edit.php?scr=Availability&$tabsQS", gettext("Availability|Associate work unavailability reasons with an organization") );
      $tempTabs['ProductsServices'] = array( "edit.php?scr=ProductsServices&$tabsQS", gettext("Products|Associate products and/or services with an organization") );
      $tempTabs['SpecialCharacteristics'] = array( "edit.php?scr=SpecialCharacteristics&$tabsQS", gettext("Characteristics|Associate special characteristics with an organization") );
      $tempTabs['Requirements'] = array( "edit.php?scr=Requirements&$tabsQS", gettext("Requirements|Associate organizational requirements with the organization") );
      $tempTabs['Jobs'] = array( "edit.php?scr=Jobs&$tabsQS", gettext("Jobs|Associate jobs with the organization") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the organization") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the organization") );
      $tempTabs['WorkOrders'] = array( "edit.php?scr=WorkOrders&$tabsQS", gettext("Orders|Associate work orders with the organization") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate business agreements and/or contracts with the organization") );
      $tempTabs['BusinessContinuation'] = array( "edit.php?scr=BusinessContinuation&$tabsQS", gettext("Continuity|Associate business continuation requirements with the organization") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Exposures|Associate cost exposures with the organization") );
      $tempTabs['OperatingPermits'] = array( "edit.php?scr=OperatingPermits&$tabsQS", gettext("Permits|Associate operating permits with the organization") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the organization") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the organization") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the organization") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the organization") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with the organization") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the organization") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Organization") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>