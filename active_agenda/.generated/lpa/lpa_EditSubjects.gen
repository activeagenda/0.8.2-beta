<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:12:{s:17:"LossEmpPracticeID";O:9:"viewfield":16:{s:4:"name";s:17:"LossEmpPracticeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:95:"Record ID|An automatically assigned number used to track employment practices resulting in loss";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"IncidentReportID";O:9:"viewfield":16:{s:4:"name";s:16:"IncidentReportID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:142:"Incident Report|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IncidentReport";O:9:"viewfield":16:{s:4:"name";s:14:"IncidentReport";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:144:"Incident Reported|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"EventDate";O:9:"viewfield":16:{s:4:"name";s:9:"EventDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:50:"Event Date|Date the situation or incident occurred";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"IncurredTime";O:9:"viewfield":16:{s:4:"name";s:12:"IncurredTime";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:60:"Incurred Date|Date the employment practice loss was incurred";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:127:"Organization|The organization of the lossee and person accountable for the mitigation of this loss and control of future losses";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Location|Specific location within the facility where the employment practice loss occurred";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"Complainant";O:9:"viewfield":16:{s:4:"name";s:11:"Complainant";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Complainant|The name of the individual filing a complaint in association with the employment practice";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"PracticeType";O:9:"viewfield":16:{s:4:"name";s:12:"PracticeType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Practice Type|The specific type of employment practice violation asserted within this claim of loss";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Likelihood";O:9:"viewfield":16:{s:4:"name";s:10:"Likelihood";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:140:"Risk Likelihood|A description of the risk likelihood based on a combination of field values assigned from within the Risk Likelihoods module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Severity";O:9:"viewfield":16:{s:4:"name";s:8:"Severity";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:135:"Risk Severity|A description of the risk severity based on a combination of field values assigned from within the Risk Severities module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"RiskRecommendation";O:9:"viewfield":16:{s:4:"name";s:18:"RiskRecommendation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:117:"Recommended Action|An automatically assigned recommendation, based on the values assigned for Likelihood and Severity";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Employment Practice Loss");

//field value array
$data = array(
        'LossEmpPracticeID' => '',
         'IncidentReportID' => '',
         'IncidentReport' => '',
         'EventDate' => '',
         'IncurredTime' => '',
         'Organization' => '',
         'Location' => '',
         'Complainant' => '',
         'PracticeType' => '',
         'Likelihood' => '',
         'Severity' => '',
         'RiskRecommendation' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:632:"SELECT 
   `lpas`.SubjectID,
   `org1`.Name AS Organization,
   `lpas`.OrganizationID,
   `ppl1`.DisplayName AS SubjectPerson,
   `inv1`.PersonInvolvedID AS SubjectPersonID,
   `lpas`.ComplaintDesc
FROM `lpas`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`lpas`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`lpas`.SubjectID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'lpas\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'24\')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
WHERE
   lpas.SubjectID=\'/**RowID**/\'";s:9:"getRowSQL";s:564:"SELECT 
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS SubjectPerson,
   `lpas`.ComplaintDesc,
   `lpas`.OrganizationID
FROM `lpas`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`lpas`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`lpas`.SubjectID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'lpas\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'24\')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
WHERE
   lpas.SubjectID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:4:{s:9:"SubjectID";O:14:"invisiblefield":11:{s:4:"name";s:9:"SubjectID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:144:"Subject ID|An automatically assigned number used to associate persons accused of employment practice violations with claims which result in loss";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"lpas";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:122:"Organization|The name of the organization associated with the person accused of an employment practice resulting in a loss";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"lpas";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"lpas";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:15:"SubjectPersonID";O:16:"personcombofield":29:{s:4:"name";s:15:"SubjectPersonID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Subject|The individual accused of an employment practice resulting in a loss";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"lpas";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"lpas";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:19:"SubjectPersonID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"lpas";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:13:"ComplaintDesc";O:9:"memofield":15:{s:4:"name";s:13:"ComplaintDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Complaint|A detailed description of the employment practice complaint or complaints against the subject of the complaint";s:8:"dataType";s:4:"text";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:2:"10";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:9:"SubjectID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"lpas";s:6:"phrase";s:21:"Subjects of Complaint";s:6:"number";i:1;s:6:"Fields";a:3:{s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:122:"Organization|The name of the organization associated with the person accused of an employment practice resulting in a loss";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"lpas";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"SubjectPerson";O:9:"viewfield":16:{s:4:"name";s:13:"SubjectPerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Subject|The individual accused of an employment practice resulting in a loss";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"lpas";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"ComplaintDesc";O:9:"viewfield":16:{s:4:"name";s:13:"ComplaintDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Complaint|A detailed description of the employment practice complaint or complaints against the subject of the complaint";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"lpas";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:113:"SELECT 
    count(*) 
FROM `lpas`
   
WHERE lpas._Deleted = 0
   AND `lpas`.LossEmpPracticeID = \'/**RecordID**/\'
";s:7:"listSQL";s:600:"SELECT 
   `lpas`.SubjectID,
`lpas`.OrganizationID,
`org1`.Name AS Organization,
`ppl1`.DisplayName AS SubjectPerson,
`lpas`.ComplaintDesc
FROM `lpas`

   LEFT OUTER JOIN `org` AS org1 
   ON (`lpas`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `inv` AS inv1 
    ON (`lpas`.SubjectID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'lpas\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'24\')
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
WHERE lpas._Deleted = 0
AND `lpas`.LossEmpPracticeID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:17:"LossEmpPracticeID";s:9:"parentKey";s:17:"LossEmpPracticeID";s:8:"PKFields";a:1:{i:0;s:9:"SubjectID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');


    /**guidanceGrid**/

    $PKField = 'LossEmpPracticeID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "EventLog";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `lpa`.LossEmpPracticeID,
   `clm1`.IncidentReportID AS IncidentReportID,
   NULLIF(CONCAT(IFNULL(`ire1`.IncidentName,'')),'') AS IncidentReport,
   `dat1`.RelatedDate AS EventDate,
   `dat5`.RelatedDate AS IncurredTime,
   `org1`.Name AS Organization,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS Location,
   `ppl2`.DisplayName AS Complainant,
   `cod2`.Description AS PracticeType,
   NULLIF(CONCAT(IFNULL(`rskl1`.LikelihoodValue,''),' - ',IFNULL(`rskl1`.RiskLikelihoodTerm,''),': ',IFNULL(`rskl1`.RiskLikelihood,'')),' - : ') AS Likelihood,
   NULLIF(CONCAT(IFNULL(`rsks2`.SeverityValue,''),' - ',IFNULL(`rsks2`.RiskSeverityTerm,''),': Loss cost of ',IFNULL(ROUND(`rsks2`.SeverityLowCost, 2),''),' to ',IFNULL(ROUND(`rsks2`.SeverityHighCost, 2),'')),' - : Loss cost of  to ') AS Severity,
   (SELECT RiskRecommendation
FROM rskx
WHERE `rskx`.IndexValue <= IFNULL(`rskl1`.LikelihoodValue,0) * IFNULL(IF(`csc1`.SeverityValue > `rsks2`.SeverityValue, `csc1`.SeverityValue, `rsks2`.SeverityValue),0)
ORDER BY `rskx`.IndexValue DESC
LIMIT 1) AS RiskRecommendation,
   NULLIF(CONCAT(IFNULL(`ppl2`.DisplayName,''),' | ',IFNULL(`dat5`.RelatedDate,''),' | ',IFNULL(`org1`.Name,'')),' |  | ') AS RecordLabel,
   `lpa`.OrganizationID
FROM `lpa`
   
     LEFT OUTER JOIN `clm` AS clm1 
    ON (`lpa`.LossEmpPracticeID = `clm1`.RelatedRecordID 
     AND `clm1`.RelatedModuleID = 'lpa'
     AND `clm1`._Deleted = 0)
     LEFT OUTER JOIN `org` AS org1 
   ON (`lpa`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`lpa`.LossEmpPracticeID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'lpa'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '52')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`lpa`.PracticeTypeID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '77')
     LEFT OUTER JOIN `rskxa` AS rskxa1 
    ON (`lpa`.LossEmpPracticeID = `rskxa1`.SourceRecordID 
     AND `rskxa1`.SourceModuleID = 'lpa'
     AND `rskxa1`._Deleted = 0)
     LEFT OUTER JOIN `csc` AS csc1 
    ON (`lpa`.LossEmpPracticeID = `csc1`.RecordID 
     AND `csc1`.ModuleID = 'lpa'
     AND `csc1`._Deleted = 0)
     LEFT OUTER JOIN `ire` AS ire1 
   ON (`clm1`.IncidentReportID = `ire1`.IncidentReportID )
     LEFT OUTER JOIN `dat` AS dat5 
    ON (`clm1`.ClaimID = `dat5`.SourceRecordID 
     AND `dat5`.SourceModuleID = 'clm'
     AND `dat5`._Deleted = 0
     AND `dat5`.DateDescriptorID = '34')
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`clm1`.ClaimID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'clm'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv1`.PersonInvolvedID = `ppl2`.PersonID )
     LEFT OUTER JOIN `rskl` AS rskl1 
   ON (`rskxa1`.LikelihoodID = `rskl1`.LikelihoodID )
     LEFT OUTER JOIN `rsks` AS rsks2 
   ON (`rskxa1`.SeverityID = `rsks2`.SeverityID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`ire1`.IncidentReportID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'ire'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '16')
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   lpa.LossEmpPracticeID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Employment Practice Loss");
        $screenPhrase = gettext("Subjects|Associate subjects of with the the employment practice loss");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Employment Practice Loss");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'LossEmpPracticeID' => gettext("Record ID|An automatically assigned number used to track employment practices resulting in loss"),
   'IncidentReportID' => gettext("Incident Report|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module"),
   'IncidentReport' => gettext("Incident Reported|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module"),
   'EventDate' => gettext("Event Date|Date the situation or incident occurred"),
   'IncurredTime' => gettext("Incurred Date|Date the employment practice loss was incurred"),
   'Organization' => gettext("Organization|The organization of the lossee and person accountable for the mitigation of this loss and control of future losses"),
   'Location' => gettext("Location|Specific location within the facility where the employment practice loss occurred"),
   'Complainant' => gettext("Complainant|The name of the individual filing a complaint in association with the employment practice"),
   'PracticeType' => gettext("Practice Type|The specific type of employment practice violation asserted within this claim of loss"),
   'Likelihood' => gettext("Risk Likelihood|A description of the risk likelihood based on a combination of field values assigned from within the Risk Likelihoods module"),
   'Severity' => gettext("Risk Severity|A description of the risk severity based on a combination of field values assigned from within the Risk Severities module"),
   'RiskRecommendation' => gettext("Recommended Action|An automatically assigned recommendation, based on the values assigned for Likelihood and Severity")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Employment Practice Losses"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Employment Practice Loss") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about the employment practice loss") );
      $tempTabs['Claim'] = array( "edit.php?scr=Claim&$tabsQS", gettext("Claim|Edit summary information about the employment practice loss") );
      $tempTabs['LossLocation'] = array( "edit.php?scr=LossLocation&$tabsQS", gettext("Location|Edit summary information about the location of the employment practice loss") );
      $tempTabs['LossStatus'] = array( "edit.php?scr=LossStatus&$tabsQS", gettext("Status|Edit summary information about the status of the employment practice loss") );
      $tempTabs['LossLegitimacy'] = array( "edit.php?scr=LossLegitimacy&$tabsQS", gettext("Legitimacy|Edit summary information about the legitimacy of the employment practice loss") );
      $tempTabs['RiskMatrix'] = array( "edit.php?scr=RiskMatrix&$tabsQS", gettext("Risk Matrix|Edit risk matrix values associated with the employment practice loss") );
      $tempTabs['Subjects'] = array( "", gettext("Subjects|Associate subjects of with the the employment practice loss") );
      $tempTabs['EventLog'] = array( "edit.php?scr=EventLog&$tabsQS", gettext("Events|Associate ongoing events with the employment practice loss") );
      $tempTabs['Documentation'] = array( "edit.php?scr=Documentation&$tabsQS", gettext("Documentation|Track the status of documentation delivery requirements associated with the employment practice loss") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the employment practice loss") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the employment practice loss") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with the employment practice loss") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the employment practice loss") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Subjects'] = array( "", gettext("New Employment Practice Loss") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>