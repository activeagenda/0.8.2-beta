<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:9:{s:15:"WasteTransferID";O:9:"viewfield":16:{s:4:"name";s:15:"WasteTransferID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Waste Transport|An automatically assigned number used to track shipments of organizational waste";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:5:"Waste";O:9:"viewfield":16:{s:4:"name";s:5:"Waste";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Waste Stream|A combined field used to describe this waste when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"WasteTransporter";O:9:"viewfield":16:{s:4:"name";s:16:"WasteTransporter";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Waste Transporter|A combined field used to describe this waste transporter when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"TransferPerson";O:9:"viewfield":16:{s:4:"name";s:14:"TransferPerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Transfer Person|The name of the person transfering the waste to the transporter on behalf of the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"WasteShipDate";O:9:"viewfield":16:{s:4:"name";s:13:"WasteShipDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Shipment Date|The date the waste was shipped from the organization";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"WasteShipAmt";O:9:"viewfield":16:{s:4:"name";s:12:"WasteShipAmt";s:10:"parentName";N;s:6:"Fields";a:1:{s:17:"WasteShipAmtUnits";O:9:"viewfield":16:{s:4:"name";s:17:"WasteShipAmtUnits";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:77:"Amount Shipped|The amount of waste that was shiped on the waste shipment date";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:5:"Price";O:9:"viewfield":16:{s:4:"name";s:5:"Price";s:10:"parentName";N;s:6:"Fields";a:1:{s:9:"PriceUnit";O:9:"viewfield":16:{s:4:"name";s:9:"PriceUnit";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:128:"Price|The price per unit paid for this waste stream stated in the currency established for the site installation of the software";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Revenue";O:9:"viewfield":16:{s:4:"name";s:7:"Revenue";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:193:"Revenue|An automatically calculated value based on the price per unit of this waste and the number of units shipped, stated in the currency established for the site installation of the software";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"WasteDisposalFacility";O:9:"viewfield":16:{s:4:"name";s:21:"WasteDisposalFacility";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Waste Disposal Facility|A combined field used to describe this waste disposal facility when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'WasteTransferID' => gettext("Waste Transport|An automatically assigned number used to track shipments of organizational waste"),
   'Waste' => gettext("Waste Stream|A combined field used to describe this waste when associating it with other records"),
   'WasteTransporter' => gettext("Waste Transporter|A combined field used to describe this waste transporter when associating it with other records"),
   'TransferPerson' => gettext("Transfer Person|The name of the person transfering the waste to the transporter on behalf of the organization"),
   'WasteShipDate' => gettext("Shipment Date|The date the waste was shipped from the organization"),
   'WasteShipAmt' => gettext("Amount Shipped|The amount of waste that was shiped on the waste shipment date"),
   'Price' => gettext("Price|The price per unit paid for this waste stream stated in the currency established for the site installation of the software"),
   'Revenue' => gettext("Revenue|An automatically calculated value based on the price per unit of this waste and the number of units shipped, stated in the currency established for the site installation of the software"),
   'WasteDisposalFacility' => gettext("Waste Disposal Facility|A combined field used to describe this waste disposal facility when associating it with other records")
   );


    $ownerField = 'WasteOrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `wastf`.WasteTransferID,
   NULLIF(CONCAT(IFNULL(`was1`.WasteName,'')),'') AS Waste,
   `org2`.Name AS WasteTransporter,
   `ppl1`.DisplayName AS TransferPerson,
   `dat1`.RelatedDate AS WasteShipDate,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS WasteShipAmtUnits,
   `wastf`.WasteShipAmt,
   NULLIF(CONCAT(IFNULL(`uts2`.UnitName,'')),'') AS PriceUnit,
   `wastf`.Price,
   `wastf`.Revenue,
   `org3`.Name AS WasteDisposalFacility,
   NULLIF(CONCAT(IFNULL(`org1`.Name,''),' | ',IFNULL(`cod3`.Description,''),' | ',IFNULL(NULLIF(CONCAT(IFNULL(`was1`.WasteName,'')),''),''),' | ',IFNULL(`org2`.Name,''),' | ',IFNULL(`dat1`.RelatedDate,'')),' |  |  |  | ') AS RecordLabel,
   `was1`.OrganizationID AS WasteOrganizationID
FROM `wastf`
   
     LEFT OUTER JOIN `was` AS was1 
   ON (`wastf`.WasteID = `was1`.WasteID )
     LEFT OUTER JOIN `wastp` AS wastp1 
   ON (`wastf`.WasteTransporterID = `wastp1`.TransporterID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`wastf`.WasteTransferID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'wastf'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '92')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`wastf`.WasteTransferID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'wastf'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '46')
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`wastf`.WasteShipAmtUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`wastf`.PriceUnitID = `uts2`.UnitID )
     LEFT OUTER JOIN `wasdf` AS wasdf1 
   ON (`wastf`.WasteDisposalFacilityID = `wasdf1`.WasteDisposalFacilityID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`was1`.WasteTypeID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '11')
     LEFT OUTER JOIN `org` AS org1 
   ON (`was1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`wastp1`.TransporterID = `org2`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `org` AS org3 
   ON (`wasdf1`.DisposalFacilityID = `org3`.OrganizationID )
WHERE
   wastf.WasteTransferID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Waste Transfers"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Waste Transfer") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a waste transfer") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Waste Transfer") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Waste Transfer") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Waste Transfer");
    $screenPhrase = gettext("View|View summary information about a waste transfer");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
