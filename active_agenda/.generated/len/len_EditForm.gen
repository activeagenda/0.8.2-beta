<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:19:{s:17:"LossEnvironmentID";O:9:"viewfield":16:{s:4:"name";s:17:"LossEnvironmentID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Record ID|An automatically assigned number used to track environmental releases resulting in loss";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IncidentReport";O:9:"viewfield":16:{s:4:"name";s:14:"IncidentReport";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:144:"Incident Reported|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"EventDate";O:9:"viewfield":16:{s:4:"name";s:9:"EventDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:50:"Event Date|Date the situation or incident occurred";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"TimeDeterminable";O:13:"checkboxfield":14:{s:4:"name";s:16:"TimeDeterminable";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"IncurredTime";O:9:"datefield":15:{s:4:"name";s:12:"IncurredTime";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:10:"ReportDate";O:9:"datefield":15:{s:4:"name";s:10:"ReportDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:10:"ChemicalID";O:10:"combofield":26:{s:4:"name";s:10:"ChemicalID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"chm";s:10:"foreignKey";s:10:"ChemicalID";s:12:"foreignField";s:8:"Chemical";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:186:"SELECT 
`chm`.ChemicalID AS ID, NULLIF(CONCAT(IFNULL(`chm`.CommonName,\'\'),\' | CAS: \',IFNULL(`chm`.CASNumber,\'\')),\' | CAS: \') AS Name FROM `chm`
WHERE chm._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:184:"SELECT 
`chm`.ChemicalID AS ID, NULLIF(CONCAT(IFNULL(`chm`.CommonName,\'\'),\' | CAS: \',IFNULL(`chm`.CASNumber,\'\')),\' | CAS: \') AS Name FROM `chm`

WHERE `chm`.ChemicalID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"len";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`chm`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:20:"SystemOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:20:"SystemOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:8:"SystemID";a:1:{s:4:"name";s:8:"SystemID";}}s:8:"moduleID";s:3:"len";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:8:"SystemID";O:10:"combofield":26:{s:4:"name";s:8:"SystemID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"sys";s:10:"foreignKey";s:8:"SystemID";s:12:"foreignField";s:6:"System";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:172:"SELECT 
`sys`.SystemID AS ID, NULLIF(CONCAT(IFNULL(`sys`.SystemName,\'\')),\'\') AS Name, `sys`.OrganizationID AS ParentID FROM `sys`
WHERE sys._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:168:"SELECT 
`sys`.SystemID AS ID, NULLIF(CONCAT(IFNULL(`sys`.SystemName,\'\')),\'\') AS Name, `sys`.OrganizationID AS ParentID FROM `sys`

WHERE `sys`.SystemID = \'/*recordID*/\'";s:11:"parentField";s:20:"SystemOrganizationID";s:21:"parentListModuleField";s:14:"OrganizationID";s:11:"childFields";a:1:{s:11:"SubSystemID";a:1:{s:4:"name";s:11:"SubSystemID";}}s:8:"moduleID";s:3:"len";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`sys`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:11:"SubSystemID";O:10:"combofield":26:{s:4:"name";s:11:"SubSystemID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"syss";s:10:"foreignKey";s:11:"SubSystemID";s:12:"foreignField";s:9:"SubSystem";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:254:"SELECT 
`syss`.SubSystemID AS ID, NULLIF(CONCAT(IFNULL(`syss`.SubSystemName,\'\')),\'\') AS Name, `syss`.SystemID AS ParentID FROM `syss`
 
 LEFT OUTER JOIN `sys` AS sys1 
   ON (`syss`.SystemID = `sys1`.SystemID )
WHERE syss._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:253:"SELECT 
`syss`.SubSystemID AS ID, NULLIF(CONCAT(IFNULL(`syss`.SubSystemName,\'\')),\'\') AS Name, `syss`.SystemID AS ParentID FROM `syss`
 
 LEFT OUTER JOIN `sys` AS sys1 
   ON (`syss`.SystemID = `sys1`.SystemID )

WHERE `syss`.SubSystemID = \'/*recordID*/\'";s:11:"parentField";s:8:"SystemID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:11:"ComponentID";a:1:{s:4:"name";s:11:"ComponentID";}}s:8:"moduleID";s:3:"len";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`sys1`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:11:"ComponentID";O:10:"combofield":26:{s:4:"name";s:11:"ComponentID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"sysc";s:10:"foreignKey";s:11:"ComponentID";s:12:"foreignField";s:9:"Component";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:397:"SELECT 
`sysc`.ComponentID AS ID, NULLIF(CONCAT(IFNULL(`sysc`.ComponentName,\'\'),\' Number: \',IFNULL(`sysc`.ComponentNumber,\'\')),\' Number: \') AS Name, `sysc`.SubSystemID AS ParentID FROM `sysc`
 
 LEFT OUTER JOIN `syss` AS syss1 
   ON (`sysc`.SubSystemID = `syss1`.SubSystemID )
 LEFT OUTER JOIN `sys` AS sys1 
   ON (`syss1`.SystemID = `sys1`.SystemID )
WHERE sysc._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:396:"SELECT 
`sysc`.ComponentID AS ID, NULLIF(CONCAT(IFNULL(`sysc`.ComponentName,\'\'),\' Number: \',IFNULL(`sysc`.ComponentNumber,\'\')),\' Number: \') AS Name, `sysc`.SubSystemID AS ParentID FROM `sysc`
 
 LEFT OUTER JOIN `syss` AS syss1 
   ON (`sysc`.SubSystemID = `syss1`.SubSystemID )
 LEFT OUTER JOIN `sys` AS sys1 
   ON (`syss1`.SystemID = `sys1`.SystemID )

WHERE `sysc`.ComponentID = \'/*recordID*/\'";s:11:"parentField";s:11:"SubSystemID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"len";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`sys1`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:13:"ReleaseTypeID";O:14:"codecombofield":27:{s:4:"name";s:13:"ReleaseTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'226\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'226\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"len";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"226";}s:7:"ShiftID";O:14:"coderadiofield":29:{s:4:"name";s:7:"ShiftID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'25\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'25\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"len";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:11:"orientation";s:8:"vertical";s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"ReleaseDuration";O:9:"editfield":14:{s:4:"name";s:15:"ReleaseDuration";s:10:"parentName";N;s:6:"Fields";a:2:{s:4:"Self";N;s:15:"DurationUnitsID";O:10:"combofield":26:{s:4:"name";s:15:"DurationUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:1:{s:14:"UnitCategoryID";O:13:"listcondition":3:{s:4:"name";s:14:"UnitCategoryID";s:4:"mode";s:6:"equals";s:6:"values";a:1:{i:0;s:3:"\'4\'";}}}s:3:"SQL";s:166:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name FROM `uts`
WHERE uts._Deleted = 0
 AND `uts`.UnitCategoryID = \'4\'
 ORDER BY Name, ID;";s:6:"getSQL";s:128:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"len";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:27:"Number notEmpty notNegative";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:19:"ConcentrationAmount";O:9:"editfield":14:{s:4:"name";s:19:"ConcentrationAmount";s:10:"parentName";N;s:6:"Fields";a:1:{s:20:"ConcentrationUnitsID";O:14:"codecombofield":27:{s:4:"name";s:20:"ConcentrationUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'34\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'34\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"len";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"34";}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:18:"Number notNegative";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:13:"ReleaseAmount";O:9:"editfield":14:{s:4:"name";s:13:"ReleaseAmount";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:23:"WeightVolUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:23:"WeightVolUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:1:{s:6:"CodeID";O:13:"listcondition":3:{s:4:"name";s:6:"CodeID";s:4:"mode";s:2:"in";s:6:"values";a:2:{i:0;s:3:"\'5\'";i:1;s:3:"\'6\'";}}}s:3:"SQL";s:161:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 AND `cod`.CodeID IN (\'5\',\'6\')
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:16:"WeightVolUnitsID";a:1:{s:4:"name";s:16:"WeightVolUnitsID";}}s:8:"moduleID";s:3:"len";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:16:"WeightVolUnitsID";O:10:"combofield":26:{s:4:"name";s:16:"WeightVolUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:23:"WeightVolUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"len";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:27:"Number notEmpty notNegative";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:15:"ReleaseLossDesc";O:9:"memofield":15:{s:4:"name";s:15:"ReleaseLossDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"len";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"SupervisorID";O:16:"personcombofield":29:{s:4:"name";s:12:"SupervisorID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"len";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:16:"SupervisorID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Environmental Loss");

//field value array
$data = array(
        'LossEnvironmentID' => '',
         'IncidentReport' => '',
         'EventDate' => '',
         'TimeDeterminable' => '',
         'IncurredTime' => '',
         'ReportDate' => '',
         'ChemicalID' => '',
         'SystemOrganizationID' => '',
         'SystemID' => '',
         'SubSystemID' => '',
         'ComponentID' => '',
         'ReleaseTypeID' => '',
         'ShiftID' => '',
         'DurationUnitsID' => '',
         'ReleaseDuration' => '',
         'ConcentrationUnitsID' => '',
         'ConcentrationAmount' => '',
         'WeightVolUnitCategoryID' => '',
         'WeightVolUnitsID' => '',
         'ReleaseAmount' => '',
         'ReleaseLossDesc' => '',
         'PersonAccountableID' => '',
         'SupervisorID' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'LossEnvironmentID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Claim";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `len`.LossEnvironmentID,
   NULLIF(CONCAT(IFNULL(`ire1`.IncidentName,'')),'') AS IncidentReport,
   `dat1`.RelatedDate AS EventDate,
   `clm1`.TimeDeterminable AS TimeDeterminable,
   `dat5`.RelatedDate AS IncurredTime,
   `dat2`.RelatedDate AS ReportDate,
   NULLIF(CONCAT(IFNULL(`chm1`.CommonName,''),' | CAS: ',IFNULL(`chm1`.CASNumber,'')),' | CAS: ') AS Chemical,
   `len`.ChemicalID,
   `org2`.Name AS SystemOrganization,
   `sys1`.OrganizationID AS SystemOrganizationID,
   NULLIF(CONCAT(IFNULL(`sys1`.SystemName,'')),'') AS System,
   `len`.SystemID,
   NULLIF(CONCAT(IFNULL(`syss1`.SubSystemName,'')),'') AS SubSystem,
   `len`.SubSystemID,
   NULLIF(CONCAT(IFNULL(`sysc1`.ComponentName,''),' Number: ',IFNULL(`sysc1`.ComponentNumber,'')),' Number: ') AS Component,
   `len`.ComponentID,
   `cod1`.Description AS ReleaseType,
   `len`.ReleaseTypeID,
   `cod2`.Description AS Shift,
   `len`.ShiftID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS DurationUnits,
   `len`.DurationUnitsID,
   `len`.ReleaseDuration,
   `cod3`.Description AS ConcentrationUnits,
   `len`.ConcentrationUnitsID,
   `len`.ConcentrationAmount,
   `cod4`.Description AS WeightVolUnitCategory,
   `uts2`.UnitCategoryID AS WeightVolUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts2`.UnitName,'')),'') AS WeightVolUnits,
   `len`.WeightVolUnitsID,
   `len`.ReleaseAmount,
   `len`.ReleaseLossDesc,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `ppl2`.DisplayName AS Supervisor,
   `inv1`.PersonInvolvedID AS SupervisorID,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`chm1`.CommonName,''),' | CAS: ',IFNULL(`chm1`.CASNumber,'')),' | CAS: '),''),' released to ',IFNULL(`cod1`.Description,''),' by ',IFNULL(`org1`.Name,''),' on ',IFNULL(`dat1`.RelatedDate,'')),' released to  by  on ') AS RecordLabel,
   `len`.OrganizationID
FROM `len`
   
     LEFT OUTER JOIN `clm` AS clm1 
    ON (`len`.LossEnvironmentID = `clm1`.RelatedRecordID 
     AND `clm1`.RelatedModuleID = 'len'
     AND `clm1`._Deleted = 0)
     LEFT OUTER JOIN `chm` AS chm1 
   ON (`len`.ChemicalID = `chm1`.ChemicalID )
     LEFT OUTER JOIN `sys` AS sys1 
   ON (`len`.SystemID = `sys1`.SystemID )
     LEFT OUTER JOIN `syss` AS syss1 
   ON (`len`.SubSystemID = `syss1`.SubSystemID )
     LEFT OUTER JOIN `sysc` AS sysc1 
   ON (`len`.ComponentID = `sysc1`.ComponentID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`len`.ReleaseTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '226')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`len`.ShiftID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '25')
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`len`.DurationUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`len`.ConcentrationUnitsID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '34')
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`len`.WeightVolUnitsID = `uts2`.UnitID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`len`.LossEnvironmentID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'len'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '29')
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`len`.LossEnvironmentID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'len'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '55')
     LEFT OUTER JOIN `org` AS org1 
   ON (`len`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ire` AS ire1 
   ON (`clm1`.IncidentReportID = `ire1`.IncidentReportID )
     LEFT OUTER JOIN `dat` AS dat5 
    ON (`clm1`.ClaimID = `dat5`.SourceRecordID 
     AND `dat5`.SourceModuleID = 'clm'
     AND `dat5`._Deleted = 0
     AND `dat5`.DateDescriptorID = '34')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`clm1`.ClaimID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'clm'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '32')
     LEFT OUTER JOIN `org` AS org2 
   ON (`sys1`.OrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`uts2`.UnitCategoryID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '37')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv1`.PersonInvolvedID = `ppl2`.PersonID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`ire1`.IncidentReportID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'ire'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '16')
WHERE
   len.LossEnvironmentID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Environmental Loss");
        $screenPhrase = gettext("Form|Edit summary information about the environmental loss");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Environmental Losses");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'LossEnvironmentID' => gettext("Record ID|An automatically assigned number used to track environmental releases resulting in loss"),
   'IncidentReport' => gettext("Incident Reported|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module"),
   'EventDate' => gettext("Event Date|Date the situation or incident occurred"),
   'TimeDeterminable' => gettext("Time Determinable?|Whether the time the loss occurred is determinable"),
   'IncurredTime' => gettext("Incurred Date|Date the environmental release loss was incurred"),
   'ReportDate' => gettext("Report Date|Date the loss was reported"),
   'ChemicalID' => gettext("Chemical|The common name of the chemical that was released"),
   'SystemOrganizationID' => gettext("System Organization|The name of the organization where the system or process exists"),
   'SystemID' => gettext("System|A combined field used to describe this system when associating it with other records"),
   'SubSystemID' => gettext("Sub System|A combined field used to describe this sub system when associating it with other records"),
   'ComponentID' => gettext("Component|A combined field used to describe this component part when associating it with other records"),
   'ReleaseTypeID' => gettext("Release Type|The type of environmental release associated with this reported incident"),
   'ShiftID' => gettext("Shift|The shift during which the release occurred"),
   'ReleaseDuration' => gettext("Release Duration|The period of time over which the release occurred"),
   'ConcentrationAmount' => gettext("Concentration Amount|The concentration of the chemical or substance that was released and measured during the release"),
   'ReleaseAmount' => gettext("Release Amount|The total amount of the chemical or material which was released"),
   'ReleaseLossDesc' => gettext("Release Description|A detailed description of the release and the associated loss"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for managing this incident and mitigating the associated loss"),
   'SupervisorID' => gettext("Supervisor|The name of the supervisor of the area where the release occurred at the time of the environmental release")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['TimeDeterminable'], ShortPhrase($phrases['TimeDeterminable']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['TimeDeterminable']->invalid = TRUE;
            }
$vMsg = Validate($data['IncurredTime'], ShortPhrase($phrases['IncurredTime']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['IncurredTime']->invalid = TRUE;
            }
$vMsg = Validate($data['ChemicalID'], ShortPhrase($phrases['ChemicalID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ChemicalID']->invalid = TRUE;
            }
$vMsg = Validate($data['ReleaseTypeID'], ShortPhrase($phrases['ReleaseTypeID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ReleaseTypeID']->invalid = TRUE;
            }
$vMsg = Validate($data['ShiftID'], ShortPhrase($phrases['ShiftID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ShiftID']->invalid = TRUE;
            }
$vMsg = Validate($data['ReleaseDuration'], ShortPhrase($phrases['ReleaseDuration']), 'Number notEmpty notNegative');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ReleaseDuration']->invalid = TRUE;
            }
$vMsg = Validate($data['ConcentrationAmount'], ShortPhrase($phrases['ConcentrationAmount']), 'Number notNegative');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ConcentrationAmount']->invalid = TRUE;
            }
$vMsg = Validate($data['ReleaseAmount'], ShortPhrase($phrases['ReleaseAmount']), 'Number notEmpty notNegative');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ReleaseAmount']->invalid = TRUE;
            }
$vMsg = Validate($data['ReleaseLossDesc'], ShortPhrase($phrases['ReleaseLossDesc']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ReleaseLossDesc']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['SupervisorID'], ShortPhrase($phrases['SupervisorID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SupervisorID']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Environmental Losses"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Environmental Loss") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about the environmental loss") );
      $tempTabs['Claim'] = array( "edit.php?scr=Claim&$tabsQS", gettext("Claim|Edit summary information about the claim of environmental loss") );
      $tempTabs['LossLocation'] = array( "edit.php?scr=LossLocation&$tabsQS", gettext("Location|Edit summary information about the location of the claim of environmental loss") );
      $tempTabs['LossStatus'] = array( "edit.php?scr=LossStatus&$tabsQS", gettext("Status|Edit summary information about the status of the claim of environmental loss") );
      $tempTabs['LossLegitimacy'] = array( "edit.php?scr=LossLegitimacy&$tabsQS", gettext("Legitimacy|Edit summary information about the legitimacy of the claim of environmental loss") );
      $tempTabs['RiskMatrix'] = array( "edit.php?scr=RiskMatrix&$tabsQS", gettext("Risk Matrix|Edit risk matrix values associated with an environmental loss") );
      $tempTabs['EventLog'] = array( "edit.php?scr=EventLog&$tabsQS", gettext("Events|Associate ongoing events with an environmental incident") );
      $tempTabs['Documentation'] = array( "edit.php?scr=Documentation&$tabsQS", gettext("Documentation|Track the status of documentation delivery requirements associated with an environmental incident") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the environmental incident") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the environmental incident") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with a physical environmental loss file") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the environmental incident") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Environmental Loss") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"IncurredTime\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_IncurredTime\"
});
Calendar.setup({
   inputField : \"ReportDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_ReportDate\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>