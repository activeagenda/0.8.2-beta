<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:8:{s:25:"IncidentReportSituationID";O:9:"viewfield":16:{s:4:"name";s:25:"IncidentReportSituationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Situation ID|Numerical ID used to associate incident report situations with incident reports";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"SituationTypeID";O:14:"invisiblefield":11:{s:4:"name";s:15:"SituationTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"IncidentReport";O:9:"viewfield":16:{s:4:"name";s:14:"IncidentReport";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Incident Report|A combined field used to describe this incident report when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Organization|The primary organization involved in the incident";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"SituationCategory";O:9:"viewfield":16:{s:4:"name";s:17:"SituationCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Situation Category|A broadly defined title used to group similar categories of situations";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"SituationType";O:9:"viewfield":16:{s:4:"name";s:13:"SituationType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Situation Type|A combined field used to describe this situation type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:24:"SituationTypeDescription";O:9:"viewfield":16:{s:4:"name";s:24:"SituationTypeDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Situation Description|A thorough description of the situation type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"SituationDescription";O:9:"viewfield":16:{s:4:"name";s:20:"SituationDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Situation Description|A specific description of the situation resulting in the incident report";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Incident Report Situation");

//field value array
$data = array(
        'IncidentReportSituationID' => '',
         'SituationTypeID' => '',
         'IncidentReport' => '',
         'Organization' => '',
         'SituationCategory' => '',
         'SituationType' => '',
         'SituationTypeDescription' => '',
         'SituationDescription' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":32:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:795:"SELECT 
   `stdc`.StandardsConsiderationID,
   `org1`.Name AS StandardsOrganization,
   `std1`.StandardsOrganizationID AS StandardsOrganizationID,
   NULLIF(CONCAT(IFNULL(`std1`.StandardsOrganizationAbbreviation,\'\'),\' | \',IFNULL(`std1`.StandardCode,\'\'),\' \',IFNULL(`std1`.StandardSection,\'\')),\' |  \') AS Standard,
   `stdc`.StandardID,
   `std1`.StandardDescription AS StandardDescription,
   `std1`.StandardURL AS StandardURL,
   `stdc`.StandardsConsiderationTitle,
   `stdc`.StandardsConsiderationDescription,
   `stdc`.GuidanceOrganizationID
FROM `stdc`
   
     LEFT OUTER JOIN `std` AS std1 
   ON (`stdc`.StandardID = `std1`.StandardID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`std1`.StandardsOrganizationID = `org1`.OrganizationID )
WHERE
   stdc.StandardsConsiderationID=\'/**RowID**/\'";s:9:"getRowSQL";s:478:"SELECT 
   `stdc`.StandardsConsiderationID,
   NULLIF(CONCAT(IFNULL(`std1`.StandardsOrganizationAbbreviation,\'\'),\' | \',IFNULL(`std1`.StandardCode,\'\'),\' \',IFNULL(`std1`.StandardSection,\'\')),\' |  \') AS Standard,
   `stdc`.StandardsConsiderationTitle,
   `stdc`.StandardsConsiderationDescription,
   `stdc`.GuidanceOrganizationID
FROM `stdc`
   
     LEFT OUTER JOIN `std` AS std1 
   ON (`stdc`.StandardID = `std1`.StandardID )
WHERE
   stdc.StandardsConsiderationID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:7:{s:24:"StandardsConsiderationID";O:14:"invisiblefield":11:{s:4:"name";s:24:"StandardsConsiderationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:140:"Record ID|An automatically assigned number used to track the association of standards considerations with records throughout the application";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:23:"StandardsOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:23:"StandardsOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:129:"Standards Organization|Name of the organization, association, or body responsible for development and maintenance of the standard";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"StandardID";a:1:{s:4:"name";s:10:"StandardID";}}s:8:"moduleID";s:4:"stdc";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:10:"StandardID";O:10:"combofield":26:{s:4:"name";s:10:"StandardID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:119:"Standard|A description of the standard based on a combination of field values assigned from within the Standards module";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"std";s:10:"foreignKey";s:10:"StandardID";s:12:"foreignField";s:8:"Standard";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:283:"SELECT 
`std`.StandardID AS ID, NULLIF(CONCAT(IFNULL(`std`.StandardsOrganizationAbbreviation,\'\'),\' | \',IFNULL(`std`.StandardCode,\'\'),\' \',IFNULL(`std`.StandardSection,\'\')),\' |  \') AS Name, `std`.StandardsOrganizationID AS ParentID FROM `std`
WHERE std._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:281:"SELECT 
`std`.StandardID AS ID, NULLIF(CONCAT(IFNULL(`std`.StandardsOrganizationAbbreviation,\'\'),\' | \',IFNULL(`std`.StandardCode,\'\'),\' \',IFNULL(`std`.StandardSection,\'\')),\' |  \') AS Name, `std`.StandardsOrganizationID AS ParentID FROM `std`

WHERE `std`.StandardID = \'/*recordID*/\'";s:11:"parentField";s:23:"StandardsOrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:2:{s:19:"StandardDescription";a:1:{s:4:"name";s:19:"StandardDescription";}s:11:"StandardURL";a:1:{s:4:"name";s:11:"StandardURL";}}s:8:"moduleID";s:4:"stdc";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:19:"StandardDescription";O:9:"viewfield":16:{s:4:"name";s:19:"StandardDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:50:"Description|A detailed description of the standard";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:10:"StandardID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"StandardURL";O:9:"viewfield":16:{s:4:"name";s:11:"StandardURL";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Uniform Resource Locator|The official Internet address of the standard";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:11:"StandardURL";s:11:"parentField";s:10:"StandardID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:27:"StandardsConsiderationTitle";O:9:"editfield":14:{s:4:"name";s:27:"StandardsConsiderationTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Title|A short title or phrase used to describe the standards consideration";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:33:"StandardsConsiderationDescription";O:9:"memofield":15:{s:4:"name";s:33:"StandardsConsiderationDescription";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:171:"Consideration|A detailed description of the standards consideration and the manner in which the activity associated with the related record may be impacted by the standard";s:8:"dataType";s:4:"text";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:24:"StandardsConsiderationID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"stdc";s:6:"phrase";s:18:"Standards Guidance";s:6:"number";i:1;s:6:"Fields";a:4:{s:24:"StandardsConsiderationID";O:14:"invisiblefield":11:{s:4:"name";s:24:"StandardsConsiderationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:140:"Record ID|An automatically assigned number used to track the association of standards considerations with records throughout the application";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:8:"Standard";O:9:"viewfield":16:{s:4:"name";s:8:"Standard";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:119:"Standard|A description of the standard based on a combination of field values assigned from within the Standards module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:27:"StandardsConsiderationTitle";O:9:"viewfield":16:{s:4:"name";s:27:"StandardsConsiderationTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Title|A short title or phrase used to describe the standards consideration";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:33:"StandardsConsiderationDescription";O:9:"viewfield":16:{s:4:"name";s:33:"StandardsConsiderationDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:171:"Consideration|A detailed description of the standards consideration and the manner in which the activity associated with the related record may be impacted by the standard";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stdc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:348:"SELECT 
    count(*) 
FROM `stdc`
   
   LEFT OUTER JOIN `gui` AS gui1 
   ON (`stdc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
 INNER JOIN `ires` AS `parent` ON `gui1`.RelatedRecordID = `parent`.SituationTypeID
WHERE stdc._Deleted = 0
   AND `gui1`.RelatedModuleID = \'sitt\'
AND `parent`.IncidentReportSituationID = \'/**RecordID**/\'
";s:7:"listSQL";s:717:"SELECT 
   `stdc`.StandardsConsiderationID,
`stdc`.GuidanceOrganizationID,
NULLIF(CONCAT(IFNULL(`std1`.StandardsOrganizationAbbreviation,\'\'),\' | \',IFNULL(`std1`.StandardCode,\'\'),\' \',IFNULL(`std1`.StandardSection,\'\')),\' |  \') AS Standard,
`stdc`.StandardsConsiderationTitle,
`stdc`.StandardsConsiderationDescription
FROM `stdc`

   LEFT OUTER JOIN `gui` AS gui1 
   ON (`stdc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
   LEFT OUTER JOIN `std` AS std1 
   ON (`stdc`.StandardID = `std1`.StandardID )
 INNER JOIN `ires` AS `parent` ON `gui1`.RelatedRecordID = `parent`.SituationTypeID
WHERE stdc._Deleted = 0
AND `gui1`.RelatedModuleID = \'sitt\'
AND `parent`.IncidentReportSituationID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";s:15:"SituationTypeID";s:8:"PKFields";a:1:{i:0;s:24:"StandardsConsiderationID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:10:"conditions";a:1:{s:15:"RelatedModuleID";s:4:"sitt";}}');
   $grids[2] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"stda";s:6:"phrase";s:9:"Standards";s:6:"number";i:2;s:6:"Fields";a:5:{s:15:"StandardAssocID";O:14:"invisiblefield":11:{s:4:"name";s:15:"StandardAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Record ID|An automatically assigned number used to associate standards with related records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:33:"StandardsOrganizationAbbreviation";O:9:"viewfield":16:{s:4:"name";s:33:"StandardsOrganizationAbbreviation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Abbreviation|The official abbreviation of the standards organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Standard";O:9:"viewfield":16:{s:4:"name";s:8:"Standard";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:123:"Regulation|A description of the regulation based on a combination of field values assigned from within the Standards module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"MannerAffected";O:9:"viewfield":16:{s:4:"name";s:14:"MannerAffected";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:108:"Manner Affected|A detailed description of the manner in which the related record is affected by the standard";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ComplianceStatus";O:9:"viewfield":16:{s:4:"name";s:16:"ComplianceStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Compliance Status|Current compliance status";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:147:"SELECT 
    count(*) 
FROM `stda`
   
WHERE stda._Deleted = 0
   AND `stda`.RelatedModuleID = \'ires\'
AND `stda`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:825:"SELECT 
   `stda`.StandardAssocID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`std1`.StandardsOrganizationAbbreviation AS StandardsOrganizationAbbreviation,
NULLIF(CONCAT(IFNULL(`std1`.StandardsOrganizationAbbreviation,\'\'),\' | \',IFNULL(`std1`.StandardCode,\'\'),\' \',IFNULL(`std1`.StandardSection,\'\')),\' |  \') AS Standard,
`stda`.MannerAffected,
`cod1`.Description AS ComplianceStatus
FROM `stda`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`stda`.RelatedRecordID = rdc1.RecordID AND `stda`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `std` AS std1 
   ON (`stda`.StandardID = `std1`.StandardID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`stda`.ComplianceStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'94\')
WHERE stda._Deleted = 0
AND `stda`.RelatedModuleID = \'ires\'
AND `stda`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:15:"StandardAssocID";s:3:"int";s:33:"StandardsOrganizationAbbreviation";N;s:8:"Standard";N;s:14:"MannerAffected";s:4:"text";s:16:"ComplianceStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:5:{s:15:"StandardAssocID";s:5:"right";s:33:"StandardsOrganizationAbbreviation";s:4:"left";s:8:"Standard";s:7:"justify";s:14:"MannerAffected";s:7:"justify";s:16:"ComplianceStatus";s:4:"left";}}');


    /**guidanceGrid**/

    $PKField = 'IncidentReportSituationID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `ires`.IncidentReportSituationID,
   `ires`.SituationTypeID,
   NULLIF(CONCAT(IFNULL(`ire1`.IncidentName,'')),'') AS IncidentReport,
   `org1`.Name AS Organization,
   `cod1`.Description AS SituationCategory,
   NULLIF(CONCAT(IFNULL(`sitt1`.SituationTitle,'')),'') AS SituationType,
   `sitt1`.SituationDescription AS SituationTypeDescription,
   `ires`.SituationDescription,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ire1`.IncidentName,'')),''),''),' | ',IFNULL(`cod1`.Description,''),': ',IFNULL(NULLIF(CONCAT(IFNULL(`sitt1`.SituationTitle,'')),''),'')),' | : ') AS RecordLabel,
   `ire1`.OrganizationID AS OrganizationID
FROM `ires`
   
     LEFT OUTER JOIN `ire` AS ire1 
   ON (`ires`.IncidentReportID = `ire1`.IncidentReportID )
     LEFT OUTER JOIN `sitt` AS sitt1 
   ON (`ires`.SituationTypeID = `sitt1`.SituationTypeID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`ire1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`sitt1`.SituationCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '26')
WHERE
   ires.IncidentReportSituationID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Incident Report Situation");
        $screenPhrase = gettext("Standards|Associate standards considerations with the reported situation");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Incident Report Situations");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'IncidentReportSituationID' => gettext("Situation ID|Numerical ID used to associate incident report situations with incident reports"),
   'SituationTypeID' => gettext("Situation Type|A combined field used to describe this situation type when associating it with other records"),
   'IncidentReport' => gettext("Incident Report|A combined field used to describe this incident report when associating it with other records"),
   'Organization' => gettext("Organization|The primary organization involved in the incident"),
   'SituationCategory' => gettext("Situation Category|A broadly defined title used to group similar categories of situations"),
   'SituationType' => gettext("Situation Type|A combined field used to describe this situation type when associating it with other records"),
   'SituationTypeDescription' => gettext("Situation Description|A thorough description of the situation type"),
   'SituationDescription' => gettext("Situation Description|A specific description of the situation resulting in the incident report")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Incident Report Situations"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Incident Report Situation") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about situations associated with incident reports") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values considerations with the reported situation") );
      $tempTabs['Consequences'] = array( "edit.php?scr=Consequences&$tabsQS", gettext("Consequences|Associate business consequence considerations with the reported situation") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Cost Exposures|Associate cost exposures with the reported situation") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulatory considerations with the reported situation") );
      $tempTabs['Standards'] = array( "", gettext("Standards|Associate standards considerations with the reported situation") );
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Standards'] = array( "", gettext("New Incident Report Situation") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>