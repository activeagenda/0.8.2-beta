<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:10:{s:14:"NotificationID";O:9:"viewfield":16:{s:4:"name";s:14:"NotificationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Record ID|An automatically assigned number used to track notifications";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"RelatedModule";O:9:"viewfield":16:{s:4:"name";s:13:"RelatedModule";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Module|The name of the module associated with the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"RelatedRecord";O:9:"viewfield":16:{s:4:"name";s:13:"RelatedRecord";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Record Description|A description of the record that is being sent as a notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Sender";O:9:"viewfield":16:{s:4:"name";s:6:"Sender";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Sender|The person who sent the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Subject";O:9:"viewfield":16:{s:4:"name";s:7:"Subject";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:52:"Subject|The subject line for the  notification email";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Message";O:9:"viewfield":16:{s:4:"name";s:7:"Message";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Message|An additional message in the notification email";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"XMLAttached";O:9:"viewfield":16:{s:4:"name";s:11:"XMLAttached";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:80:"Attach XML Data?|Whether to attach a machine-readable data file with the message";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Status";O:9:"viewfield":16:{s:4:"name";s:6:"Status";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:45:"Status|The current status of the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"SentDate";O:9:"viewfield":16:{s:4:"name";s:8:"SentDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:58:"Sent Date|The time and date when the notification was sent";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"StatusID";O:14:"invisiblefield":11:{s:4:"name";s:8:"StatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'NotificationID' => gettext("Record ID|An automatically assigned number used to track notifications"),
   'RelatedModule' => gettext("Module|The name of the module associated with the notification"),
   'RelatedRecord' => gettext("Record Description|A description of the record that is being sent as a notification"),
   'Sender' => gettext("Sender|The person who sent the notification"),
   'Subject' => gettext("Subject|The subject line for the  notification email"),
   'Message' => gettext("Message|An additional message in the notification email"),
   'XMLAttached' => gettext("Attach XML Data?|Whether to attach a machine-readable data file with the message"),
   'Status' => gettext("Status|The current status of the notification"),
   'SentDate' => gettext("Sent Date|The time and date when the notification was sent"),
   'StatusID' => gettext("Status|The current status of the notification")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `ntf`.NotificationID,
   `mod1`.Name AS RelatedModule,
   `rdc1`.Value AS RelatedRecord,
   `ppl1`.DisplayName AS Sender,
   `ntf`.Subject,
   `ntf`.Message,
   `ntf`.XMLAttached,
   `cod1`.Description AS Status,
   `ntf`.SentDate,
   `ntf`.StatusID,
   NULLIF(CONCAT(IFNULL(`mod1`.Name,''),' | ',IFNULL(`ntf`.RelatedRecordID,'')),' | ') AS RecordLabel,
   `rdc1`.OrganizationID AS OrganizationID
FROM `ntf`
   
     LEFT OUTER JOIN `mod` AS mod1 
   ON (`ntf`.RelatedModuleID = `mod1`.ModuleID )
     LEFT OUTER JOIN `rdc` AS rdc1 ON (`ntf`.RelatedRecordID = rdc1.RecordID AND `ntf`.RelatedModuleID = rdc1.ModuleID)
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ntf`.SenderID = `ppl1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ntf`.StatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '32')
WHERE
   ntf.NotificationID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    $disableGlobalModules = true;

    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Notifications"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Notification") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a notification requirement") );
      $tempTabs['Recipients'] = array( "edit.php?scr=Recipients&$tabsQS", gettext("Recipients|Modify the selected recipients for this notification") );
      $tempTabs['Send'] = array( "edit.php?scr=Send&$tabsQS", gettext("Send|Confim the sending of this notification") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Notification") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Notification") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Notification") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Notification") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Notification");
    $screenPhrase = gettext("View|View summary information about a notification requirement");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here
   $Grid1 = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"ntfr";s:6:"phrase";s:23:"Notification Recipients";s:6:"number";i:1;s:6:"Fields";a:3:{s:23:"NotificationRecipientID";O:14:"invisiblefield":11:{s:4:"name";s:23:"NotificationRecipientID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Record ID|An automatically assigned number used to track notifications";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ntfr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:9:"Recipient";O:9:"viewfield":16:{s:4:"name";s:9:"Recipient";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Person ID|The person who is the recipient of the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ntfr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Status";O:9:"viewfield":16:{s:4:"name";s:6:"Status";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:45:"Status|The current status of the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ntfr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:110:"SELECT 
    count(*) 
FROM `ntfr`
   
WHERE ntfr._Deleted = 0
   AND `ntfr`.NotificationID = \'/**RecordID**/\'
";s:7:"listSQL";s:377:"SELECT 
   `ntfr`.NotificationRecipientID,
`ppl1`.DisplayName AS Recipient,
`cod1`.Description AS Status
FROM `ntfr`

   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ntfr`.RecipientID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`ntfr`.StatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'32\')
WHERE ntfr._Deleted = 0
AND `ntfr`.NotificationID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:14:"NotificationID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:23:"NotificationRecipientID";s:3:"int";s:9:"Recipient";N;s:6:"Status";N;}s:4:"name";N;s:10:"fieldAlign";a:3:{s:23:"NotificationRecipientID";s:5:"right";s:9:"Recipient";s:4:"left";s:6:"Status";s:4:"left";}}');
   $content .= $Grid1->render('view.php', $qsArgs);


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
