<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:13:{s:14:"NotificationID";O:9:"viewfield":16:{s:4:"name";s:14:"NotificationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Record ID|An automatically assigned number used to track notifications";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"RelatedModule";O:9:"viewfield":16:{s:4:"name";s:13:"RelatedModule";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Module|The name of the module associated with the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"RelatedRecord";O:9:"viewfield":16:{s:4:"name";s:13:"RelatedRecord";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Record Description|A description of the record that is being sent as a notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Sender";O:9:"viewfield":16:{s:4:"name";s:6:"Sender";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Sender|The person who sent the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Subject";O:9:"viewfield":16:{s:4:"name";s:7:"Subject";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:52:"Subject|The subject line for the  notification email";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Message";O:9:"viewfield":16:{s:4:"name";s:7:"Message";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Message|An additional message in the notification email";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"XMLAttached";O:9:"viewfield":16:{s:4:"name";s:11:"XMLAttached";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:80:"Attach XML Data?|Whether to attach a machine-readable data file with the message";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Status";O:9:"viewfield":16:{s:4:"name";s:6:"Status";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:45:"Status|The current status of the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"SentDate";O:9:"viewfield":16:{s:4:"name";s:8:"SentDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:58:"Sent Date|The time and date when the notification was sent";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"StatusID";O:14:"invisiblefield":11:{s:4:"name";s:8:"StatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:15:"RelatedModuleID";O:14:"invisiblefield":11:{s:4:"name";s:15:"RelatedModuleID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:15:"RelatedRecordID";O:14:"invisiblefield":11:{s:4:"name";s:15:"RelatedRecordID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"OrganizationID";O:14:"invisiblefield":11:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Notification");

//field value array
$data = array(
        'NotificationID' => '',
         'RelatedModule' => '',
         'RelatedRecord' => '',
         'Sender' => '',
         'Subject' => '',
         'Message' => '',
         'XMLAttached' => '',
         'Status' => '',
         'SentDate' => '',
         'StatusID' => '',
         'RelatedModuleID' => '',
         'RelatedRecordID' => '',
         'OrganizationID' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:16:"searchselectgrid":50:{s:12:"searchFields";a:1:{s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:10:"searchForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"ntfr";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}}s:16:"availableIDField";s:8:"PersonID";s:18:"availableNameField";s:11:"DisplayName";s:16:"listAvailableSQL";N;s:14:"listConditions";a:0:{}s:15:"listSelectedSQL";s:231:"SELECT `ntfr`.RecipientID AS ID, `ppl1`.DisplayName AS Name  FROM ntfr  
 LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ntfr`.RecipientID = `ppl1`.PersonID )
 WHERE  ntfr.NotificationID = \'/*recordID*/\' AND ntfr._Deleted = 0 ORDER BY Name";s:23:"listExistingSelectedSQL";s:210:"SELECT `ntfr`.RecipientID AS ID, `ppl1`.DisplayName AS Name , ntfr._Deleted FROM ntfr  
 LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ntfr`.RecipientID = `ppl1`.PersonID )
 WHERE  ntfr.NotificationID = \'/*recordID*/\'";s:9:"insertSQL";s:121:"INSERT INTO ntfr (RecipientID, NotificationID, _ModBy, _ModDate) VALUES (\'/*value*/\', \'/*recordID*/\', /*userID*/, NOW());";s:15:"insertRemoteSQL";N;s:9:"removeSQL";s:212:"UPDATE ntfr SET 
                _Deleted = 1,
                _ModBy = /*userID*/, 
                _ModDate = NOW()
            WHERE NotificationRecipientID = /*rowID*/ AND ntfr.NotificationID = \'/*recordID*/\'";s:15:"removeRemoteSQL";N;s:10:"restoreSQL";s:212:"UPDATE ntfr SET 
                _Deleted = 0,
                _ModBy = /*userID*/, 
                _ModDate = NOW()
            WHERE NotificationRecipientID = /*rowID*/ AND ntfr.NotificationID = \'/*recordID*/\'";s:16:"restoreRemoteSQL";N;s:14:"getRemoteIDSQL";s:122:"SELECT NotificationRecipientID AS RowID FROM ntfr WHERE RecipientID = \'/*value*/\' AND ntfr.NotificationID = \'/*recordID*/\'";s:17:"getRemoteRowIDSQL";N;s:6:"logSQL";s:146:"INSERT INTO ntfr_l (RecipientID, NotificationID, _ModBy, _ModDate, _Deleted) VALUES (\'/*value*/\', \'/*recordID*/\', /*userID*/, NOW(), /*deleted*/);";s:12:"logRemoteSQL";N;s:14:"useRemoteField";b:0;s:11:"listKeyType";s:0:"";s:9:"updateSQL";N;s:9:"deleteSQL";N;s:10:"getFormSQL";s:0:"";s:9:"getRowSQL";s:0:"";s:12:"remoteFields";N;s:11:"hasGridForm";b:0;s:10:"FormFields";a:0:{}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";N;s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"ntfr";s:6:"phrase";s:23:"Notification Recipients";s:6:"number";i:1;s:6:"Fields";a:0:{}s:8:"countSQL";N;s:7:"listSQL";N;s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:14:"NotificationID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:16:"primaryListField";s:9:"Recipient";s:12:"listModuleID";s:3:"ppl";}');
   $grids[2] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"ntfr";s:6:"phrase";s:23:"Notification Recipients";s:6:"number";i:2;s:6:"Fields";a:3:{s:23:"NotificationRecipientID";O:14:"invisiblefield":11:{s:4:"name";s:23:"NotificationRecipientID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Record ID|An automatically assigned number used to track notifications";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ntfr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:9:"Recipient";O:9:"viewfield":16:{s:4:"name";s:9:"Recipient";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Person ID|The person who is the recipient of the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ntfr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Status";O:9:"viewfield":16:{s:4:"name";s:6:"Status";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:45:"Status|The current status of the notification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"ntfr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:110:"SELECT 
    count(*) 
FROM `ntfr`
   
WHERE ntfr._Deleted = 0
   AND `ntfr`.NotificationID = \'/**RecordID**/\'
";s:7:"listSQL";s:377:"SELECT 
   `ntfr`.NotificationRecipientID,
`ppl1`.DisplayName AS Recipient,
`cod1`.Description AS Status
FROM `ntfr`

   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ntfr`.RecipientID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`ntfr`.StatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'32\')
WHERE ntfr._Deleted = 0
AND `ntfr`.NotificationID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:14:"NotificationID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:23:"NotificationRecipientID";s:3:"int";s:9:"Recipient";N;s:6:"Status";N;}s:4:"name";N;s:10:"fieldAlign";a:3:{s:23:"NotificationRecipientID";s:5:"right";s:9:"Recipient";s:4:"left";s:6:"Status";s:4:"left";}}');


    /**guidanceGrid**/

    $PKField = 'NotificationID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Send";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `ntf`.NotificationID,
   `mod1`.Name AS RelatedModule,
   `rdc1`.Value AS RelatedRecord,
   `ppl1`.DisplayName AS Sender,
   `ntf`.Subject,
   `ntf`.Message,
   `ntf`.XMLAttached,
   `cod1`.Description AS Status,
   `ntf`.SentDate,
   `ntf`.StatusID,
   `ntf`.RelatedModuleID,
   `ntf`.RelatedRecordID,
   `rdc1`.OrganizationID AS OrganizationID,
   NULLIF(CONCAT(IFNULL(`mod1`.Name,''),' | ',IFNULL(`ntf`.RelatedRecordID,'')),' | ') AS RecordLabel
FROM `ntf`
   
     LEFT OUTER JOIN `mod` AS mod1 
   ON (`ntf`.RelatedModuleID = `mod1`.ModuleID )
     LEFT OUTER JOIN `rdc` AS rdc1 ON (`ntf`.RelatedRecordID = rdc1.RecordID AND `ntf`.RelatedModuleID = rdc1.ModuleID)
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ntf`.SenderID = `ppl1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ntf`.StatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '32')
WHERE
   ntf.NotificationID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Notification");
        $screenPhrase = gettext("Recipients|Modify the selected recipients for this notification");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        include_once APP_INCLUDE_PATH . '/ntfCheckStatus.php';
$disableGlobalModules = true;

    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Notifications");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'NotificationID' => gettext("Record ID|An automatically assigned number used to track notifications"),
   'RelatedModule' => gettext("Module|The name of the module associated with the notification"),
   'RelatedRecord' => gettext("Record Description|A description of the record that is being sent as a notification"),
   'Sender' => gettext("Sender|The person who sent the notification"),
   'Subject' => gettext("Subject|The subject line for the  notification email"),
   'Message' => gettext("Message|An additional message in the notification email"),
   'XMLAttached' => gettext("Attach XML Data?|Whether to attach a machine-readable data file with the message"),
   'Status' => gettext("Status|The current status of the notification"),
   'SentDate' => gettext("Sent Date|The time and date when the notification was sent"),
   'StatusID' => gettext("Status|The current status of the notification"),
   'RelatedModuleID' => gettext("Module|The name of the module associated with the notification"),
   'RelatedRecordID' => gettext("Record|The record that is being sent as a notification"),
   'OrganizationID' => gettext("Organization|The name of the organization associated with the related record")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Notifications"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Notification") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a notification requirement") );
      $tempTabs['Recipients'] = array( "", gettext("Recipients|Modify the selected recipients for this notification") );
      $tempTabs['Send'] = array( "edit.php?scr=Send&$tabsQS", gettext("Send|Confim the sending of this notification") );
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Recipients'] = array( "", gettext("New Notification") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    include_once APP_INCLUDE_PATH . '/ntfReciptentGridTweak.php';
//if (!$ntf_sent):


    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    //else:
//$content .= gettext("This message has been sent. Recipients can't be added or removed anymore.");
//endif;

    
    $recordLabelField = $data['RecordLabel'];
?>