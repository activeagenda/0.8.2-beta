<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:8:{s:15:"DashboardItemID";O:9:"viewfield":16:{s:4:"name";s:15:"DashboardItemID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Record ID|An automatically assigned number used to track dashboard items";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Person";O:9:"viewfield":16:{s:4:"name";s:6:"Person";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:51:"User|The user on whose dashboard this item appears.";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Module";O:9:"viewfield":16:{s:4:"name";s:6:"Module";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Module|The name of the module from which the data for the dashboard item is drawn.";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:5:"Title";O:9:"viewfield":16:{s:4:"name";s:5:"Title";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Title|A descriptive title used to identify the dashboard item";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"DashboardType";O:9:"viewfield":16:{s:4:"name";s:13:"DashboardType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Dashboard Type|Type of dashboard item, such as summary or row-level";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"DisplayRows";O:9:"viewfield":16:{s:4:"name";s:11:"DisplayRows";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"Rows Displayed|The number of rows to be displayed by default in this dashboard item.";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"PageColumn";O:9:"viewfield":16:{s:4:"name";s:10:"PageColumn";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Page Column|The column on the home page where the item should be displayed.";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"SortOrder";O:9:"viewfield":16:{s:4:"name";s:9:"SortOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Sort Order|The relative order in which the item should be displayed.";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'DashboardItemID' => gettext("Record ID|An automatically assigned number used to track dashboard items"),
   'Person' => gettext("User|The user on whose dashboard this item appears."),
   'Module' => gettext("Module|The name of the module from which the data for the dashboard item is drawn."),
   'Title' => gettext("Title|A descriptive title used to identify the dashboard item"),
   'DashboardType' => gettext("Dashboard Type|Type of dashboard item, such as summary or row-level"),
   'DisplayRows' => gettext("Rows Displayed|The number of rows to be displayed by default in this dashboard item."),
   'PageColumn' => gettext("Page Column|The column on the home page where the item should be displayed."),
   'SortOrder' => gettext("Sort Order|The relative order in which the item should be displayed.")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `dsb`.DashboardItemID,
   `ppl1`.DisplayName AS Person,
   `mod1`.Name AS Module,
   `dsb`.Title,
   `dsbt1`.Title AS DashboardType,
   `dsb`.DisplayRows,
   `dsb`.PageColumn,
   `dsb`.SortOrder,
   NULLIF(CONCAT(IFNULL(`ppl1`.DisplayName,''),' | ',IFNULL(`dsb`.ModuleID,''),' | ',IFNULL(`dsbt1`.Title,'')),' |  | ') AS RecordLabel,
   `ppl1`.OrganizationID AS OrganizationID
FROM `dsb`
   
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`dsb`.PersonID = `ppl1`.PersonID )
     LEFT OUTER JOIN `mod` AS mod1 
   ON (`dsb`.ModuleID = `mod1`.ModuleID )
     LEFT OUTER JOIN `dsbt` AS dsbt1 
   ON (`dsb`.DashboardTypeID = `dsbt1`.DashboardTypeID )
WHERE
   dsb.DashboardItemID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Dashboard Items"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dashboard Item") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a dashboard item") );
      $tempTabs['DisplayFields'] = array( "edit.php?scr=DisplayFields&$tabsQS", gettext("Display|Assign the fields to be displayed in the dashboard item") );
      $tempTabs['FilterConditions'] = array( "edit.php?scr=FilterConditions&$tabsQS", gettext("Filter|Assign the filter conditions that data is selected by") );
      $tempTabs['SortOrder'] = array( "edit.php?scr=SortOrder&$tabsQS", gettext("Order|Assign the filter conditions that data is sorted by") );
      $tempTabs['SummaryConditions'] = array( "edit.php?scr=SummaryConditions&$tabsQS", gettext("Summarize|Assign the filter conditions that data is summarized by (does not apply to ") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dashboard Item") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dashboard Item") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dashboard Item") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dashboard Item") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dashboard Item") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dashboard Item") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Dashboard Item");
    $screenPhrase = gettext("View|View summary information about a dashboard item");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here
   $Grid1 = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"dsbd";s:6:"phrase";s:16:"Fields Displayed";s:6:"number";i:1;s:6:"Fields";a:3:{s:16:"DashboardFieldID";O:9:"viewfield":16:{s:4:"name";s:16:"DashboardFieldID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:9:"Record ID";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"dsbd";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:4:"Name";O:9:"viewfield":16:{s:4:"name";s:4:"Name";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:10:"Field Name";s:8:"dataType";s:11:"varchar(30)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"dsbd";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"SortOrder";O:9:"viewfield":16:{s:4:"name";s:9:"SortOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:10:"Sort Order";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"dsbd";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:111:"SELECT 
    count(*) 
FROM `dsbd`
   
WHERE dsbd._Deleted = 0
   AND `dsbd`.DashboardItemID = \'/**RecordID**/\'
";s:7:"listSQL";s:150:"SELECT 
   `dsbd`.DashboardFieldID,
`dsbd`.Name,
`dsbd`.SortOrder
FROM `dsbd`

WHERE dsbd._Deleted = 0
AND `dsbd`.DashboardItemID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"DashboardItemID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:16:"DashboardFieldID";s:3:"int";s:4:"Name";s:11:"varchar(30)";s:9:"SortOrder";s:3:"int";}s:4:"name";N;s:10:"fieldAlign";a:3:{s:16:"DashboardFieldID";s:5:"right";s:4:"Name";s:4:"left";s:9:"SortOrder";s:5:"right";}}');
   $content .= $Grid1->render('view.php', $qsArgs);
   $Grid2 = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"dsbo";s:6:"phrase";s:17:"Sort Order Fields";s:6:"number";i:2;s:6:"Fields";a:3:{s:16:"DashboardFieldID";O:9:"viewfield":16:{s:4:"name";s:16:"DashboardFieldID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:9:"Record ID";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"dsbo";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:4:"Name";O:9:"viewfield":16:{s:4:"name";s:4:"Name";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:10:"Field Name";s:8:"dataType";s:11:"varchar(30)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"dsbo";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"SortOrder";O:9:"viewfield":16:{s:4:"name";s:9:"SortOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:10:"Sort Order";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"dsbo";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:111:"SELECT 
    count(*) 
FROM `dsbo`
   
WHERE dsbo._Deleted = 0
   AND `dsbo`.DashboardItemID = \'/**RecordID**/\'
";s:7:"listSQL";s:150:"SELECT 
   `dsbo`.DashboardFieldID,
`dsbo`.Name,
`dsbo`.SortOrder
FROM `dsbo`

WHERE dsbo._Deleted = 0
AND `dsbo`.DashboardItemID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"DashboardItemID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:16:"DashboardFieldID";s:3:"int";s:4:"Name";s:11:"varchar(30)";s:9:"SortOrder";s:3:"int";}s:4:"name";N;s:10:"fieldAlign";a:3:{s:16:"DashboardFieldID";s:5:"right";s:4:"Name";s:4:"left";s:9:"SortOrder";s:5:"right";}}');
   $content .= $Grid2->render('view.php', $qsArgs);


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
