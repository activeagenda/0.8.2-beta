<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    $phrases[0] = array(
   'TownHallAnswerID' => gettext("Record ID|An automatically assigned number used to track answers to town hall questions asked throughout the organization"),
   'Organization' => gettext("Pertinent Organization|The organization associated with the subject matter of the question"),
   'SubmittalDate' => gettext("Submittal Date|The date and time the question was submitted by the person asking the question"),
   'QuestionType' => gettext("Question Type|A method of grouping questions of similar types so that cultural inferences may be drawn based on a predominance of interest"),
   'QuestionAsked' => gettext("Question|A clear and direct question which is important to the person asking the question"),
   'QuestionDetails' => gettext("Details|Additional details about the question being asked and additional information the person asking would like to share about the question or their motivation for asking it"),
   'PersonAsked' => gettext("Person Asked|The name of the person being asked the question"),
   'QuestionStatus' => gettext("Question Status|Answer status of the question"),
   'PersonAnswering' => gettext("Person Answering|The name of the person answering the question"),
   'AnswertoQuestion' => gettext("Answer|A clear and direct answer which is intended to fully answer the question being asked to the best of the answering person's ability"),
   'ReceivedDate' => gettext("Received Date|The date and time the question was first received by the person answering the question"),
   'AnswerDate' => gettext("Answer Date|The date and time the person answering the question provided the answer")
   );
$phrases[1] = array(
   'SubmittalDate' => gettext("Submittal Date|The date and time the question was submitted by the person asking the question"),
   'ReceivedDate' => gettext("Received Date|The date and time the question was first received by the person answering the question"),
   'EntryDate' => gettext("System Entry Date|The date and time the answer was entered into the system"),
   'EntryDelayCalc' => gettext("Entry Delay|A calculated field based on the amount of time between the date the question was submitted and the date the answer was entered into the system"),
   'AnswerDate' => gettext("Answer Date|The date and time the person answering the question provided the answer"),
   'AnswerDelayCalc' => gettext("Answer Delay|A calculated field based on the amount of time between the date the question was submitted and the date the question was answered")
   );


    $sections = unserialize('a:3:{i:0;a:3:{s:6:"phrase";s:16:"Town Hall Answer";s:3:"sql";s:2286:"SELECT 
   `twna`.TownHallAnswerID,
   `org1`.Name AS Organization,
   `dat1`.RelatedDate AS SubmittalDate,
   `cod1`.Description AS QuestionType,
   `twn1`.QuestionAsked AS QuestionAsked,
   `twn1`.QuestionDetails AS QuestionDetails,
   `ppl2`.DisplayName AS PersonAsked,
   `cod2`.Description AS QuestionStatus,
   `ppl3`.DisplayName AS PersonAnswering,
   `twna`.AnswertoQuestion,
   `dat2`.RelatedDate AS ReceivedDate,
   `dat3`.RelatedDate AS AnswerDate,
   NULLIF(CONCAT(IFNULL(`ppl3`.DisplayName,\'\'),IFNULL(`org1`.Name,\'\')),\'\') AS RecordLabel,
   `twn1`.OrganizationID AS OrganizationID
FROM `twna`
   
     LEFT OUTER JOIN `twn` AS twn1 
   ON (`twna`.TownHallQuestionID = `twn1`.TownHallQuestionID )
     LEFT OUTER JOIN `inv` AS inv3 
    ON (`twna`.TownHallAnswerID = `inv3`.SourceRecordID 
     AND `inv3`.SourceModuleID = \'twna\'
     AND `inv3`._Deleted = 0
     AND `inv3`.InvolvementDescriptorID = \'66\')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`twna`.TownHallAnswerID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = \'twna\'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = \'5\')
     LEFT OUTER JOIN `dat` AS dat3 
    ON (`twna`.TownHallAnswerID = `dat3`.SourceRecordID 
     AND `dat3`.SourceModuleID = \'twna\'
     AND `dat3`._Deleted = 0
     AND `dat3`.DateDescriptorID = \'27\')
     LEFT OUTER JOIN `org` AS org1 
   ON (`twn1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`twn1`.TownHallQuestionID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'twn\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'25\')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`twn1`.QuestionTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'220\')
     LEFT OUTER JOIN `inv` AS inv2 
    ON (`twn1`.TownHallQuestionID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = \'twn\'
     AND `inv2`._Deleted = 0
     AND `inv2`.InvolvementDescriptorID = \'68\')
     LEFT OUTER JOIN `ppl` AS ppl2 
ON (`inv2`.PersonInvolvedID = `ppl2`.PersonID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`twn1`.QuestionStatusID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'221\')
     LEFT OUTER JOIN `ppl` AS ppl3 
   ON (`inv3`.PersonInvolvedID = `ppl3`.PersonID )
WHERE
   twna.TownHallAnswerID=\'/**RecordID**/\'";s:6:"fields";a:12:{s:16:"TownHallAnswerID";O:9:"viewfield":16:{s:4:"name";s:16:"TownHallAnswerID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:121:"Record ID|An automatically assigned number used to track answers to town hall questions asked throughout the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Pertinent Organization|The organization associated with the subject matter of the question";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"SubmittalDate";O:9:"viewfield":16:{s:4:"name";s:13:"SubmittalDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:93:"Submittal Date|The date and time the question was submitted by the person asking the question";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"QuestionType";O:9:"viewfield":16:{s:4:"name";s:12:"QuestionType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:138:"Question Type|A method of grouping questions of similar types so that cultural inferences may be drawn based on a predominance of interest";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"QuestionAsked";O:9:"viewfield":16:{s:4:"name";s:13:"QuestionAsked";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Question|A clear and direct question which is important to the person asking the question";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"QuestionDetails";O:9:"viewfield":16:{s:4:"name";s:15:"QuestionDetails";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:175:"Details|Additional details about the question being asked and additional information the person asking would like to share about the question or their motivation for asking it";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"PersonAsked";O:9:"viewfield":16:{s:4:"name";s:11:"PersonAsked";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:60:"Person Asked|The name of the person being asked the question";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"QuestionStatus";O:9:"viewfield":16:{s:4:"name";s:14:"QuestionStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:45:"Question Status|Answer status of the question";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"PersonAnswering";O:9:"viewfield":16:{s:4:"name";s:15:"PersonAnswering";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Person Answering|The name of the person answering the question";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"AnswertoQuestion";O:9:"viewfield":16:{s:4:"name";s:16:"AnswertoQuestion";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:137:"Answer|A clear and direct answer which is intended to fully answer the question being asked to the best of the answering person\'s ability";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ReceivedDate";O:9:"viewfield":16:{s:4:"name";s:12:"ReceivedDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Received Date|The date and time the question was first received by the person answering the question";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"AnswerDate";O:9:"viewfield":16:{s:4:"name";s:10:"AnswerDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Answer Date|The date and time the person answering the question provided the answer";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}}i:1;a:3:{s:6:"phrase";s:16:"Dates and Delays";s:3:"sql";s:1842:"SELECT 
   `dat1`.RelatedDate AS SubmittalDate,
   `dat2`.RelatedDate AS ReceivedDate,
   `twna_l`.createDate AS EntryDate,
   NULLIF(CONCAT(IFNULL(TIMEDIFF(`twna_l`.createDate, `dat1`.RelatedDate),\'\'),\' Hours\'),\' Hours\') AS EntryDelayCalc,
   `dat3`.RelatedDate AS AnswerDate,
   NULLIF(CONCAT(IFNULL(TIMEDIFF(`dat3`.RelatedDate, `dat1`.RelatedDate),\'\'),\' Hours\'),\' Hours\') AS AnswerDelayCalc,
   `twn1`.OrganizationID AS OrganizationID
FROM `twna`
   
     LEFT OUTER JOIN `twn` AS twn1 
   ON (`twna`.TownHallQuestionID = `twn1`.TownHallQuestionID )
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`twna`.TownHallAnswerID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = \'twna\'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = \'5\')
     LEFT OUTER JOIN (
                SELECT
                    `twna_l`.TownHallAnswerID,
                    `twna_l`._ModDate AS createDate,
                    `twna_l`._ModBy AS createBy
                FROM `twna_l`
                INNER JOIN (
                    SELECT
                        TownHallAnswerID,
                        MIN(_RecordID) AS MinRecordID
                    FROM `twna_l`
                    GROUP BY TownHallAnswerID) as `twna_min`
                ON `twna_l`._RecordID = `twna_min`.MinRecordID
                ) AS twna_l
                ON (`twna`.TownHallAnswerID = twna_l.TownHallAnswerID)
     LEFT OUTER JOIN `dat` AS dat3 
    ON (`twna`.TownHallAnswerID = `dat3`.SourceRecordID 
     AND `dat3`.SourceModuleID = \'twna\'
     AND `dat3`._Deleted = 0
     AND `dat3`.DateDescriptorID = \'27\')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`twn1`.TownHallQuestionID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'twn\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'25\')
WHERE
   twna.TownHallAnswerID=\'/**RecordID**/\'";s:6:"fields";a:6:{s:13:"SubmittalDate";O:9:"viewfield":16:{s:4:"name";s:13:"SubmittalDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:93:"Submittal Date|The date and time the question was submitted by the person asking the question";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ReceivedDate";O:9:"viewfield":16:{s:4:"name";s:12:"ReceivedDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Received Date|The date and time the question was first received by the person answering the question";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"EntryDate";O:9:"viewfield":16:{s:4:"name";s:9:"EntryDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"System Entry Date|The date and time the answer was entered into the system";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:14:"EntryDelayCalc";O:9:"viewfield":16:{s:4:"name";s:14:"EntryDelayCalc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:154:"Entry Delay|A calculated field based on the amount of time between the date the question was submitted and the date the answer was entered into the system";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:10:"AnswerDate";O:9:"viewfield":16:{s:4:"name";s:10:"AnswerDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Answer Date|The date and time the person answering the question provided the answer";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"AnswerDelayCalc";O:9:"viewfield":16:{s:4:"name";s:15:"AnswerDelayCalc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:142:"Answer Delay|A calculated field based on the amount of time between the date the question was submitted and the date the question was answered";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}}i:2;a:2:{s:6:"phrase";s:12:"Associations";s:5:"grids";a:3:{s:13:"viewgrid_prta";O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prta";s:6:"phrase";s:16:"Accountabilities";s:6:"number";N;s:6:"Fields";a:4:{s:16:"ParticipantAccID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantAccID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Person Accountable|The name of the person accountable";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"AccountabilityType";O:9:"viewfield":16:{s:4:"name";s:18:"AccountabilityType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Accountability Type|The participant\'s specific type of accountability";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"AccountabilityStatus";O:9:"viewfield":16:{s:4:"name";s:20:"AccountabilityStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Accountability Status|The present status of this participant\'s ongoing involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:147:"SELECT 
    count(*) 
FROM `prta`
   
WHERE prta._Deleted = 0
   AND `prta`.RelatedModuleID = \'twna\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1173:"SELECT 
   `prta`.ParticipantAccID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonAccountable,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS AccountabilityType,
`cod1`.Description AS AccountabilityStatus
FROM `prta`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prta`.RelatedRecordID = rdc1.RecordID AND `prta`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`prta`.ParticipantAccID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'prta\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'70\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prta`.AccountabilityTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `acc` AS acc2 
    ON (`prta`.ParticipantAccID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = \'prta\'
     AND `acc2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`acc2`.AccountabilityStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prta._Deleted = 0
AND `prta`.RelatedModuleID = \'twna\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantAccID";s:3:"int";s:17:"PersonAccountable";N;s:18:"AccountabilityType";N;s:20:"AccountabilityStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantAccID";s:5:"right";s:17:"PersonAccountable";s:4:"left";s:18:"AccountabilityType";s:7:"justify";s:20:"AccountabilityStatus";s:4:"left";}}s:13:"viewgrid_prti";O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prti";s:6:"phrase";s:11:"Involvement";s:6:"number";N;s:6:"Fields";a:4:{s:16:"ParticipantInvID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantInvID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"PersonInvolved";O:9:"viewfield":16:{s:4:"name";s:14:"PersonInvolved";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Person Involved|The name of the person involved";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"InvolvementType";O:9:"viewfield":16:{s:4:"name";s:15:"InvolvementType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Involvement Type|The participant\'s specific type of involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"InvolvementStatus";O:9:"viewfield":16:{s:4:"name";s:17:"InvolvementStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Involvement Status|The present status of this participant\'s involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:147:"SELECT 
    count(*) 
FROM `prti`
   
WHERE prti._Deleted = 0
   AND `prti`.RelatedModuleID = \'twna\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1152:"SELECT 
   `prti`.ParticipantInvID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonInvolved,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS InvolvementType,
`cod1`.Description AS InvolvementStatus
FROM `prti`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prti`.RelatedRecordID = rdc1.RecordID AND `prti`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `inv` AS inv1 
    ON (`prti`.ParticipantInvID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'prti\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'78\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prti`.InvolvementTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `inv` AS inv2 
    ON (`prti`.ParticipantInvID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = \'prti\'
     AND `inv2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`inv2`.InvolvementStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prti._Deleted = 0
AND `prti`.RelatedModuleID = \'twna\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantInvID";s:3:"int";s:14:"PersonInvolved";N;s:15:"InvolvementType";N;s:17:"InvolvementStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantInvID";s:5:"right";s:14:"PersonInvolved";s:4:"left";s:15:"InvolvementType";s:7:"justify";s:17:"InvolvementStatus";s:4:"left";}}s:12:"viewgrid_bpc";O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"bpc";s:6:"phrase";s:14:"Best Practices";s:6:"number";N;s:6:"Fields";a:4:{s:14:"BestPracticeID";O:14:"invisiblefield":11:{s:4:"name";s:14:"BestPracticeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Record ID|An automatically assigned number used to track best practices";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:20:"BestPracticeCategory";O:9:"viewfield":16:{s:4:"name";s:20:"BestPracticeCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Best Practice Category|A method of categorizing best practices of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"BestPracticeTitle";O:9:"viewfield":16:{s:4:"name";s:17:"BestPracticeTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Best Practice Title|A descriptive title of the best practice identified";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Evaluator|The individual evaluating and awarding the best practice";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:143:"SELECT 
    count(*) 
FROM `bpc`
   
WHERE bpc._Deleted = 0
   AND `bpc`.RelatedModuleID = \'twna\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:677:"SELECT 
   `bpc`.BestPracticeID,
`cod1`.Description AS BestPracticeCategory,
`bpc`.BestPracticeTitle,
`ppl1`.DisplayName AS PersonAccountable
FROM `bpc`

   LEFT OUTER JOIN `cod` AS cod1 
   ON (`bpc`.BestPracticeCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'108\')
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`bpc`.BestPracticeID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'bpc\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'142\')
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE bpc._Deleted = 0
AND `bpc`.RelatedModuleID = \'twna\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:14:"BestPracticeID";s:3:"int";s:20:"BestPracticeCategory";N;s:17:"BestPracticeTitle";s:12:"varchar(128)";s:17:"PersonAccountable";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:14:"BestPracticeID";s:5:"right";s:20:"BestPracticeCategory";s:4:"left";s:17:"BestPracticeTitle";s:4:"left";s:17:"PersonAccountable";s:4:"left";}}}}}');

?>