<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:31:{s:17:"GapAnalysisItemID";O:9:"viewfield":16:{s:4:"name";s:17:"GapAnalysisItemID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Record ID|An automatically assigned number used to associate organizations with resource requirements";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"GapAnalysisID";O:14:"invisiblefield":11:{s:4:"name";s:13:"GapAnalysisID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Organization|The name of the organization where the gap analysis is scheduled to occur";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"OrganizationLiaison";O:9:"viewfield":16:{s:4:"name";s:19:"OrganizationLiaison";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:136:"Organization Liaison|The individual assigned primary accountability for organizing the gap analysis for the organization being evaluated";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"AuditTeamLeader";O:9:"viewfield":16:{s:4:"name";s:15:"AuditTeamLeader";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Gap Team Leader|The individual assigned primary accountability for conducting the gap analysis";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"GapTitle";O:9:"viewfield":16:{s:4:"name";s:8:"GapTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Gap Analysis Title|A short title used to identify the organizational gap analysis";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"GapObjective";O:9:"viewfield":16:{s:4:"name";s:12:"GapObjective";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Gap Objective|A detailed description of the scope, purpose, and/or objective of the gap analysis";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ScheduledStart";O:9:"viewfield":16:{s:4:"name";s:14:"ScheduledStart";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Scheduled Start|The date and time the organizational gap analysis is scheduled to began";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ScheduledEnd";O:9:"viewfield":16:{s:4:"name";s:12:"ScheduledEnd";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Scheduled End|The date and time the organizational gap analysis is scheduled to end";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ScheduledDuration";O:9:"viewfield":16:{s:4:"name";s:17:"ScheduledDuration";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Scheduled Duration|The scheduled duration of the organizational gap analysis";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"GapItemContact";O:9:"viewfield":16:{s:4:"name";s:14:"GapItemContact";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:114:"Gap Item Contact|The individual assigned primary accountability for explaining the organization\'s business process";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"GapItemReviewer";O:9:"viewfield":16:{s:4:"name";s:15:"GapItemReviewer";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Gap Item Reviewer|The individual assigned primary accountability for conducting the gap analysis for the gap item";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"AnalysisType";O:9:"viewfield":16:{s:4:"name";s:12:"AnalysisType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:57:"Analysis Type|The specific type of gap analysis performed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"AnalysisItem";O:9:"viewfield":16:{s:4:"name";s:12:"AnalysisItem";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Analysis Item|A brief title used to identify the item being analyzed for gaps";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:23:"OrganizationDescription";O:9:"viewfield":16:{s:4:"name";s:23:"OrganizationDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Organization Description|A detailed description of the businees process employed by the organization";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"OrganizationResources";O:9:"viewfield":16:{s:4:"name";s:21:"OrganizationResources";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Organization Resources|A list of human resources assisting with the gap analysis for the business process";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"OrganizationLocations";O:9:"viewfield":16:{s:4:"name";s:21:"OrganizationLocations";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Organization Locations|A list of locations where business processes were evaluated";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"OrganizationRisks";O:9:"viewfield":16:{s:4:"name";s:17:"OrganizationRisks";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:108:"Organization Risks|A description of key organizational risks identified in association with the gap analysis";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"AnalysisStartTime";O:9:"viewfield":16:{s:4:"name";s:17:"AnalysisStartTime";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:38:"Start Time|Time the gap analysis began";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"AnalysisEndTime";O:9:"viewfield":16:{s:4:"name";s:15:"AnalysisEndTime";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:37:"End Time|Time this gap analysis ended";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"HoursEstimate";O:9:"viewfield":16:{s:4:"name";s:13:"HoursEstimate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Estimate (hours)|The number of hours estimated to analyze gaps in the business process";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"HoursActual";O:9:"viewfield":16:{s:4:"name";s:11:"HoursActual";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Actual Hours|The actual number of hours required to to conduct the analysis for the gap item";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:18:"MethodsandBenefits";O:9:"viewfield":16:{s:4:"name";s:18:"MethodsandBenefits";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:148:"Methods and Benefits|A brief description of the methods used by Active Agenda to address the operational risk requirement and the resulting benefits";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"TotalEstOpp";O:9:"viewfield":16:{s:4:"name";s:11:"TotalEstOpp";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Estimated Opportunity|The total estimated financial opportunity associated with the gap analysis item";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"TotalEstExp";O:9:"viewfield":16:{s:4:"name";s:11:"TotalEstExp";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Estimated Exposure|The total estimated cost exposure associated with the gap analysis item";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:10:"Likelihood";O:9:"viewfield":16:{s:4:"name";s:10:"Likelihood";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:140:"Risk Likelihood|A description of the risk likelihood based on a combination of field values assigned from within the Risk Likelihoods module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"LikelihoodStatus";O:9:"viewfield":16:{s:4:"name";s:16:"LikelihoodStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Likelihood Status|The present status of efforts to resolve the likelihood that this risk will occur, continue, or repeat";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"LikelihoodFactors";O:9:"viewfield":16:{s:4:"name";s:17:"LikelihoodFactors";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:128:"Likelihood Factors|A detailed description of the factors affecting the likelihood that this risk will occur, continue, or repeat";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Severity";O:9:"viewfield":16:{s:4:"name";s:8:"Severity";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:135:"Risk Severity|A description of the risk severity based on a combination of field values assigned from within the Risk Severities module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"IndexValue";O:9:"viewfield":16:{s:4:"name";s:10:"IndexValue";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:251:"Index Value|A calculated field based on the risk likelihood and risk severity. The resulting risk index value is compared against the assigned risk index recommendations entered into the Risk Index module and the respective recommendation is displayed";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:18:"RiskRecommendation";O:9:"viewfield":16:{s:4:"name";s:18:"RiskRecommendation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:117:"Recommended Action|An automatically assigned recommendation, based on the values assigned for Likelihood and Severity";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Gap Analysis Result");

//field value array
$data = array(
        'GapAnalysisItemID' => '',
         'GapAnalysisID' => '',
         'Organization' => '',
         'OrganizationLiaison' => '',
         'AuditTeamLeader' => '',
         'GapTitle' => '',
         'GapObjective' => '',
         'ScheduledStart' => '',
         'ScheduledEnd' => '',
         'ScheduledDuration' => '',
         'GapItemContact' => '',
         'GapItemReviewer' => '',
         'AnalysisType' => '',
         'AnalysisItem' => '',
         'OrganizationDescription' => '',
         'OrganizationResources' => '',
         'OrganizationLocations' => '',
         'OrganizationRisks' => '',
         'AnalysisStartTime' => '',
         'AnalysisEndTime' => '',
         'HoursEstimate' => '',
         'HoursActual' => '',
         'MethodsandBenefits' => '',
         'TotalEstOpp' => '',
         'TotalEstExp' => '',
         'Likelihood' => '',
         'LikelihoodStatus' => '',
         'LikelihoodFactors' => '',
         'Severity' => '',
         'IndexValue' => '',
         'RiskRecommendation' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[2] = unserialize('O:8:"editgrid":32:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:1580:"SELECT 
   `rega`.RegulationAssocID,
   `cod1`.Description AS AgencyLevel,
   `reg1`.AgencyLevelID AS AgencyLevelID,
   `org1`.Name AS Agency,
   `reg1`.AgencyID AS AgencyID,
   NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation,
   `rega`.RegulationID,
   `reg1`.RegScope AS RegScope,
   `reg1`.RegDescription AS RegDescription,
   `reg1`.RegURL AS RegURL,
   `rega`.MannerAffected,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `cod2`.Description AS ComplianceStatus,
   `rega`.ComplianceStatusID,
   `rdc1`.OrganizationID AS OwnerOrganizationID
FROM `rega`
   
     LEFT OUTER JOIN `reg` AS reg1 
   ON (`rega`.RegulationID = `reg1`.RegulationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`rega`.RegulationAssocID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'rega\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'77\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`rega`.ComplianceStatusID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'94\')
     LEFT OUTER JOIN `rdc` AS rdc1 ON (`rega`.RelatedRecordID = rdc1.RecordID AND `rega`.RelatedModuleID = rdc1.ModuleID)
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`reg1`.AgencyLevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'7\')
     LEFT OUTER JOIN `org` AS org1 
   ON (`reg1`.AgencyID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   rega.RegulationAssocID=\'/**RowID**/\'";s:9:"getRowSQL";s:603:"SELECT 
   `rega`.RegulationAssocID,
   `org1`.Name AS Agency,
   NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation,
   `rdc1`.OrganizationID AS OwnerOrganizationID
FROM `rega`
   
     LEFT OUTER JOIN `reg` AS reg1 
   ON (`rega`.RegulationID = `reg1`.RegulationID )
     LEFT OUTER JOIN `rdc` AS rdc1 ON (`rega`.RelatedRecordID = rdc1.RecordID AND `rega`.RelatedModuleID = rdc1.ModuleID)
     LEFT OUTER JOIN `org` AS org1 
   ON (`reg1`.AgencyID = `org1`.OrganizationID )
WHERE
   rega.RegulationAssocID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:10:{s:17:"RegulationAssocID";O:14:"invisiblefield":11:{s:4:"name";s:17:"RegulationAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Record ID|An automatically assigned number used to associate governmental regulations with related records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:13:"AgencyLevelID";O:14:"codecombofield":27:{s:4:"name";s:13:"AgencyLevelID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Agency Level|The heirarchial level of the agency from an international perspective";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:16:"CodeTypeID = \'7\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:140:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'7\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:8:"AgencyID";a:1:{s:4:"name";s:8:"AgencyID";}}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:1:"7";}s:8:"AgencyID";O:13:"orgcombofield":26:{s:4:"name";s:8:"AgencyID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Agency|Name of the government agency or internal entity";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name, `org`.AgencyLevelID AS ParentID FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:143:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name, `org`.AgencyLevelID AS ParentID FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";s:13:"AgencyLevelID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:12:"RegulationID";a:1:{s:4:"name";s:12:"RegulationID";}}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:12:"RegulationID";O:10:"combofield":26:{s:4:"name";s:12:"RegulationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Regulation|A description of the regulation based on a combination of field values assigned from within the Regulations module";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"reg";s:10:"foreignKey";s:12:"RegulationID";s:12:"foreignField";s:10:"Regulation";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:239:"SELECT 
`reg`.RegulationID AS ID, NULLIF(CONCAT(IFNULL(`reg`.RegTitle,\'\'),\' | \',IFNULL(`reg`.RegCode,\'\'),\' | \',IFNULL(`reg`.RegSection,\'\')),\' |  | \') AS Name, `reg`.AgencyID AS ParentID FROM `reg`
WHERE reg._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:239:"SELECT 
`reg`.RegulationID AS ID, NULLIF(CONCAT(IFNULL(`reg`.RegTitle,\'\'),\' | \',IFNULL(`reg`.RegCode,\'\'),\' | \',IFNULL(`reg`.RegSection,\'\')),\' |  | \') AS Name, `reg`.AgencyID AS ParentID FROM `reg`

WHERE `reg`.RegulationID = \'/*recordID*/\'";s:11:"parentField";s:8:"AgencyID";s:21:"parentListModuleField";N;s:11:"childFields";a:3:{s:8:"RegScope";a:1:{s:4:"name";s:8:"RegScope";}s:14:"RegDescription";a:1:{s:4:"name";s:14:"RegDescription";}s:6:"RegURL";a:1:{s:4:"name";s:6:"RegURL";}}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:8:"RegScope";O:9:"viewfield":16:{s:4:"name";s:8:"RegScope";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:138:"Scope|The scope of the regulation. The scope should include a broad statement regarding the types of facilities affected by the regulation";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:12:"RegulationID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:14:"RegDescription";O:9:"viewfield":16:{s:4:"name";s:14:"RegDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Description|A simple but detailed description of the regulation";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:12:"RegulationID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:6:"RegURL";O:9:"viewfield":16:{s:4:"name";s:6:"RegURL";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Uniform Resource Locator|The internet address of the respective regulation\'";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:6:"RegURL";s:11:"parentField";s:12:"RegulationID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:14:"MannerAffected";O:9:"memofield":15:{s:4:"name";s:14:"MannerAffected";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Manner Affected|A detailed description of the manner in which the related record is affected by the regulation";s:8:"dataType";s:4:"text";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Person Accountable|The individual assigned primary accountability for the specific regulatory requirement";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:18:"ComplianceStatusID";O:14:"codecombofield":27:{s:4:"name";s:18:"ComplianceStatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:54:"Compliance Status|Current regulatory compliance status";s:8:"dataType";s:3:"int";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'94\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'94\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"94";}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:17:"RegulationAssocID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"rega";s:6:"phrase";s:11:"Regulations";s:6:"number";i:2;s:6:"Fields";a:3:{s:17:"RegulationAssocID";O:14:"invisiblefield":11:{s:4:"name";s:17:"RegulationAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Record ID|An automatically assigned number used to associate governmental regulations with related records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:6:"Agency";O:9:"viewfield":16:{s:4:"name";s:6:"Agency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Agency|Name of the government agency or internal entity";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Regulation";O:9:"viewfield":16:{s:4:"name";s:10:"Regulation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Regulation|A description of the regulation based on a combination of field values assigned from within the Regulations module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:148:"SELECT 
    count(*) 
FROM `rega`
   
WHERE rega._Deleted = 0
   AND `rega`.RelatedModuleID = \'gapoi\'
AND `rega`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:648:"SELECT 
   `rega`.RegulationAssocID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`org1`.Name AS Agency,
NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation
FROM `rega`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`rega`.RelatedRecordID = rdc1.RecordID AND `rega`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `reg` AS reg1 
   ON (`rega`.RegulationID = `reg1`.RegulationID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`reg1`.AgencyID = `org1`.OrganizationID )
WHERE rega._Deleted = 0
AND `rega`.RelatedModuleID = \'gapoi\'
AND `rega`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";s:17:"GapAnalysisItemID";s:8:"PKFields";a:1:{i:0;s:17:"RegulationAssocID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:10:"conditions";a:1:{s:15:"RelatedModuleID";s:5:"gapoi";}}');


    $guidanceGrid = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:1:{s:20:"GuidanceOrganization";N;}s:6:"isInfo";b:0;s:10:"isGuidance";b:1;s:10:"isVertical";b:1;s:15:"verticalFormats";a:3:{s:16:"OrganizationLogo";s:9:"LogoField";s:28:"RegulatoryConsiderationTitle";s:10:"TitleField";s:34:"RegulatoryConsiderationDescription";s:12:"FeatureField";}s:8:"moduleID";s:4:"regc";s:6:"phrase";s:19:"Regulatory Guidance";s:6:"number";N;s:6:"Fields";a:7:{s:25:"RegulatoryConsiderationID";O:14:"invisiblefield":11:{s:4:"name";s:25:"RegulatoryConsiderationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:141:"Record ID|An automatically assigned number used to track the association of regulatory considerations with records throughout the application";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:16:"OrganizationLogo";O:9:"viewfield":16:{s:4:"name";s:16:"OrganizationLogo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Organization Logo|Displays the logo of the guidance organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:28:"RegulatoryConsiderationTitle";O:9:"viewfield":16:{s:4:"name";s:28:"RegulatoryConsiderationTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Title|A short title or phrase used to describe the regulatory consideration";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:34:"RegulatoryConsiderationDescription";O:9:"viewfield":16:{s:4:"name";s:34:"RegulatoryConsiderationDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:174:"Consideration|A detailed description of the regulatory consideration and the manner in which the activity associated with the related record may be impacted by the regulation";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Regulation";O:9:"viewfield":16:{s:4:"name";s:10:"Regulation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Regulation|A description of the regulation based on a combination of field values assigned from within the Regulations module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"GuidanceOrganization";O:9:"viewfield":16:{s:4:"name";s:20:"GuidanceOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Guidance Provided By|A combined field used to describe the guidance organization when associating it with guidance types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"GuidancePerson";O:9:"viewfield":16:{s:4:"name";s:14:"GuidancePerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Guidance Person|The individual providing guidance for consideration";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:338:"SELECT 
    count(*) 
FROM `regc`
   
   LEFT OUTER JOIN `gui` AS gui1 
   ON (`regc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
 INNER JOIN `gapoi` AS `parent` ON `gui1`.RelatedRecordID = `parent`.GapAnalysisID
WHERE regc._Deleted = 0
   AND `gui1`.RelatedModuleID = \'gap\'
AND `parent`.GapAnalysisItemID = \'/**RecordID**/\'
";s:7:"listSQL";s:1452:"SELECT 
   `regc`.RegulatoryConsiderationID,
`regc`.GuidanceOrganizationID,
NULLIF(CONCAT(\'<img src=\\"org/\',IFNULL(IFNULL(`org1`.GuidanceLogoName, \'transparent.gif\'),\'\'),\'\\" alt=\\"logo\\" />\'),\'<img src=\\\\\\"org/\\\\\\" alt=\\\\\\"logo\\\\\\" />\') AS OrganizationLogo,
`regc`.RegulatoryConsiderationTitle,
`regc`.RegulatoryConsiderationDescription,
NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation,
NULLIF(CONCAT(IFNULL(`org2`.Name,\'\')),\'\') AS GuidanceOrganization,
`ppl1`.DisplayName AS GuidancePerson
FROM `regc`

   LEFT OUTER JOIN `gui` AS gui1 
   ON (`regc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
   LEFT OUTER JOIN `reg` AS reg1 
   ON (`regc`.RegulationID = `reg1`.RegulationID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`gui1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `org` AS org2 
   ON (`gui1`.OrganizationID = `org2`.OrganizationID )
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`gui1`.GuidanceOrganizationID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'gui\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'184\')
   LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
 INNER JOIN `gapoi` AS `parent` ON `gui1`.RelatedRecordID = `parent`.GapAnalysisID
WHERE regc._Deleted = 0
AND `gui1`.RelatedModuleID = \'gap\'
AND `parent`.GapAnalysisItemID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:2:{s:13:"suppressTitle";b:1;s:19:"suppressRecordIcons";b:1;}s:10:"fieldTypes";a:7:{s:25:"RegulatoryConsiderationID";s:3:"int";s:16:"OrganizationLogo";N;s:28:"RegulatoryConsiderationTitle";s:12:"varchar(128)";s:34:"RegulatoryConsiderationDescription";s:4:"text";s:10:"Regulation";N;s:20:"GuidanceOrganization";N;s:14:"GuidancePerson";N;}s:4:"name";N;s:10:"fieldAlign";a:7:{s:25:"RegulatoryConsiderationID";s:5:"right";s:16:"OrganizationLogo";s:7:"justify";s:28:"RegulatoryConsiderationTitle";s:4:"left";s:34:"RegulatoryConsiderationDescription";s:7:"justify";s:10:"Regulation";s:7:"justify";s:20:"GuidanceOrganization";s:7:"justify";s:14:"GuidancePerson";s:4:"left";}}');


    $PKField = 'GapAnalysisItemID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[2]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Standards";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `gapoi`.GapAnalysisItemID,
   `gapoi`.GapAnalysisID,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS OrganizationLiaison,
   `ppl2`.DisplayName AS AuditTeamLeader,
   `gapo1`.GapTitle AS GapTitle,
   `gapo1`.GapObjective AS GapObjective,
   `gapo1`.ScheduledStart AS ScheduledStart,
   `gapo1`.ScheduledEnd AS ScheduledEnd,
   TIMEDIFF(`gapo1`.ScheduledEnd, `gapo1`.ScheduledStart) AS ScheduledDuration,
   `ppl3`.DisplayName AS GapItemContact,
   `ppl4`.DisplayName AS GapItemReviewer,
   `cod1`.Description AS AnalysisType,
   `gap1`.AnalysisItem AS AnalysisItem,
   `gapoi`.OrganizationDescription,
   `gapoi`.OrganizationResources,
   `gapoi`.OrganizationLocations,
   `gapoi`.OrganizationRisks,
   `gapoi`.AnalysisStartTime,
   `gapoi`.AnalysisEndTime,
   `gap1`.HoursEstimate AS HoursEstimate,
   TIMEDIFF(`gapoi`.AnalysisEndTime, `gapoi`.AnalysisStartTime) AS HoursActual,
   `gap1`.MethodsandBenefits AS MethodsandBenefits,
   `opt1`.TotalEstOpp AS TotalEstOpp,
   `cosex1`.TotalEstExp AS TotalEstExp,
   NULLIF(CONCAT(IFNULL(`rskl1`.LikelihoodValue,''),' - ',IFNULL(`rskl1`.RiskLikelihoodTerm,''),': ',IFNULL(`rskl1`.RiskLikelihood,'')),' - : ') AS Likelihood,
   `cod2`.Description AS LikelihoodStatus,
   `rskxa1`.LikelihoodFactors AS LikelihoodFactors,
   NULLIF(CONCAT(IFNULL(`rsks1`.SeverityValue,''),' - ',IFNULL(`rsks1`.RiskSeverityTerm,''),': Loss cost of ',IFNULL(ROUND(`rsks1`.SeverityLowCost, 2),''),' to ',IFNULL(ROUND(`rsks1`.SeverityHighCost, 2),'')),' - : Loss cost of  to ') AS Severity,
   IFNULL(`rskl1`.LikelihoodValue,0) * IFNULL(IF(`csc1`.SeverityValue > `rsks1`.SeverityValue, `csc1`.SeverityValue, `rsks1`.SeverityValue),0) AS IndexValue,
   (SELECT RiskRecommendation
FROM rskx
WHERE `rskx`.IndexValue <= IFNULL(`rskl1`.LikelihoodValue,0) * IFNULL(IF(`csc1`.SeverityValue > `rsks1`.SeverityValue, `csc1`.SeverityValue, `rsks1`.SeverityValue),0)
ORDER BY `rskx`.IndexValue DESC
LIMIT 1) AS RiskRecommendation,
   NULLIF(CONCAT(IFNULL(`gapo1`.GapTitle,''),' | ',IFNULL(NULLIF(CONCAT(IFNULL(`mod1`.Name,''),' | ',IFNULL(`gap1`.AnalysisItem,'')),' | '),'')),' | ') AS RecordLabel,
   `gapo1`.OrganizationID AS OrganizationID
FROM `gapoi`
   
     LEFT OUTER JOIN `gapo` AS gapo1 
   ON (`gapoi`.OrgGapAnalysisID = `gapo1`.OrgGapAnalysisID )
     LEFT OUTER JOIN `acc` AS acc2 
    ON (`gapoi`.GapAnalysisItemID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = 'gapoi'
     AND `acc2`._Deleted = 0
     AND `acc2`.AccountabilityDescriptorID = '181')
     LEFT OUTER JOIN `acc` AS acc3 
    ON (`gapoi`.GapAnalysisItemID = `acc3`.SourceRecordID 
     AND `acc3`.SourceModuleID = 'gapoi'
     AND `acc3`._Deleted = 0
     AND `acc3`.AccountabilityDescriptorID = '182')
     LEFT OUTER JOIN `gap` AS gap1 
   ON (`gapoi`.GapAnalysisID = `gap1`.GapAnalysisID )
     LEFT OUTER JOIN (SELECT 
SUM(ROUND(`opt`.Estimate, 2)) AS TotalEstOpp,
`opt`.RelatedRecordID FROM `opt` 
 WHERE `opt`._Deleted = 0 
 AND RelatedModuleID = 'gapoi' 
 AND 'gapoi' = `opt`.RelatedModuleID
GROUP BY `opt`.RelatedRecordID 
) AS opt1 
ON (`gapoi`.GapAnalysisItemID = opt1.RelatedRecordID) 
     LEFT OUTER JOIN (SELECT 
SUM(ROUND(`cosex`.Estimate, 2)) AS TotalEstExp,
`cosex`.RelatedRecordID FROM `cosex` 
 WHERE `cosex`._Deleted = 0 
 AND RelatedModuleID = 'gapoi' 
 AND 'gapoi' = `cosex`.RelatedModuleID
GROUP BY `cosex`.RelatedRecordID 
) AS cosex1 
ON (`gapoi`.GapAnalysisItemID = cosex1.RelatedRecordID) 
     LEFT OUTER JOIN `rskxa` AS rskxa1 
    ON (`gapoi`.GapAnalysisItemID = `rskxa1`.SourceRecordID 
     AND `rskxa1`.SourceModuleID = 'gapoi'
     AND `rskxa1`._Deleted = 0)
     LEFT OUTER JOIN `csc` AS csc1 
    ON (`gapoi`.GapAnalysisItemID = `csc1`.RecordID 
     AND `csc1`.ModuleID = 'gapoi'
     AND `csc1`._Deleted = 0)
     LEFT OUTER JOIN `org` AS org1 
   ON (`gapo1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`gapo1`.OrgGapAnalysisID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'gapo'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '180')
     LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
ON (`acc1`.PersonAccountableID = `ppl2`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl3 
   ON (`acc2`.PersonAccountableID = `ppl3`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl4 
   ON (`acc3`.PersonAccountableID = `ppl4`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`gap1`.AnalysisTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '157')
     LEFT OUTER JOIN `mod` AS mod1 
   ON (`gap1`.ModuleID = `mod1`.ModuleID )
     LEFT OUTER JOIN `rskl` AS rskl1 
   ON (`rskxa1`.LikelihoodID = `rskl1`.LikelihoodID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`rskxa1`.LikelihoodStatusID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '112')
     LEFT OUTER JOIN `rsks` AS rsks1 
   ON (`rskxa1`.SeverityID = `rsks1`.SeverityID )
WHERE
   gapoi.GapAnalysisItemID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Gap Analysis Result");
        $screenPhrase = gettext("Regulations|Associate regulations with the gap analysis item");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Gap Analysis Results");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'GapAnalysisItemID' => gettext("Record ID|An automatically assigned number used to associate organizations with resource requirements"),
   'GapAnalysisID' => gettext("Analysis Item|The item to be considered for gap analysis"),
   'Organization' => gettext("Organization|The name of the organization where the gap analysis is scheduled to occur"),
   'OrganizationLiaison' => gettext("Organization Liaison|The individual assigned primary accountability for organizing the gap analysis for the organization being evaluated"),
   'AuditTeamLeader' => gettext("Gap Team Leader|The individual assigned primary accountability for conducting the gap analysis"),
   'GapTitle' => gettext("Gap Analysis Title|A short title used to identify the organizational gap analysis"),
   'GapObjective' => gettext("Gap Objective|A detailed description of the scope, purpose, and/or objective of the gap analysis"),
   'ScheduledStart' => gettext("Scheduled Start|The date and time the organizational gap analysis is scheduled to began"),
   'ScheduledEnd' => gettext("Scheduled End|The date and time the organizational gap analysis is scheduled to end"),
   'ScheduledDuration' => gettext("Scheduled Duration|The scheduled duration of the organizational gap analysis"),
   'GapItemContact' => gettext("Gap Item Contact|The individual assigned primary accountability for explaining the organization's business process"),
   'GapItemReviewer' => gettext("Gap Item Reviewer|The individual assigned primary accountability for conducting the gap analysis for the gap item"),
   'AnalysisType' => gettext("Analysis Type|The specific type of gap analysis performed"),
   'AnalysisItem' => gettext("Analysis Item|A brief title used to identify the item being analyzed for gaps"),
   'OrganizationDescription' => gettext("Organization Description|A detailed description of the businees process employed by the organization"),
   'OrganizationResources' => gettext("Organization Resources|A list of human resources assisting with the gap analysis for the business process"),
   'OrganizationLocations' => gettext("Organization Locations|A list of locations where business processes were evaluated"),
   'OrganizationRisks' => gettext("Organization Risks|A description of key organizational risks identified in association with the gap analysis"),
   'AnalysisStartTime' => gettext("Start Time|Time the gap analysis began"),
   'AnalysisEndTime' => gettext("End Time|Time this gap analysis ended"),
   'HoursEstimate' => gettext("Estimate (hours)|The number of hours estimated to analyze gaps in the business process"),
   'HoursActual' => gettext("Actual Hours|The actual number of hours required to to conduct the analysis for the gap item"),
   'MethodsandBenefits' => gettext("Methods and Benefits|A brief description of the methods used by Active Agenda to address the operational risk requirement and the resulting benefits"),
   'TotalEstOpp' => gettext("Estimated Opportunity|The total estimated financial opportunity associated with the gap analysis item"),
   'TotalEstExp' => gettext("Estimated Exposure|The total estimated cost exposure associated with the gap analysis item"),
   'Likelihood' => gettext("Risk Likelihood|A description of the risk likelihood based on a combination of field values assigned from within the Risk Likelihoods module"),
   'LikelihoodStatus' => gettext("Likelihood Status|The present status of efforts to resolve the likelihood that this risk will occur, continue, or repeat"),
   'LikelihoodFactors' => gettext("Likelihood Factors|A detailed description of the factors affecting the likelihood that this risk will occur, continue, or repeat"),
   'Severity' => gettext("Risk Severity|A description of the risk severity based on a combination of field values assigned from within the Risk Severities module"),
   'IndexValue' => gettext("Index Value|A calculated field based on the risk likelihood and risk severity. The resulting risk index value is compared against the assigned risk index recommendations entered into the Risk Index module and the respective recommendation is displayed"),
   'RiskRecommendation' => gettext("Recommended Action|An automatically assigned recommendation, based on the values assigned for Likelihood and Severity")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**-remove_begin-**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        


        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**-remove_end-**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Gap Analysis Results"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Gap Analysis Result") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about the organizational gap analysis") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate audit items with the gap analysis item") );
      $tempTabs['Exposures'] = array( "edit.php?scr=Exposures&$tabsQS", gettext("Exposures|Associate cost exposures with the gap analysis item") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the gap analysis item") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the gap analysis item") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the gap analysis item") );
      $tempTabs['Regulations'] = array( "", gettext("Regulations|Associate regulations with the gap analysis item") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the gap analysis item") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the gap analysis item") );
      $tempTabs['BusinessContinuation'] = array( "edit.php?scr=BusinessContinuation&$tabsQS", gettext("Continuity|Associate business continuation requirements with the gap analysis item") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate business agreements and/or contracts with the gap analysis item") );
      $tempTabs['Insurance'] = array( "edit.php?scr=Insurance&$tabsQS", gettext("Insurance|Associate insurance policies with the gap analysis item") );
      $tempTabs['Permits'] = array( "edit.php?scr=Permits&$tabsQS", gettext("Permits|Associate operating permits with the gap analysis item") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities associated with the gap analysis item") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the gap analysis item") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with the gap analysis item") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the gap analysis item") , 'bpc');
      $tempTabs['RecordReports'] = array( "reports.php?scr=RecordReports&$tabsQS", gettext("Reports|View reports on the current gap analysis item") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Regulations'] = array( "", gettext("New Gap Analysis Result") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>