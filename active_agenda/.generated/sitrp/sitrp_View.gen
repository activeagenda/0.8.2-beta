<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:12:{s:19:"SituationResponseID";O:9:"viewfield":16:{s:4:"name";s:19:"SituationResponseID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Record ID|An automatically assigned number used to associate response steps with organization specific situations";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"SituationID";O:9:"viewfield":16:{s:4:"name";s:11:"SituationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Situation|A combined field used to describe this situation when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"SituationCategory";O:9:"viewfield":16:{s:4:"name";s:17:"SituationCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Situation Category|A broadly defined title used to group similar categories of situations";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"SituationType";O:9:"viewfield":16:{s:4:"name";s:13:"SituationType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Situation Type|A combined field used to describe this situation type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"Situation";O:9:"viewfield":16:{s:4:"name";s:9:"Situation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Situation|A combined field used to describe this situation when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"LocalDescription";O:9:"viewfield":16:{s:4:"name";s:16:"LocalDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Situation Description|An detailed description of the local situation requiring action, communication, or response";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Organization|The name of the organization assigning the human resource to local situations";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"ResourcePurpose";O:9:"viewfield":16:{s:4:"name";s:15:"ResourcePurpose";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Resource Purpose|A word or short phrase used to describe the purpose for this resource type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ResourceType";O:9:"viewfield":16:{s:4:"name";s:12:"ResourceType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Resource Type|A combined field used to describe this resource type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ResourceTypeDesc";O:9:"viewfield":16:{s:4:"name";s:16:"ResourceTypeDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Resource Type Description|A detailed description of the scope and requirements of this resource type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"LocalRoleDescription";O:9:"viewfield":16:{s:4:"name";s:20:"LocalRoleDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:95:"Local Description|An detailed description of the local situation response role and requirements";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IsBestPractice";O:14:"invisiblefield":11:{s:4:"name";s:14:"IsBestPractice";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'SituationResponseID' => gettext("Record ID|An automatically assigned number used to associate response steps with organization specific situations"),
   'SituationID' => gettext("Situation|A combined field used to describe this situation when associating it with other records"),
   'SituationCategory' => gettext("Situation Category|A broadly defined title used to group similar categories of situations"),
   'SituationType' => gettext("Situation Type|A combined field used to describe this situation type when associating it with other records"),
   'Situation' => gettext("Situation|A combined field used to describe this situation when associating it with other records"),
   'LocalDescription' => gettext("Situation Description|An detailed description of the local situation requiring action, communication, or response"),
   'Organization' => gettext("Organization|The name of the organization assigning the human resource to local situations"),
   'ResourcePurpose' => gettext("Resource Purpose|A word or short phrase used to describe the purpose for this resource type"),
   'ResourceType' => gettext("Resource Type|A combined field used to describe this resource type when associating it with other records"),
   'ResourceTypeDesc' => gettext("Resource Type Description|A detailed description of the scope and requirements of this resource type"),
   'LocalRoleDescription' => gettext("Local Description|An detailed description of the local situation response role and requirements"),
   'IsBestPractice' => gettext("Is Best Practice|Whether the associated record is a best practice")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    $useBestPractices = true;

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `sitrp`.SituationResponseID,
   `sitrp`.SituationID,
   `cod1`.Description AS SituationCategory,
   NULLIF(CONCAT(IFNULL(`sitt1`.SituationTitle,'')),'') AS SituationType,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`sitt2`.SituationTitle,'')),''),'')),'') AS Situation,
   `sit1`.LocalDescription AS LocalDescription,
   `org1`.Name AS Organization,
   `cod2`.Description AS ResourcePurpose,
   NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,'')),'') AS ResourceType,
   `prtt1`.ParticipationTypeDesc AS ResourceTypeDesc,
   `sitrp`.LocalRoleDescription,
   `bpc1`.IsBestPractice AS IsBestPractice,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`sitt2`.SituationTitle,'')),''),'')),''),''),' | ',IFNULL(NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,'')),''),''),' | ',IFNULL(`org1`.Name,'')),' |  | ') AS RecordLabel,
   `sit1`.OrganizationID AS OrganizationID
FROM `sitrp`
   
     LEFT OUTER JOIN `sit` AS sit1 
   ON (`sitrp`.SituationID = `sit1`.SituationID )
     LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`sitrp`.ResourceTypeID = `prtt1`.ParticipationTypeID )
     LEFT OUTER JOIN (SELECT 
COUNT(`bpc`.BestPracticeID) AS IsBestPractice,
`bpc`.RelatedRecordID FROM `bpc` 
 WHERE `bpc`._Deleted = 0 
 AND 'sitrp' = `bpc`.RelatedModuleID
GROUP BY `bpc`.RelatedRecordID 
) AS bpc1 
ON (`sitrp`.SituationResponseID = bpc1.RelatedRecordID) 
     LEFT OUTER JOIN `sitt` AS sitt1 
   ON (`sit1`.SituationTypeID = `sitt1`.SituationTypeID )
     LEFT OUTER JOIN `sitt` AS sitt2 
   ON (`sit1`.SituationTypeID = `sitt2`.SituationTypeID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`sit1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`prtt1`.ParticipationPurposeID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '42')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`sitt1`.SituationCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '26')
WHERE
   sitrp.SituationResponseID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Situation Response Procedures"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Situation Response Procedure") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a local situation response procedure") );
      $tempTabs['Steps'] = array( "edit.php?scr=Steps&$tabsQS", gettext("Steps|Associate response steps with the local situation response procedure") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the local situation response procedure") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Situation Response Procedure") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Situation Response Procedure") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Situation Response Procedure") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Situation Response Procedure") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Situation Response Procedure");
    $screenPhrase = gettext("View|View summary information about a local situation response procedure");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here
   $Grid1 = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"sitrs";s:6:"phrase";s:14:"Response Steps";s:6:"number";i:1;s:6:"Fields";a:3:{s:23:"SituationResponseStepID";O:14:"invisiblefield":11:{s:4:"name";s:23:"SituationResponseStepID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:111:"Step ID|An automatically assigned number used to associate response steps with organization specific situations";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"sitrs";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:17:"ResponseStepOrder";O:9:"viewfield":16:{s:4:"name";s:17:"ResponseStepOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:52:"Order|The list order of this situation response step";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"sitrs";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ResponseStep";O:9:"viewfield":16:{s:4:"name";s:12:"ResponseStep";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Step|A step required of this resource in response to the situation";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"sitrs";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:118:"SELECT 
    count(*) 
FROM `sitrs`
   
WHERE sitrs._Deleted = 0
   AND `sitrs`.SituationResponseID = \'/**RecordID**/\'
";s:7:"listSQL";s:415:"SELECT 
   `sitrs`.SituationResponseStepID,
`sit1`.OrganizationID AS OrganizationID,
`sitrs`.ResponseStepOrder,
`sitrs`.ResponseStep
FROM `sitrs`

   LEFT OUTER JOIN `sitrp` AS sitrp1 
   ON (`sitrs`.SituationResponseID = `sitrp1`.SituationResponseID )
   LEFT OUTER JOIN `sit` AS sit1 
   ON (`sitrp1`.SituationID = `sit1`.SituationID )
WHERE sitrs._Deleted = 0
AND `sitrs`.SituationResponseID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:19:"SituationResponseID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:23:"SituationResponseStepID";s:3:"int";s:17:"ResponseStepOrder";s:5:"float";s:12:"ResponseStep";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:3:{s:23:"SituationResponseStepID";s:5:"right";s:17:"ResponseStepOrder";s:5:"right";s:12:"ResponseStep";s:7:"justify";}}');
   $content .= $Grid1->render('view.php', $qsArgs);
   $Grid2 = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"res";s:6:"phrase";s:18:"Resources Assigned";s:6:"number";i:2;s:6:"Fields";a:7:{s:14:"ResourceTypeID";O:14:"invisiblefield":11:{s:4:"name";s:14:"ResourceTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Resource Type|A combined field used to describe this resource type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"res";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:65:"Organization|The organization making the human resource available";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"res";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Resource Name|The name of the organizational resource";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"res";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ResourceDesc";O:9:"viewfield":16:{s:4:"name";s:12:"ResourceDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:95:"Resource Description|A detailed description of the experience and capabilities of this resource";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"res";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"FullWorkPhone";O:9:"viewfield":16:{s:4:"name";s:13:"FullWorkPhone";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Work Phone|Telephone number of the individual at their place of work";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"res";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"MobilePhone";O:9:"viewfield":16:{s:4:"name";s:11:"MobilePhone";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:54:"Mobile Phone|Mobile telephone number of the individual";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"res";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"WorkEmail";O:9:"viewfield":16:{s:4:"name";s:9:"WorkEmail";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Work Email|Email address used by the individual at work";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"res";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:9:"WorkEmail";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:197:"SELECT 
    count(*) 
FROM `res`
   
 INNER JOIN `sitrp` AS `parent` ON `res`.ResourceTypeID = `parent`.ResourceTypeID
WHERE res._Deleted = 0
   AND `parent`.SituationResponseID = \'/**RecordID**/\'
";s:7:"listSQL";s:911:"SELECT 
   `res`.ResourceID,
`ppl1`.OrganizationID AS OrganizationID,
`res`.ResourceTypeID,
`org1`.Name AS Organization,
`ppl1`.DisplayName AS PersonAccountable,
`res`.ResourceDesc,
NULLIF(CONCAT(IFNULL(`ppl1`.WorkPhone,\'\'),\', ext. \',IFNULL(`ppl1`.WorkExtension,\'\')),\', ext. \') AS FullWorkPhone,
`ppl1`.MobilePhone AS MobilePhone,
`ppl1`.WorkEmail AS WorkEmail
FROM `res`

   LEFT OUTER JOIN `acc` AS acc1 
    ON (`res`.ResourceID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'res\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'39\')
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`ppl1`.OrganizationID = `org1`.OrganizationID )
 INNER JOIN `sitrp` AS `parent` ON `res`.ResourceTypeID = `parent`.ResourceTypeID
WHERE res._Deleted = 0
AND `parent`.SituationResponseID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";N;s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:7:{s:14:"ResourceTypeID";s:3:"int";s:12:"Organization";N;s:17:"PersonAccountable";N;s:12:"ResourceDesc";s:4:"text";s:13:"FullWorkPhone";N;s:11:"MobilePhone";N;s:9:"WorkEmail";N;}s:4:"name";N;s:10:"fieldAlign";a:7:{s:14:"ResourceTypeID";s:5:"right";s:12:"Organization";s:4:"left";s:17:"PersonAccountable";s:4:"left";s:12:"ResourceDesc";s:7:"justify";s:13:"FullWorkPhone";s:7:"justify";s:11:"MobilePhone";s:4:"left";s:9:"WorkEmail";s:4:"left";}}');
   $content .= $Grid2->render('view.php', $qsArgs);
   $Grid3 = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"bpc";s:6:"phrase";s:14:"Best Practices";s:6:"number";i:3;s:6:"Fields";a:4:{s:14:"BestPracticeID";O:14:"invisiblefield":11:{s:4:"name";s:14:"BestPracticeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Record ID|An automatically assigned number used to track best practices";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:20:"BestPracticeCategory";O:9:"viewfield":16:{s:4:"name";s:20:"BestPracticeCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Best Practice Category|A method of categorizing best practices of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"BestPracticeTitle";O:9:"viewfield":16:{s:4:"name";s:17:"BestPracticeTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Best Practice Title|A descriptive title of the best practice identified";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Evaluator|The individual evaluating and awarding the best practice";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:144:"SELECT 
    count(*) 
FROM `bpc`
   
WHERE bpc._Deleted = 0
   AND `bpc`.RelatedModuleID = \'sitrp\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:678:"SELECT 
   `bpc`.BestPracticeID,
`cod1`.Description AS BestPracticeCategory,
`bpc`.BestPracticeTitle,
`ppl1`.DisplayName AS PersonAccountable
FROM `bpc`

   LEFT OUTER JOIN `cod` AS cod1 
   ON (`bpc`.BestPracticeCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'108\')
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`bpc`.BestPracticeID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'bpc\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'142\')
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE bpc._Deleted = 0
AND `bpc`.RelatedModuleID = \'sitrp\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:14:"BestPracticeID";s:3:"int";s:20:"BestPracticeCategory";N;s:17:"BestPracticeTitle";s:12:"varchar(128)";s:17:"PersonAccountable";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:14:"BestPracticeID";s:5:"right";s:20:"BestPracticeCategory";s:4:"left";s:17:"BestPracticeTitle";s:4:"left";s:17:"PersonAccountable";s:4:"left";}}');
   $content .= $Grid3->render('view.php', $qsArgs);


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
