<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    $grid = unserialize('O:8:"editgrid":32:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:914:"SELECT 
   `pkg`.PackagingUnitEquivalentID,
   `cod1`.Description AS FirstUnitCategory,
   `uts1`.UnitCategoryID AS FirstUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,\'\')),\'\') AS FirstUnit,
   `pkg`.FirstUnitID,
   `pkg`.FirstUnitValue,
   `cod2`.Description AS SecondUnitCategory,
   `uts2`.UnitCategoryID AS SecondUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts2`.UnitName,\'\')),\'\') AS SecondUnit,
   `pkg`.SecondUnitID,
   `pkg`.SecondUnitValue
FROM `pkg`
   
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`pkg`.FirstUnitID = `uts1`.UnitID )
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`pkg`.SecondUnitID = `uts2`.UnitID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`uts1`.UnitCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'37\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`uts2`.UnitCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'37\')
WHERE
   pkg.PackagingUnitEquivalentID=\'/**RowID**/\'";s:9:"getRowSQL";s:515:"SELECT 
   NULLIF(CONCAT(IFNULL(`pkg`.FirstUnitValue,\'\'),\' \',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,\'\')),\'\'),\'\')),\' \') AS FirstUnitEquivalent,
   NULLIF(CONCAT(IFNULL(`pkg`.SecondUnitValue,\'\'),\' \',IFNULL(NULLIF(CONCAT(IFNULL(`uts2`.UnitName,\'\')),\'\'),\'\')),\' \') AS SecondUnitEquivalent
FROM `pkg`
   
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`pkg`.FirstUnitID = `uts1`.UnitID )
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`pkg`.SecondUnitID = `uts2`.UnitID )
WHERE
   pkg.PackagingUnitEquivalentID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:3:{s:25:"PackagingUnitEquivalentID";O:14:"invisiblefield":11:{s:4:"name";s:25:"PackagingUnitEquivalentID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:108:"Record ID|An automatically assigned number used to associate packaging unit equivalents with related records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pkg";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"FirstUnitValue";O:9:"editfield":14:{s:4:"name";s:14:"FirstUnitValue";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:19:"FirstUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:19:"FirstUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pkg";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:11:"FirstUnitID";a:1:{s:4:"name";s:11:"FirstUnitID";}}s:8:"moduleID";s:3:"pkg";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:11:"FirstUnitID";O:10:"combofield":26:{s:4:"name";s:11:"FirstUnitID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"pkg";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:19:"FirstUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"pkg";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";s:124:"First Equivalent|The value associate with the first packaging unit to be normalized with the second value and packaging unit";s:8:"dataType";s:5:"float";s:8:"validate";s:35:"Number notZero notEmpty notNegative";s:7:"invalid";N;s:8:"formName";s:3:"pkg";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"10";s:9:"maxLength";s:2:"10";s:5:"align";s:4:"left";}s:15:"SecondUnitValue";O:9:"editfield":14:{s:4:"name";s:15:"SecondUnitValue";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:20:"SecondUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:20:"SecondUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pkg";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:12:"SecondUnitID";a:1:{s:4:"name";s:12:"SecondUnitID";}}s:8:"moduleID";s:3:"pkg";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:12:"SecondUnitID";O:10:"combofield":26:{s:4:"name";s:12:"SecondUnitID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"pkg";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:20:"SecondUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"pkg";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";s:115:"Second Equivalent|The value associate with the second packaging unit to be normalized with the first value and unit";s:8:"dataType";s:5:"float";s:8:"validate";s:35:"Number notZero notEmpty notNegative";s:7:"invalid";N;s:8:"formName";s:3:"pkg";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"10";s:9:"maxLength";s:2:"10";s:5:"align";s:4:"left";}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:25:"PackagingUnitEquivalentID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:3:"pkg";s:6:"phrase";s:16:"Unit Equivalents";s:6:"number";N;s:6:"Fields";a:2:{s:19:"FirstUnitEquivalent";O:9:"viewfield":16:{s:4:"name";s:19:"FirstUnitEquivalent";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"First Unit Equivalent|A combined field used to describe this packaging unit equivalent when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pkg";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"SecondUnitEquivalent";O:9:"viewfield":16:{s:4:"name";s:20:"SecondUnitEquivalent";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:126:"Second Unit Equivalent|A combined field used to describe this packaging unit equivalent when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pkg";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:144:"SELECT 
    count(*) 
FROM `pkg`
   
WHERE pkg._Deleted = 0
   AND `pkg`.RelatedModuleID = \'oasin\'
AND `pkg`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:591:"SELECT 
   `pkg`.PackagingUnitEquivalentID,
NULLIF(CONCAT(IFNULL(`pkg`.FirstUnitValue,\'\'),\' \',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,\'\')),\'\'),\'\')),\' \') AS FirstUnitEquivalent,
NULLIF(CONCAT(IFNULL(`pkg`.SecondUnitValue,\'\'),\' \',IFNULL(NULLIF(CONCAT(IFNULL(`uts2`.UnitName,\'\')),\'\'),\'\')),\' \') AS SecondUnitEquivalent
FROM `pkg`

   LEFT OUTER JOIN `uts` AS uts1 
   ON (`pkg`.FirstUnitID = `uts1`.UnitID )
   LEFT OUTER JOIN `uts` AS uts2 
   ON (`pkg`.SecondUnitID = `uts2`.UnitID )
WHERE pkg._Deleted = 0
AND `pkg`.RelatedModuleID = \'oasin\'
AND `pkg`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";s:21:"OtherAssetInventoryID";s:8:"PKFields";a:1:{i:0;s:25:"PackagingUnitEquivalentID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:10:"conditions";a:1:{s:15:"RelatedModuleID";s:5:"oasin";}}');
?>