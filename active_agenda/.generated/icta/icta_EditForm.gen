<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:16:{s:16:"IncentiveAwardID";O:9:"viewfield":16:{s:4:"name";s:16:"IncentiveAwardID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:73:"Record ID|An automatically assigned number used to track incentive awards";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:16:"IncentiveAssocID";a:1:{s:4:"name";s:16:"IncentiveAssocID";}}s:8:"moduleID";s:4:"icta";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:16:"IncentiveAssocID";O:10:"combofield":26:{s:4:"name";s:16:"IncentiveAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"ictas";s:10:"foreignKey";s:16:"IncentiveAssocID";s:12:"foreignField";s:14:"IncentiveAssoc";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:310:"SELECT 
`ictas`.IncentiveAssocID AS ID, NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ict1`.IncentiveCriteria,\'\')),\'\'),\'\')),\'\') AS Name, `ictas`.OrganizationID AS ParentID FROM `ictas`
 
 LEFT OUTER JOIN `ict` AS ict1 
   ON (`ictas`.IncentiveID = `ict1`.IncentiveID )
WHERE ictas._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:314:"SELECT 
`ictas`.IncentiveAssocID AS ID, NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ict1`.IncentiveCriteria,\'\')),\'\'),\'\')),\'\') AS Name, `ictas`.OrganizationID AS ParentID FROM `ictas`
 
 LEFT OUTER JOIN `ict` AS ict1 
   ON (`ictas`.IncentiveID = `ict1`.IncentiveID )

WHERE `ictas`.IncentiveAssocID = \'/*recordID*/\'";s:11:"parentField";s:14:"OrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:20:"IncentiveDescription";a:1:{s:4:"name";s:20:"IncentiveDescription";}}s:8:"moduleID";s:4:"icta";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:30:"`ictas`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:20:"IncentiveDescription";O:9:"viewfield":16:{s:4:"name";s:20:"IncentiveDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:158:"Incentive Description|A detailed description of the incentive criteria and specific activity required to satisfy the criteria and result in an incentive award";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:16:"IncentiveAssocID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"ActualValue";O:10:"moneyfield":18:{s:4:"name";s:11:"ActualValue";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:5:"money";s:8:"validate";s:5:"Money";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";N;s:9:"maxLength";N;s:5:"align";s:4:"left";s:16:"localAmountField";N;s:20:"localCurrencyIDField";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"AwardOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:19:"AwardOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"icta";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:15:"PersonAwardedID";O:16:"personcombofield":29:{s:4:"name";s:15:"PersonAwardedID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"icta";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:19:"PersonAwardedID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"SupervisorID";O:16:"personcombofield":29:{s:4:"name";s:12:"SupervisorID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"icta";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:16:"SupervisorID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"ActivityDesc";O:9:"memofield":15:{s:4:"name";s:12:"ActivityDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"ActivityDate";O:9:"datefield":15:{s:4:"name";s:12:"ActivityDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:13:"SubmittalDate";O:9:"datefield":15:{s:4:"name";s:13:"SubmittalDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";s:0:"";s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"ReceivedDate";O:9:"datefield":15:{s:4:"name";s:12:"ReceivedDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";s:0:"";s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"AwardSponsorID";O:16:"personcombofield":29:{s:4:"name";s:14:"AwardSponsorID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"icta";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:18:"AwardSponsorID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:7:"Awarded";O:13:"checkboxfield":14:{s:4:"name";s:7:"Awarded";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:9:"AwardDate";O:9:"datefield":15:{s:4:"name";s:9:"AwardDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"icta";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Incentive Award");

//field value array
$data = array(
        'IncentiveAwardID' => '',
         'OrganizationID' => '',
         'IncentiveAssocID' => '',
         'IncentiveDescription' => '',
         'ActualValue' => '',
         'AwardOrganizationID' => '',
         'PersonAwardedID' => '',
         'SupervisorID' => '',
         'ActivityDesc' => '',
         'ActivityDate' => '',
         'SubmittalDate' => '',
         'ReceivedDate' => '',
         'AwardSponsorID' => '',
         'Awarded' => '',
         'AwardDate' => '',
         'PersonAccountableID' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'IncentiveAwardID';

    $ownerField = 'AwardOrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Accountability";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `icta`.IncentiveAwardID,
   `org1`.Name AS Organization,
   `ictas1`.OrganizationID AS OrganizationID,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ict2`.IncentiveCriteria,'')),''),'')),'') AS IncentiveAssoc,
   `icta`.IncentiveAssocID,
   `ict1`.IncentiveDescription AS IncentiveDescription,
   `icta`.ActualValue,
   `org1`.Name AS AwardOrganization,
   `icta`.AwardOrganizationID,
   `ppl1`.DisplayName AS PersonAwarded,
   `inv1`.PersonInvolvedID AS PersonAwardedID,
   `ppl2`.DisplayName AS Supervisor,
   `inv2`.PersonInvolvedID AS SupervisorID,
   `icta`.ActivityDesc,
   `dat1`.RelatedDate AS ActivityDate,
   `icta`.SubmittalDate,
   `icta`.ReceivedDate,
   `ppl1`.DisplayName AS AwardSponsor,
   `inv3`.PersonInvolvedID AS AwardSponsorID,
   `icta`.Awarded,
   `dat2`.RelatedDate AS AwardDate,
   `ppl3`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ict1`.IncentiveCriteria,'')),''),''),' | ',IFNULL(`ppl1`.DisplayName,''),' | ',IFNULL(`dat2`.RelatedDate,'')),' |  | ') AS RecordLabel
FROM `icta`
   
     LEFT OUTER JOIN `ictas` AS ictas1 
   ON (`icta`.IncentiveAssocID = `ictas1`.IncentiveAssocID )
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`icta`.IncentiveAwardID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'icta'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '36')
     LEFT OUTER JOIN `inv` AS inv2 
    ON (`icta`.IncentiveAwardID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = 'icta'
     AND `inv2`._Deleted = 0
     AND `inv2`.InvolvementDescriptorID = '82')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`icta`.IncentiveAwardID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'icta'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '7')
     LEFT OUTER JOIN `inv` AS inv3 
    ON (`icta`.IncentiveAwardID = `inv3`.SourceRecordID 
     AND `inv3`.SourceModuleID = 'icta'
     AND `inv3`._Deleted = 0
     AND `inv3`.InvolvementDescriptorID = '37')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`icta`.IncentiveAwardID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'icta'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '19')
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`icta`.IncentiveAwardID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'icta'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '41')
     LEFT OUTER JOIN `org` AS org1 
   ON (`ictas1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ict` AS ict2 
   ON (`ictas1`.IncentiveID = `ict2`.IncentiveID )
     LEFT OUTER JOIN `ict` AS ict1 
   ON (`ictas1`.IncentiveID = `ict1`.IncentiveID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv2`.PersonInvolvedID = `ppl2`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl3 
   ON (`acc1`.PersonAccountableID = `ppl3`.PersonID )
WHERE
   icta.IncentiveAwardID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Incentive Award");
        $screenPhrase = gettext("Form|Edit summary information about an awarded incentive");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Incentive Awards");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'IncentiveAwardID' => gettext("Record ID|An automatically assigned number used to track incentive awards"),
   'OrganizationID' => gettext("Organization|The name of the organization sponsoring or supporting the incentive criteria throughout the enterprise"),
   'IncentiveAssocID' => gettext("Incentive|The title of the incentive being awarded"),
   'IncentiveDescription' => gettext("Incentive Description|A detailed description of the incentive criteria and specific activity required to satisfy the criteria and result in an incentive award"),
   'ActualValue' => gettext("Actual Value|Actual cash value of the incentive award"),
   'AwardOrganizationID' => gettext("Award Organization|The specific organization issuing the award"),
   'PersonAwardedID' => gettext("Award Recipient|The person receiving the award for satisfying the respective incentive criteria"),
   'SupervisorID' => gettext("Supervisor|The immediate supervisor of the person receiving the incentive award at the time it was earned"),
   'ActivityDesc' => gettext("Activity Description|A detailed description of the activity which resulted in the incentive award"),
   'ActivityDate' => gettext("Activity Date|The date and time the award recipient performed the activity which satisfied the award criteria"),
   'SubmittalDate' => gettext("Submittal Date|Date and time the incentive award form was submitted by the award sponsor for consideration"),
   'ReceivedDate' => gettext("Received Date|The date and time the incentive award form was received by the incentive program administrator"),
   'AwardSponsorID' => gettext("Award Sponsor|The person responsible for submitting the incentive award request"),
   'Awarded' => gettext("Awarded|Whether the proposed incentive award recipient was approved to receive the award"),
   'AwardDate' => gettext("Award Date|The date and time the award was provided to the award recipient"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for evaluating the satisfaction of the incentive criteria, delivering the incentive award to the award recipient and communicating with all award stakeholders")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['IncentiveAssocID'], ShortPhrase($phrases['IncentiveAssocID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['IncentiveAssocID']->invalid = TRUE;
            }
$vMsg = Validate($data['ActualValue'], ShortPhrase($phrases['ActualValue']), 'Money');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ActualValue']->invalid = TRUE;
            }
$vMsg = Validate($data['AwardOrganizationID'], ShortPhrase($phrases['AwardOrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AwardOrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAwardedID'], ShortPhrase($phrases['PersonAwardedID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAwardedID']->invalid = TRUE;
            }
$vMsg = Validate($data['SupervisorID'], ShortPhrase($phrases['SupervisorID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SupervisorID']->invalid = TRUE;
            }
$vMsg = Validate($data['ActivityDesc'], ShortPhrase($phrases['ActivityDesc']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ActivityDesc']->invalid = TRUE;
            }
$vMsg = Validate($data['ActivityDate'], ShortPhrase($phrases['ActivityDate']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ActivityDate']->invalid = TRUE;
            }
$vMsg = Validate($data['SubmittalDate'], ShortPhrase($phrases['SubmittalDate']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SubmittalDate']->invalid = TRUE;
            }
$vMsg = Validate($data['ReceivedDate'], ShortPhrase($phrases['ReceivedDate']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ReceivedDate']->invalid = TRUE;
            }
$vMsg = Validate($data['AwardSponsorID'], ShortPhrase($phrases['AwardSponsorID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AwardSponsorID']->invalid = TRUE;
            }
$vMsg = Validate($data['Awarded'], ShortPhrase($phrases['Awarded']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Awarded']->invalid = TRUE;
            }
$vMsg = Validate($data['AwardDate'], ShortPhrase($phrases['AwardDate']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AwardDate']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Incentive Awards"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Incentive Award") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about an awarded incentive") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the incentive award") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the incentive award") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with incentive awards") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the incentive award") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Incentive Award") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"ActivityDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_ActivityDate\"
});
Calendar.setup({
   inputField : \"SubmittalDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_SubmittalDate\"
});
Calendar.setup({
   inputField : \"ReceivedDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_ReceivedDate\"
});
Calendar.setup({
   inputField : \"AwardDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_AwardDate\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>