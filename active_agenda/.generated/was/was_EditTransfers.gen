<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:22:{s:7:"WasteID";O:9:"viewfield":16:{s:4:"name";s:7:"WasteID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Waste ID|An automatically assigned number used to track chemical waste associated with this chemical";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"WasteTypeID";O:14:"invisiblefield":11:{s:4:"name";s:11:"WasteTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:78:"Organization|The name of the organization responsible for generating the waste";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Person Accountable|The individual assigned primary accountability for managing this waste stream";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"WasteCategory";O:9:"viewfield":16:{s:4:"name";s:13:"WasteCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Category|A broad category used to group waste streams of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"WasteType";O:9:"viewfield":16:{s:4:"name";s:9:"WasteType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:108:"Waste Type|A combined field used to describe this waste disposal type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"WasteName";O:9:"viewfield":16:{s:4:"name";s:9:"WasteName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Waste Name|The name used to identify the waste stream";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"WasteDesc";O:9:"viewfield":16:{s:4:"name";s:9:"WasteDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Waste Description|A detailed description of the waste stream being tracked";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"WasteGenerationMethod";O:9:"viewfield":16:{s:4:"name";s:21:"WasteGenerationMethod";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Waste Generation Method|The method by which the waste stream was generated";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:5:"Solid";O:9:"viewfield":16:{s:4:"name";s:5:"Solid";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Solid|Check this box if this waste is present on site as a solid";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Liquid";O:9:"viewfield":16:{s:4:"name";s:6:"Liquid";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Liquid|Check this box if this waste is present on site as a liquid";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:3:"Gas";O:9:"viewfield":16:{s:4:"name";s:3:"Gas";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:60:"Gas|Check this box if this waste is present on site as a gas";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ChemicalInvolved";O:9:"viewfield":16:{s:4:"name";s:16:"ChemicalInvolved";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Chemical Involved|Whether this waste stream involves a chemical";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Chemical";O:9:"viewfield":16:{s:4:"name";s:8:"Chemical";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Primary Chemical|A combined field used to describe this chemical when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"SystemProcessInvolved";O:9:"viewfield":16:{s:4:"name";s:21:"SystemProcessInvolved";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"System or Process Involved|Whether this waste stream is the result of a system or process";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"System";O:9:"viewfield":16:{s:4:"name";s:6:"System";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Primary System|A combined field used to describe this system when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"AmtGenYear";O:9:"viewfield":16:{s:4:"name";s:10:"AmtGenYear";s:10:"parentName";N;s:6:"Fields";a:1:{s:15:"AmtGenYearUnits";O:9:"viewfield":16:{s:4:"name";s:15:"AmtGenYearUnits";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:81:"Amount Generated Per Year|The amount of waste generated by this chemical per year";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"LocalWasteIDs";O:9:"viewfield":16:{s:4:"name";s:13:"LocalWasteIDs";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Local Waste IDs|Local regulatory waste identification numbers. Numbers should be separated by commas";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"OrgWasteIDs";O:9:"viewfield":16:{s:4:"name";s:11:"OrgWasteIDs";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:118:"Organizational Waste IDs|Organizational regulatory waste identification numbers. Numbers should be separated by commas";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"LocalDisposalPractice";O:9:"viewfield":16:{s:4:"name";s:21:"LocalDisposalPractice";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:129:"Local Disposal Practice|A detailed description of the waste disposal practices associated with this chemical at this organization";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"TotalEstOpp";O:9:"viewfield":16:{s:4:"name";s:11:"TotalEstOpp";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Estimated Opportunity|The total estimated financial opportunity associated with the waste stream";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"TotalEstExp";O:9:"viewfield":16:{s:4:"name";s:11:"TotalEstExp";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Estimated Exposure|The total estimated cost exposure associated with the waste stream";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Waste Stream");

//field value array
$data = array(
        'WasteID' => '',
         'WasteTypeID' => '',
         'Organization' => '',
         'PersonAccountable' => '',
         'WasteCategory' => '',
         'WasteType' => '',
         'WasteName' => '',
         'WasteDesc' => '',
         'WasteGenerationMethod' => '',
         'Solid' => '',
         'Liquid' => '',
         'Gas' => '',
         'ChemicalInvolved' => '',
         'Chemical' => '',
         'SystemProcessInvolved' => '',
         'System' => '',
         'AmtGenYearUnits' => '',
         'AmtGenYear' => '',
         'LocalWasteIDs' => '',
         'OrgWasteIDs' => '',
         'LocalDisposalPractice' => '',
         'TotalEstOpp' => '',
         'TotalEstExp' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:2270:"SELECT 
   `wastf`.WasteTransferID,
   `org1`.Name AS WasteTransporter,
   `wastf`.WasteTransporterID,
   `ppl1`.DisplayName AS TransferPerson,
   `acc1`.PersonAccountableID AS TransferPersonID,
   `dat1`.RelatedDate AS WasteShipDate,
   `cod1`.Description AS WasteShipAmtUnitCategory,
   `uts1`.UnitCategoryID AS WasteShipAmtUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,\'\')),\'\') AS WasteShipAmtUnits,
   `wastf`.WasteShipAmtUnitsID,
   `wastf`.WasteShipAmt,
   `cod2`.Description AS PriceUnitCategory,
   `uts2`.UnitCategoryID AS PriceUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts2`.UnitName,\'\')),\'\') AS PriceUnit,
   `wastf`.PriceUnitID,
   `wastf`.Price,
   `wastf`.Revenue,
   `org2`.Name AS WasteDisposalFacility,
   `wastf`.WasteDisposalFacilityID,
   `was1`.OrganizationID AS WasteOrganizationID
FROM `wastf`
   
     LEFT OUTER JOIN `wastp` AS wastp1 
   ON (`wastf`.WasteTransporterID = `wastp1`.TransporterID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`wastf`.WasteTransferID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'wastf\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'92\')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`wastf`.WasteTransferID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'wastf\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'46\')
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`wastf`.WasteShipAmtUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`wastf`.PriceUnitID = `uts2`.UnitID )
     LEFT OUTER JOIN `wasdf` AS wasdf1 
   ON (`wastf`.WasteDisposalFacilityID = `wasdf1`.WasteDisposalFacilityID )
     LEFT OUTER JOIN `was` AS was1 
   ON (`wastf`.WasteID = `was1`.WasteID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`wastp1`.TransporterID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`uts1`.UnitCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'37\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`uts2`.UnitCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'37\')
     LEFT OUTER JOIN `org` AS org2 
   ON (`wasdf1`.DisposalFacilityID = `org2`.OrganizationID )
WHERE
   wastf.WasteTransferID=\'/**RowID**/\'";s:9:"getRowSQL";s:1287:"SELECT 
   `org1`.Name AS WasteTransporter,
   `ppl1`.DisplayName AS TransferPerson,
   `dat1`.RelatedDate AS WasteShipDate,
   `wastf`.Revenue,
   `org2`.Name AS WasteDisposalFacility,
   `was1`.OrganizationID AS WasteOrganizationID
FROM `wastf`
   
     LEFT OUTER JOIN `wastp` AS wastp1 
   ON (`wastf`.WasteTransporterID = `wastp1`.TransporterID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`wastf`.WasteTransferID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'wastf\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'92\')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`wastf`.WasteTransferID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'wastf\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'46\')
     LEFT OUTER JOIN `wasdf` AS wasdf1 
   ON (`wastf`.WasteDisposalFacilityID = `wasdf1`.WasteDisposalFacilityID )
     LEFT OUTER JOIN `was` AS was1 
   ON (`wastf`.WasteID = `was1`.WasteID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`wastp1`.TransporterID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`wasdf1`.DisposalFacilityID = `org2`.OrganizationID )
WHERE
   wastf.WasteTransferID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:8:{s:15:"WasteTransferID";O:14:"invisiblefield":11:{s:4:"name";s:15:"WasteTransferID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Waste Transport|An automatically assigned number used to track shipments of organizational waste";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"WasteTransporterID";O:13:"orgcombofield":26:{s:4:"name";s:18:"WasteTransporterID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Waste Transporter|A combined field used to describe this waste transporter when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:277:"SELECT 
`wastp`.TransporterID AS ID, `org1`.Name AS Name FROM `wastp`
 
 LEFT OUTER JOIN `org` AS org1 
   ON (`wastp`.TransporterID = `org1`.OrganizationID )
 LEFT OUTER JOIN `was` AS was1 
   ON (`wastp`.WasteID = `was1`.WasteID )
WHERE wastp._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:278:"SELECT 
`wastp`.TransporterID AS ID, `org1`.Name AS Name FROM `wastp`
 
 LEFT OUTER JOIN `org` AS org1 
   ON (`wastp`.TransporterID = `org1`.OrganizationID )
 LEFT OUTER JOIN `was` AS was1 
   ON (`wastp`.WasteID = `was1`.WasteID )

WHERE `wastp`.TransporterID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"wastf";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`was1`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:16:"TransferPersonID";O:16:"personcombofield":29:{s:4:"name";s:16:"TransferPersonID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Transfer Person|The name of the person transfering the waste to the transporter on behalf of the organization";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"wastf";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:20:"TransferPersonID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:13:"WasteShipDate";O:9:"datefield":15:{s:4:"name";s:13:"WasteShipDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Shipment Date|The date the waste was shipped from the organization";s:8:"dataType";s:4:"date";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"WasteShipAmt";O:9:"editfield":14:{s:4:"name";s:12:"WasteShipAmt";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:26:"WasteShipAmtUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:26:"WasteShipAmtUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:19:"WasteShipAmtUnitsID";a:1:{s:4:"name";s:19:"WasteShipAmtUnitsID";}}s:8:"moduleID";s:5:"wastf";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:19:"WasteShipAmtUnitsID";O:10:"combofield":26:{s:4:"name";s:19:"WasteShipAmtUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:26:"WasteShipAmtUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"wastf";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";s:77:"Amount Shipped|The amount of waste that was shiped on the waste shipment date";s:8:"dataType";s:5:"float";s:8:"validate";s:35:"Number notNegative notZero notEmpty";s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:5:"Price";O:10:"moneyfield":18:{s:4:"name";s:5:"Price";s:10:"parentName";s:0:"";s:6:"Fields";a:3:{s:4:"Self";O:10:"moneyfield":18:{s:4:"name";s:5:"Price";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:5:"money";s:8:"validate";s:5:"Money";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";N;s:9:"maxLength";N;s:5:"align";s:4:"left";s:16:"localAmountField";N;s:20:"localCurrencyIDField";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"PriceUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:19:"PriceUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:11:"PriceUnitID";a:1:{s:4:"name";s:11:"PriceUnitID";}}s:8:"moduleID";s:5:"wastf";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:11:"PriceUnitID";O:10:"combofield":26:{s:4:"name";s:11:"PriceUnitID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:19:"PriceUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"wastf";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";s:128:"Price|The price per unit paid for this waste stream stated in the currency established for the site installation of the software";s:8:"dataType";s:5:"money";s:8:"validate";s:5:"Money";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";N;s:9:"maxLength";N;s:5:"align";s:4:"left";s:16:"localAmountField";N;s:20:"localCurrencyIDField";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:7:"Revenue";O:10:"moneyfield":18:{s:4:"name";s:7:"Revenue";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:193:"Revenue|An automatically calculated value based on the price per unit of this waste and the number of units shipped, stated in the currency established for the site installation of the software";s:8:"dataType";s:5:"money";s:8:"validate";s:5:"Money";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";N;s:9:"maxLength";N;s:5:"align";s:4:"left";s:16:"localAmountField";N;s:20:"localCurrencyIDField";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:23:"WasteDisposalFacilityID";O:13:"orgcombofield":26:{s:4:"name";s:23:"WasteDisposalFacilityID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Waste Disposal Facility|A combined field used to describe this waste disposal facility when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:292:"SELECT 
`wasdf`.WasteDisposalFacilityID AS ID, `org1`.Name AS Name FROM `wasdf`
 
 LEFT OUTER JOIN `org` AS org1 
   ON (`wasdf`.DisposalFacilityID = `org1`.OrganizationID )
 LEFT OUTER JOIN `was` AS was1 
   ON (`wasdf`.WasteID = `was1`.WasteID )
WHERE wasdf._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:303:"SELECT 
`wasdf`.WasteDisposalFacilityID AS ID, `org1`.Name AS Name FROM `wasdf`
 
 LEFT OUTER JOIN `org` AS org1 
   ON (`wasdf`.DisposalFacilityID = `org1`.OrganizationID )
 LEFT OUTER JOIN `was` AS was1 
   ON (`wasdf`.WasteID = `was1`.WasteID )

WHERE `wasdf`.WasteDisposalFacilityID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"wastf";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`was1`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:15:"WasteTransferID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:5:"wastf";s:6:"phrase";s:9:"Transfers";s:6:"number";i:1;s:6:"Fields";a:5:{s:16:"WasteTransporter";O:9:"viewfield":16:{s:4:"name";s:16:"WasteTransporter";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Waste Transporter|A combined field used to describe this waste transporter when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"TransferPerson";O:9:"viewfield":16:{s:4:"name";s:14:"TransferPerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Transfer Person|The name of the person transfering the waste to the transporter on behalf of the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"WasteShipDate";O:9:"viewfield":16:{s:4:"name";s:13:"WasteShipDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Shipment Date|The date the waste was shipped from the organization";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Revenue";O:9:"viewfield":16:{s:4:"name";s:7:"Revenue";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:193:"Revenue|An automatically calculated value based on the price per unit of this waste and the number of units shipped, stated in the currency established for the site installation of the software";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"WasteDisposalFacility";O:9:"viewfield":16:{s:4:"name";s:21:"WasteDisposalFacility";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Waste Disposal Facility|A combined field used to describe this waste disposal facility when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"wastf";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:106:"SELECT 
    count(*) 
FROM `wastf`
   
WHERE wastf._Deleted = 0
   AND `wastf`.WasteID = \'/**RecordID**/\'
";s:7:"listSQL";s:1299:"SELECT 
   `wastf`.WasteTransferID,
`was1`.OrganizationID AS WasteOrganizationID,
`org1`.Name AS WasteTransporter,
`ppl1`.DisplayName AS TransferPerson,
`dat1`.RelatedDate AS WasteShipDate,
`wastf`.Revenue,
`org2`.Name AS WasteDisposalFacility
FROM `wastf`

   LEFT OUTER JOIN `was` AS was1 
   ON (`wastf`.WasteID = `was1`.WasteID )
   LEFT OUTER JOIN `wastp` AS wastp1 
   ON (`wastf`.WasteTransporterID = `wastp1`.TransporterID )
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`wastf`.WasteTransferID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'wastf\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'92\')
   LEFT OUTER JOIN `dat` AS dat1 
    ON (`wastf`.WasteTransferID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'wastf\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'46\')
   LEFT OUTER JOIN `wasdf` AS wasdf1 
   ON (`wastf`.WasteDisposalFacilityID = `wasdf1`.WasteDisposalFacilityID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`wastp1`.TransporterID = `org1`.OrganizationID )
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
   LEFT OUTER JOIN `org` AS org2 
   ON (`wasdf1`.DisposalFacilityID = `org2`.OrganizationID )
WHERE wastf._Deleted = 0
AND `wastf`.WasteID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:7:"WasteID";s:9:"parentKey";s:7:"WasteID";s:8:"PKFields";a:1:{i:0;s:15:"WasteTransferID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');


    /**guidanceGrid**/

    $PKField = 'WasteID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Chemicals";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `was`.WasteID,
   `was`.WasteTypeID,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   `cod1`.Description AS WasteCategory,
   NULLIF(CONCAT(IFNULL(`wast1`.WasteTypeName,'')),'') AS WasteType,
   `was`.WasteName,
   `was`.WasteDesc,
   `cod2`.Description AS WasteGenerationMethod,
   `was`.Solid,
   `was`.Liquid,
   `was`.Gas,
   `was`.ChemicalInvolved,
   NULLIF(CONCAT(IFNULL(`chm1`.CommonName,''),' | CAS: ',IFNULL(`chm1`.CASNumber,'')),' | CAS: ') AS Chemical,
   `was`.SystemProcessInvolved,
   NULLIF(CONCAT(IFNULL(`sys1`.SystemName,'')),'') AS System,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS AmtGenYearUnits,
   `was`.AmtGenYear,
   `was`.LocalWasteIDs,
   `was`.OrgWasteIDs,
   `was`.LocalDisposalPractice,
   `opt1`.TotalEstOpp AS TotalEstOpp,
   `cosex1`.TotalEstExp AS TotalEstExp,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`wast1`.WasteTypeName,'')),''),''),' | ',IFNULL(`was`.WasteName,''),' | ',IFNULL(`org1`.Name,'')),' |  | ') AS RecordLabel,
   `was`.OrganizationID
FROM `was`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`was`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`was`.WasteID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'was'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '91')
     LEFT OUTER JOIN `wast` AS wast1 
   ON (`was`.WasteTypeID = `wast1`.WasteTypeID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`was`.WasteGenerationMethodID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '14')
     LEFT OUTER JOIN `chm` AS chm1 
   ON (`was`.ChemicalID = `chm1`.ChemicalID )
     LEFT OUTER JOIN `sys` AS sys1 
   ON (`was`.SystemID = `sys1`.SystemID )
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`was`.AmtGenYearUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN (SELECT 
SUM(ROUND(`opt`.Estimate, 2)) AS TotalEstOpp,
`opt`.RelatedRecordID FROM `opt` 
 WHERE `opt`._Deleted = 0 
 AND RelatedModuleID = 'was' 
 AND 'was' = `opt`.RelatedModuleID
GROUP BY `opt`.RelatedRecordID 
) AS opt1 
ON (`was`.WasteID = opt1.RelatedRecordID) 
     LEFT OUTER JOIN (SELECT 
SUM(ROUND(`cosex`.Estimate, 2)) AS TotalEstExp,
`cosex`.RelatedRecordID FROM `cosex` 
 WHERE `cosex`._Deleted = 0 
 AND RelatedModuleID = 'was' 
 AND 'was' = `cosex`.RelatedModuleID
GROUP BY `cosex`.RelatedRecordID 
) AS cosex1 
ON (`was`.WasteID = cosex1.RelatedRecordID) 
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`wast1`.WasteCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '13')
WHERE
   was.WasteID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Waste Stream");
        $screenPhrase = gettext("Transfers|Associate waste transfer activities with the waste stream");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Waste Tracking");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'WasteID' => gettext("Waste ID|An automatically assigned number used to track chemical waste associated with this chemical"),
   'WasteTypeID' => gettext("Waste Type|A combined field used to describe this waste disposal type when associating it with other records"),
   'Organization' => gettext("Organization|The name of the organization responsible for generating the waste"),
   'PersonAccountable' => gettext("Person Accountable|The individual assigned primary accountability for managing this waste stream"),
   'WasteCategory' => gettext("Category|A broad category used to group waste streams of similar types"),
   'WasteType' => gettext("Waste Type|A combined field used to describe this waste disposal type when associating it with other records"),
   'WasteName' => gettext("Waste Name|The name used to identify the waste stream"),
   'WasteDesc' => gettext("Waste Description|A detailed description of the waste stream being tracked"),
   'WasteGenerationMethod' => gettext("Waste Generation Method|The method by which the waste stream was generated"),
   'Solid' => gettext("Solid|Check this box if this waste is present on site as a solid"),
   'Liquid' => gettext("Liquid|Check this box if this waste is present on site as a liquid"),
   'Gas' => gettext("Gas|Check this box if this waste is present on site as a gas"),
   'ChemicalInvolved' => gettext("Chemical Involved|Whether this waste stream involves a chemical"),
   'Chemical' => gettext("Primary Chemical|A combined field used to describe this chemical when associating it with other records"),
   'SystemProcessInvolved' => gettext("System or Process Involved|Whether this waste stream is the result of a system or process"),
   'System' => gettext("Primary System|A combined field used to describe this system when associating it with other records"),
   'AmtGenYear' => gettext("Amount Generated Per Year|The amount of waste generated by this chemical per year"),
   'LocalWasteIDs' => gettext("Local Waste IDs|Local regulatory waste identification numbers. Numbers should be separated by commas"),
   'OrgWasteIDs' => gettext("Organizational Waste IDs|Organizational regulatory waste identification numbers. Numbers should be separated by commas"),
   'LocalDisposalPractice' => gettext("Local Disposal Practice|A detailed description of the waste disposal practices associated with this chemical at this organization"),
   'TotalEstOpp' => gettext("Estimated Opportunity|The total estimated financial opportunity associated with the waste stream"),
   'TotalEstExp' => gettext("Estimated Exposure|The total estimated cost exposure associated with the waste stream")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**-remove_begin-**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        


        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**-remove_end-**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Waste Streams"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Waste Stream") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a waste stream") );
      $tempTabs['Systems'] = array( "edit.php?scr=Systems&$tabsQS", gettext("Systems|Associate systems with the waste stream") );
      $tempTabs['Storage'] = array( "edit.php?scr=Storage&$tabsQS", gettext("Storage|Associate storage locations and methods with the waste stream") );
      $tempTabs['Transporters'] = array( "edit.php?scr=Transporters&$tabsQS", gettext("Transporters|Associate waste transporters with the waste stream") );
      $tempTabs['Disposal'] = array( "edit.php?scr=Disposal&$tabsQS", gettext("Disposal Facilities|Associate waste disposal facilities with the waste stream") );
      $tempTabs['Transfers'] = array( "", gettext("Transfers|Associate waste transfer activities with the waste stream") );
      $tempTabs['Chemicals'] = array( "edit.php?scr=Chemicals&$tabsQS", gettext("Chemicals|Associate chemicals with the waste stream") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate business agreements and/or contracts with the waste stream") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate asset protection methods and criteria with the waste stream") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Exposures|Associate cost exposures with the waste stream") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the waste stream") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate general hazards with the waste stream") );
      $tempTabs['Permits'] = array( "edit.php?scr=Permits&$tabsQS", gettext("Permits|Permits associated with the waste stream") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the waste stream") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate consensus and compliance standards with the waste stream") );
      $tempTabs['BusinessContinuation'] = array( "edit.php?scr=BusinessContinuation&$tabsQS", gettext("Continuity|Associate business continuation requirements with the waste stream") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the waste stream") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the waste stream") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the waste stream") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the waste stream") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with the waste stream") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the waste stream") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Transfers'] = array( "", gettext("New Waste Stream") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>