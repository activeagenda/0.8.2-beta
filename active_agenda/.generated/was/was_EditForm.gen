<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:22:{s:7:"WasteID";O:9:"viewfield":16:{s:4:"name";s:7:"WasteID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Waste ID|An automatically assigned number used to track chemical waste associated with this chemical";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"WasteCategoryID";O:14:"codecombofield":27:{s:4:"name";s:15:"WasteCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'13\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'13\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:11:"WasteTypeID";a:2:{s:4:"name";s:11:"WasteTypeID";s:15:"listParentField";s:15:"WasteCategoryID";}}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"13";}s:11:"WasteTypeID";O:10:"combofield":26:{s:4:"name";s:11:"WasteTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"wast";s:10:"foreignKey";s:11:"WasteTypeID";s:12:"foreignField";s:9:"WasteType";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:184:"SELECT 
`wast`.WasteTypeID AS ID, NULLIF(CONCAT(IFNULL(`wast`.WasteTypeName,\'\')),\'\') AS Name, `wast`.WasteCategoryID AS ParentID FROM `wast`
WHERE wast._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:183:"SELECT 
`wast`.WasteTypeID AS ID, NULLIF(CONCAT(IFNULL(`wast`.WasteTypeName,\'\')),\'\') AS Name, `wast`.WasteCategoryID AS ParentID FROM `wast`

WHERE `wast`.WasteTypeID = \'/*recordID*/\'";s:11:"parentField";s:15:"WasteCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:13:"WasteTypeDesc";a:1:{s:4:"name";s:13:"WasteTypeDesc";}}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:9:"WasteName";O:9:"editfield":14:{s:4:"name";s:9:"WasteName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:13:"WasteTypeDesc";O:9:"viewfield":16:{s:4:"name";s:13:"WasteTypeDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:54:"Description|A detailed description of the waste stream";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:11:"WasteTypeID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:9:"WasteDesc";O:9:"memofield":15:{s:4:"name";s:9:"WasteDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:23:"WasteGenerationMethodID";O:14:"codecombofield":27:{s:4:"name";s:23:"WasteGenerationMethodID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'14\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'14\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"14";}s:16:"ChemicalInvolved";O:13:"checkboxfield":14:{s:4:"name";s:16:"ChemicalInvolved";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:22:"ChemicalOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:22:"ChemicalOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"ChemicalID";a:1:{s:4:"name";s:10:"ChemicalID";}}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:10:"ChemicalID";O:10:"combofield":26:{s:4:"name";s:10:"ChemicalID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"chm";s:10:"foreignKey";s:10:"ChemicalID";s:12:"foreignField";s:8:"Chemical";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:220:"SELECT 
`chm`.ChemicalID AS ID, NULLIF(CONCAT(IFNULL(`chm`.CommonName,\'\'),\' | CAS: \',IFNULL(`chm`.CASNumber,\'\')),\' | CAS: \') AS Name, `chm`.OrganizationID AS ParentID FROM `chm`
WHERE chm._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:218:"SELECT 
`chm`.ChemicalID AS ID, NULLIF(CONCAT(IFNULL(`chm`.CommonName,\'\'),\' | CAS: \',IFNULL(`chm`.CASNumber,\'\')),\' | CAS: \') AS Name, `chm`.OrganizationID AS ParentID FROM `chm`

WHERE `chm`.ChemicalID = \'/*recordID*/\'";s:11:"parentField";s:22:"ChemicalOrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`chm`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:21:"SystemProcessInvolved";O:13:"checkboxfield":14:{s:4:"name";s:21:"SystemProcessInvolved";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:20:"SystemOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:20:"SystemOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:16:"SystemLocationID";a:1:{s:4:"name";s:16:"SystemLocationID";}}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:16:"SystemLocationID";O:10:"combofield":26:{s:4:"name";s:16:"SystemLocationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgl";s:10:"foreignKey";s:10:"LocationID";s:12:"foreignField";s:8:"Location";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:371:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE orgl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:369:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `orgl`.LocationID = \'/*recordID*/\'";s:11:"parentField";s:20:"SystemOrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:8:"SystemID";a:1:{s:4:"name";s:8:"SystemID";}}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`orgl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:8:"SystemID";O:10:"combofield":26:{s:4:"name";s:8:"SystemID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"sys";s:10:"foreignKey";s:8:"SystemID";s:12:"foreignField";s:6:"System";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:332:"SELECT 
`sys`.SystemID AS ID, NULLIF(CONCAT(IFNULL(`sys`.SystemName,\'\')),\'\') AS Name, `orgla1`.LocationID AS ParentID FROM `sys`
 
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`sys`.SystemID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'sys\'
     AND `orgla1`._Deleted = 0)
WHERE sys._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:328:"SELECT 
`sys`.SystemID AS ID, NULLIF(CONCAT(IFNULL(`sys`.SystemName,\'\')),\'\') AS Name, `orgla1`.LocationID AS ParentID FROM `sys`
 
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`sys`.SystemID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'sys\'
     AND `orgla1`._Deleted = 0)

WHERE `sys`.SystemID = \'/*recordID*/\'";s:11:"parentField";s:16:"SystemLocationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`sys`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:5:"Solid";O:13:"checkboxfield":14:{s:4:"name";s:5:"Solid";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:6:"Liquid";O:13:"checkboxfield":14:{s:4:"name";s:6:"Liquid";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:3:"Gas";O:13:"checkboxfield":14:{s:4:"name";s:3:"Gas";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:10:"AmtGenYear";O:9:"editfield":14:{s:4:"name";s:10:"AmtGenYear";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:24:"AmtGenYearUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:24:"AmtGenYearUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:17:"AmtGenYearUnitsID";a:1:{s:4:"name";s:17:"AmtGenYearUnitsID";}}s:8:"moduleID";s:3:"was";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:17:"AmtGenYearUnitsID";O:10:"combofield":26:{s:4:"name";s:17:"AmtGenYearUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:24:"AmtGenYearUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"was";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:27:"Number notEmpty notNegative";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"20";s:9:"maxLength";s:2:"20";s:5:"align";s:4:"left";}s:18:"DisposalApproachID";O:14:"codecombofield":27:{s:4:"name";s:18:"DisposalApproachID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'264\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'264\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"was";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"264";}s:21:"LocalDisposalPractice";O:9:"memofield":15:{s:4:"name";s:21:"LocalDisposalPractice";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Waste Stream");

//field value array
$data = array(
        'WasteID' => '',
         'WasteCategoryID' => '',
         'WasteTypeID' => '',
         'WasteName' => '',
         'WasteTypeDesc' => '',
         'WasteDesc' => '',
         'OrganizationID' => '',
         'PersonAccountableID' => '',
         'WasteGenerationMethodID' => '',
         'ChemicalInvolved' => '',
         'ChemicalOrganizationID' => '',
         'ChemicalID' => '',
         'SystemProcessInvolved' => '',
         'SystemOrganizationID' => '',
         'SystemLocationID' => '',
         'SystemID' => '',
         'Solid' => '',
         'Liquid' => '',
         'Gas' => '',
         'AmtGenYearUnitCategoryID' => '',
         'AmtGenYearUnitsID' => '',
         'AmtGenYear' => '',
         'DisposalApproachID' => '',
         'LocalDisposalPractice' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'WasteID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Systems";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `was`.WasteID,
   `cod1`.Description AS WasteCategory,
   `wast1`.WasteCategoryID AS WasteCategoryID,
   NULLIF(CONCAT(IFNULL(`wast1`.WasteTypeName,'')),'') AS WasteType,
   `was`.WasteTypeID,
   `was`.WasteName,
   `wast1`.WasteTypeDesc AS WasteTypeDesc,
   `was`.WasteDesc,
   `org1`.Name AS Organization,
   `was`.OrganizationID,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `cod2`.Description AS WasteGenerationMethod,
   `was`.WasteGenerationMethodID,
   `was`.ChemicalInvolved,
   `org2`.Name AS ChemicalOrganization,
   `chm1`.OrganizationID AS ChemicalOrganizationID,
   NULLIF(CONCAT(IFNULL(`chm1`.CommonName,''),' | CAS: ',IFNULL(`chm1`.CASNumber,'')),' | CAS: ') AS Chemical,
   `was`.ChemicalID,
   `was`.SystemProcessInvolved,
   `org3`.Name AS SystemOrganization,
   `sys1`.OrganizationID AS SystemOrganizationID,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS SystemLocation,
   `orgla1`.LocationID AS SystemLocationID,
   NULLIF(CONCAT(IFNULL(`sys1`.SystemName,'')),'') AS System,
   `was`.SystemID,
   `was`.Solid,
   `was`.Liquid,
   `was`.Gas,
   `cod4`.Description AS AmtGenYearUnitCategory,
   `uts1`.UnitCategoryID AS AmtGenYearUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS AmtGenYearUnits,
   `was`.AmtGenYearUnitsID,
   `was`.AmtGenYear,
   `cod3`.Description AS DisposalApproach,
   `was`.DisposalApproachID,
   `was`.LocalDisposalPractice,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`wast1`.WasteTypeName,'')),''),''),' | ',IFNULL(`was`.WasteName,''),' | ',IFNULL(`org1`.Name,'')),' |  | ') AS RecordLabel
FROM `was`
   
     LEFT OUTER JOIN `wast` AS wast1 
   ON (`was`.WasteTypeID = `wast1`.WasteTypeID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`was`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`was`.WasteID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'was'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '91')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`was`.WasteGenerationMethodID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '14')
     LEFT OUTER JOIN `chm` AS chm1 
   ON (`was`.ChemicalID = `chm1`.ChemicalID )
     LEFT OUTER JOIN `sys` AS sys1 
   ON (`was`.SystemID = `sys1`.SystemID )
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`was`.AmtGenYearUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`was`.DisposalApproachID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '264')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`wast1`.WasteCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '13')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`chm1`.OrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `org` AS org3 
   ON (`sys1`.OrganizationID = `org3`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`sys1`.SystemID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'sys'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`uts1`.UnitCategoryID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '37')
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   was.WasteID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Waste Stream");
        $screenPhrase = gettext("Form|Edit summary information about a waste stream");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Waste Tracking");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'WasteID' => gettext("Waste ID|An automatically assigned number used to track chemical waste associated with this chemical"),
   'WasteCategoryID' => gettext("Category|A broad category used to group waste streams of similar types"),
   'WasteTypeID' => gettext("Waste Type|A combined field used to describe this waste disposal type when associating it with other records"),
   'WasteName' => gettext("Waste Name|The name used to identify the waste stream"),
   'WasteTypeDesc' => gettext("Description|A detailed description of the waste stream"),
   'WasteDesc' => gettext("Waste Description|A detailed description of the waste stream being tracked"),
   'OrganizationID' => gettext("Organization|The name of the organization responsible for generating the waste"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for managing this waste stream"),
   'WasteGenerationMethodID' => gettext("Waste Generation Method|The method by which the waste stream was generated"),
   'ChemicalInvolved' => gettext("Chemical Involved|Whether this waste stream involves a chemical"),
   'ChemicalOrganizationID' => gettext("Primary Chemical Organization|The organization with primary responsibility for chemical oversight for this specific chemical throughout the organization"),
   'ChemicalID' => gettext("Primary Chemical|A combined field used to describe this chemical when associating it with other records"),
   'SystemProcessInvolved' => gettext("System or Process Involved|Whether this waste stream is the result of a system or process"),
   'SystemOrganizationID' => gettext("Primary System Organization|The name of the organization where the system or process exists"),
   'SystemLocationID' => gettext("System Location|Specific location within the facility where the system is located"),
   'SystemID' => gettext("Primary System|A combined field used to describe this system when associating it with other records"),
   'Solid' => gettext("Solid|Check this box if this waste is present on site as a solid"),
   'Liquid' => gettext("Liquid|Check this box if this waste is present on site as a liquid"),
   'Gas' => gettext("Gas|Check this box if this waste is present on site as a gas"),
   'AmtGenYear' => gettext("Amount Generated Per Year|The amount of waste generated by this chemical per year"),
   'DisposalApproachID' => gettext("Disposal Approach|A method of classifying and tracking methods of waste disposal"),
   'LocalDisposalPractice' => gettext("Local Disposal Practice|A detailed description of the waste disposal practices associated with this chemical at this organization")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['WasteName'], ShortPhrase($phrases['WasteName']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['WasteName']->invalid = TRUE;
            }
$vMsg = Validate($data['WasteDesc'], ShortPhrase($phrases['WasteDesc']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['WasteDesc']->invalid = TRUE;
            }
$vMsg = Validate($data['OrganizationID'], ShortPhrase($phrases['OrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['OrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['WasteGenerationMethodID'], ShortPhrase($phrases['WasteGenerationMethodID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['WasteGenerationMethodID']->invalid = TRUE;
            }
$vMsg = Validate($data['ChemicalInvolved'], ShortPhrase($phrases['ChemicalInvolved']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ChemicalInvolved']->invalid = TRUE;
            }
$vMsg = Validate($data['ChemicalID'], ShortPhrase($phrases['ChemicalID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ChemicalID']->invalid = TRUE;
            }
$vMsg = Validate($data['SystemProcessInvolved'], ShortPhrase($phrases['SystemProcessInvolved']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SystemProcessInvolved']->invalid = TRUE;
            }
$vMsg = Validate($data['SystemID'], ShortPhrase($phrases['SystemID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SystemID']->invalid = TRUE;
            }
$vMsg = Validate($data['Solid'], ShortPhrase($phrases['Solid']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Solid']->invalid = TRUE;
            }
$vMsg = Validate($data['Liquid'], ShortPhrase($phrases['Liquid']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Liquid']->invalid = TRUE;
            }
$vMsg = Validate($data['Gas'], ShortPhrase($phrases['Gas']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Gas']->invalid = TRUE;
            }
$vMsg = Validate($data['AmtGenYear'], ShortPhrase($phrases['AmtGenYear']), 'Number notEmpty notNegative');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AmtGenYear']->invalid = TRUE;
            }
$vMsg = Validate($data['DisposalApproachID'], ShortPhrase($phrases['DisposalApproachID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['DisposalApproachID']->invalid = TRUE;
            }
$vMsg = Validate($data['LocalDisposalPractice'], ShortPhrase($phrases['LocalDisposalPractice']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['LocalDisposalPractice']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Waste Streams"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Waste Stream") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about a waste stream") );
      $tempTabs['Systems'] = array( "edit.php?scr=Systems&$tabsQS", gettext("Systems|Associate systems with the waste stream") );
      $tempTabs['Storage'] = array( "edit.php?scr=Storage&$tabsQS", gettext("Storage|Associate storage locations and methods with the waste stream") );
      $tempTabs['Transporters'] = array( "edit.php?scr=Transporters&$tabsQS", gettext("Transporters|Associate waste transporters with the waste stream") );
      $tempTabs['Disposal'] = array( "edit.php?scr=Disposal&$tabsQS", gettext("Disposal Facilities|Associate waste disposal facilities with the waste stream") );
      $tempTabs['Transfers'] = array( "edit.php?scr=Transfers&$tabsQS", gettext("Transfers|Associate waste transfer activities with the waste stream") );
      $tempTabs['Chemicals'] = array( "edit.php?scr=Chemicals&$tabsQS", gettext("Chemicals|Associate chemicals with the waste stream") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate business agreements and/or contracts with the waste stream") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate asset protection methods and criteria with the waste stream") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Exposures|Associate cost exposures with the waste stream") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the waste stream") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate general hazards with the waste stream") );
      $tempTabs['Permits'] = array( "edit.php?scr=Permits&$tabsQS", gettext("Permits|Permits associated with the waste stream") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the waste stream") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate consensus and compliance standards with the waste stream") );
      $tempTabs['BusinessContinuation'] = array( "edit.php?scr=BusinessContinuation&$tabsQS", gettext("Continuity|Associate business continuation requirements with the waste stream") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the waste stream") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the waste stream") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the waste stream") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the waste stream") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with the waste stream") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the waste stream") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Waste Stream") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>