<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:19:{s:14:"EmergContactID";O:9:"viewfield":16:{s:4:"name";s:14:"EmergContactID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Contact ID|A unique number assigned to each emergency contact for each employee";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"_ModDate";O:9:"viewfield":16:{s:4:"name";s:8:"_ModDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:11:"Modified On";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Organization|The organization the employee reports to";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"EmployeePerson";O:9:"viewfield":16:{s:4:"name";s:14:"EmployeePerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Employee|A combined field used to describe this employee when associating her/him with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"ContactLastName";O:9:"viewfield":16:{s:4:"name";s:15:"ContactLastName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:46:"Last Name|Family name of the emergency contact";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ContactFirstName";O:9:"viewfield":16:{s:4:"name";s:16:"ContactFirstName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:46:"First Name|Given name of the emergency contact";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ContactMiddleName";O:9:"viewfield":16:{s:4:"name";s:17:"ContactMiddleName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:48:"Middle Name|Middle name of the emergency contact";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Relationship";O:9:"viewfield":16:{s:4:"name";s:12:"Relationship";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Relationship|The relationship between the emergency contact and the employee";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"ContactAddress1";O:9:"viewfield":16:{s:4:"name";s:15:"ContactAddress1";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Address 1|First physical street address of the location where the individual lives";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"ContactAddress2";O:9:"viewfield":16:{s:4:"name";s:15:"ContactAddress2";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Address 2|Second physical street address where the individual lives; such as, apartment number";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"ContactCity";O:9:"viewfield":16:{s:4:"name";s:11:"ContactCity";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:36:"City|City where the individual lives";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ContactState";O:9:"viewfield":16:{s:4:"name";s:12:"ContactState";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"State|A combined field used to associate this state with another record";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ContactPostalCode";O:9:"viewfield":16:{s:4:"name";s:17:"ContactPostalCode";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Postal Code|Postal code used to direct mail to the individual\'s home address";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ContactCountry";O:9:"viewfield":16:{s:4:"name";s:14:"ContactCountry";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Country|A combined field used to associate this country with another record";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ContactPhone";O:9:"viewfield":16:{s:4:"name";s:12:"ContactPhone";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:48:"Phone|Telephone number of the individual at home";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"ContactAltPhone";O:9:"viewfield":16:{s:4:"name";s:15:"ContactAltPhone";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Alternate Phone|Alternate telephone number where the person can also be reached";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"ContactFax";O:9:"viewfield":16:{s:4:"name";s:10:"ContactFax";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Contact Fax|Facsimile telephone number of the individual at home";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ContactEmail";O:9:"viewfield":16:{s:4:"name";s:12:"ContactEmail";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:58:"Contact Email|Email address used by the individual at home";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"ContactPriority";O:9:"viewfield":16:{s:4:"name";s:15:"ContactPriority";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Priority Level|A number that indicates the priority in which attempts to make contact are to be made";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'EmergContactID' => gettext("Contact ID|A unique number assigned to each emergency contact for each employee"),
   '_ModDate' => gettext("Modified On"),
   'Organization' => gettext("Organization|The organization the employee reports to"),
   'EmployeePerson' => gettext("Employee|A combined field used to describe this employee when associating her/him with other records"),
   'ContactLastName' => gettext("Last Name|Family name of the emergency contact"),
   'ContactFirstName' => gettext("First Name|Given name of the emergency contact"),
   'ContactMiddleName' => gettext("Middle Name|Middle name of the emergency contact"),
   'Relationship' => gettext("Relationship|The relationship between the emergency contact and the employee"),
   'ContactAddress1' => gettext("Address 1|First physical street address of the location where the individual lives"),
   'ContactAddress2' => gettext("Address 2|Second physical street address where the individual lives; such as, apartment number"),
   'ContactCity' => gettext("City|City where the individual lives"),
   'ContactState' => gettext("State|A combined field used to associate this state with another record"),
   'ContactPostalCode' => gettext("Postal Code|Postal code used to direct mail to the individual's home address"),
   'ContactCountry' => gettext("Country|A combined field used to associate this country with another record"),
   'ContactPhone' => gettext("Phone|Telephone number of the individual at home"),
   'ContactAltPhone' => gettext("Alternate Phone|Alternate telephone number where the person can also be reached"),
   'ContactFax' => gettext("Contact Fax|Facsimile telephone number of the individual at home"),
   'ContactEmail' => gettext("Contact Email|Email address used by the individual at home"),
   'ContactPriority' => gettext("Priority Level|A number that indicates the priority in which attempts to make contact are to be made")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `pplem`.EmergContactID,
   `pplem`._ModDate,
   `org1`.Name AS Organization,
   NULLIF(CONCAT(IFNULL(`ppl2`.LastName,''),', ',IFNULL(`ppl2`.FirstName,'')),', ') AS EmployeePerson,
   `pplem`.ContactLastName,
   `pplem`.ContactFirstName,
   `pplem`.ContactMiddleName,
   `cod1`.Description AS Relationship,
   `pplem`.ContactAddress1,
   `pplem`.ContactAddress2,
   `pplem`.ContactCity,
   NULLIF(CONCAT(IFNULL(`sta1`.StateName,''),' (',IFNULL(`sta1`.StateAbbreviation,''),')'),' ()') AS ContactState,
   `pplem`.ContactPostalCode,
   NULLIF(CONCAT(IFNULL(`ctr1`.CountryName,''),' (',IFNULL(`ctr1`.CountryAbbreviation,''),')'),' ()') AS ContactCountry,
   `pplem`.ContactPhone,
   `pplem`.ContactAltPhone,
   `pplem`.ContactFax,
   `pplem`.ContactEmail,
   `pplem`.ContactPriority,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ppl2`.LastName,''),', ',IFNULL(`ppl2`.FirstName,'')),', '),''),' | ',IFNULL(`pplem`.ContactFirstName,''),' ',IFNULL(`pplem`.ContactLastName,''),' | ',IFNULL(`cod1`.Description,'')),' |   | ') AS RecordLabel,
   `ppl1`.OrganizationID AS OrganizationID
FROM `pplem`
   
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`pplem`.EmployeePersonID = `ppl1`.PersonID )
     LEFT OUTER JOIN `pple` AS pple1 
   ON (`pplem`.EmployeePersonID = `pple1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`pplem`.RelationshipID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '270')
     LEFT OUTER JOIN `sta` AS sta1 
   ON (`pplem`.ContactStateID = `sta1`.StateID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`ppl1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`pple1`.PersonID = `ppl2`.PersonID )
     LEFT OUTER JOIN `ctr` AS ctr1 
   ON (`sta1`.CountryID = `ctr1`.CountryID )
WHERE
   pplem.EmergContactID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Emergency Contacts"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Emergency Contact") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about an employee emergency contact") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Emergency Contact") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Emergency Contact") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Emergency Contact");
    $screenPhrase = gettext("View|View summary information about an employee emergency contact");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
