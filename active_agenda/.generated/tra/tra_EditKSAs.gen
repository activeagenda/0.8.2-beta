<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:12:{s:8:"CourseID";O:9:"viewfield":16:{s:4:"name";s:8:"CourseID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Record ID|An automatically assigned number used to track training courses available to the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"TrainingTypeID";O:14:"invisiblefield":11:{s:4:"name";s:14:"TrainingTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:10:"CourseCode";O:9:"viewfield":16:{s:4:"name";s:10:"CourseCode";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:156:"Course Code|A unique code used to identify a course offering. A course code can include numbers, letters and special characters; such as, dashes and periods";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"CourseTitle";O:9:"viewfield":16:{s:4:"name";s:11:"CourseTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Title|A brief name used to identify the course offering";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"CourseDesc";O:9:"viewfield":16:{s:4:"name";s:10:"CourseDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:48:"Description|A detailed description of the course";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"CourseObj";O:9:"viewfield":16:{s:4:"name";s:9:"CourseObj";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:157:"Objective|A detailed description of the course objective. The course objective should reflect the knowledge expected of attendees as they complete the course";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"TrainingCategory";O:9:"viewfield":16:{s:4:"name";s:16:"TrainingCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Training Category|A word or short phrase used to describe the category of training";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"TrainingType";O:9:"viewfield":16:{s:4:"name";s:12:"TrainingType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Training Type|A combined field used to describe this training type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"TrainingTypeDesc";O:9:"viewfield":16:{s:4:"name";s:16:"TrainingTypeDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Training Type Description|A detailed description of the training type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"CourseDuration";O:9:"viewfield":16:{s:4:"name";s:14:"CourseDuration";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:57:"Course Duration|The duration of the course when presented";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ValidityPeriod";O:9:"viewfield":16:{s:4:"name";s:14:"ValidityPeriod";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Validity Period|The amount of time that may pass before the training course satisfaction is no longer valid";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"CoursePrep";O:9:"viewfield":16:{s:4:"name";s:10:"CoursePrep";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Preparation|A detailed description of the preparation required by attendees of the course in advance of class attendance";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Training Course");

//field value array
$data = array(
        'CourseID' => '',
         'TrainingTypeID' => '',
         'CourseCode' => '',
         'CourseTitle' => '',
         'CourseDesc' => '',
         'CourseObj' => '',
         'TrainingCategory' => '',
         'TrainingType' => '',
         'TrainingTypeDesc' => '',
         'CourseDuration' => '',
         'ValidityPeriod' => '',
         'CoursePrep' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:1052:"SELECT 
   `trak`.TrainingKSAID,
   NULLIF(CONCAT(IFNULL(`ksasc1`.CapabilityTitle,\'\'),\' (\',IFNULL(`ksasc1`.CapabilityAbbr,\'\'),\')\'),\' ()\') AS Capability,
   `ksa1`.CapabilityID AS CapabilityID,
   NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,
   `trak`.KSAID,
   `ksa1`.KSADesc AS KSADesc,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ksa2`.KSATitle,\'\'),\' (\',IFNULL(`ksa2`.KSAAbbr,\'\'),\')\'),\' ()\'),\'\'),\' - \',IFNULL(`cod2`.Description,\'\')),\' - \') AS Level,
   `trak`.LevelID,
   `ksal1`.KSALevelDesc AS KSALevelDesc
FROM `trak`
   
     LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`trak`.KSAID = `ksa1`.KSAID )
     LEFT OUTER JOIN `ksal` AS ksal1 
   ON (`trak`.LevelID = `ksal1`.LevelID )
     LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa1`.CapabilityID = `ksasc1`.CapabilityID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`ksal1`.KSALevelID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'267\')
     LEFT OUTER JOIN `ksa` AS ksa2 
   ON (`ksal1`.KSAID = `ksa2`.KSAID )
WHERE
   trak.TrainingKSAID=\'/**RowID**/\'";s:9:"getRowSQL";s:783:"SELECT 
   `trak`.TrainingKSAID,
   NULLIF(CONCAT(IFNULL(`ksasc1`.CapabilityTitle,\'\'),\' (\',IFNULL(`ksasc1`.CapabilityAbbr,\'\'),\')\'),\' ()\') AS Capability,
   NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,
   CONCAT(\'internal:view.php?mdl=\',\'ksal\',\'&rid=\',`trak`.LevelID) AS KSALevelLink,
   `cod1`.Description AS KSALevel
FROM `trak`
   
     LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`trak`.KSAID = `ksa1`.KSAID )
     LEFT OUTER JOIN `ksal` AS ksal1 
   ON (`trak`.LevelID = `ksal1`.LevelID )
     LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa1`.CapabilityID = `ksasc1`.CapabilityID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksal1`.KSALevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'267\')
WHERE
   trak.TrainingKSAID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:6:{s:13:"TrainingKSAID";O:14:"invisiblefield":11:{s:4:"name";s:13:"TrainingKSAID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Record ID|An automatically assigned number used to materials required to conduct a course with courses offered by the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"CapabilityID";O:10:"combofield":26:{s:4:"name";s:12:"CapabilityID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Capability|A combined field used to describe this strategic capability when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"ksasc";s:10:"foreignKey";s:12:"CapabilityID";s:12:"foreignField";s:10:"Capability";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:281:"SELECT 
`ksasc`.CapabilityID AS ID, NULLIF(CONCAT(IFNULL(`ksasc`.CapabilityTitle,\'\'),\' (\',IFNULL(`ksasc`.CapabilityAbbr,\'\'),\')\'),\' ()\') AS Name FROM `ksasc`
 
 LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc`.AreaID = `ksaae1`.AreaID )
WHERE ksasc._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:281:"SELECT 
`ksasc`.CapabilityID AS ID, NULLIF(CONCAT(IFNULL(`ksasc`.CapabilityTitle,\'\'),\' (\',IFNULL(`ksasc`.CapabilityAbbr,\'\'),\')\'),\' ()\') AS Name FROM `ksasc`
 
 LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc`.AreaID = `ksaae1`.AreaID )

WHERE `ksasc`.CapabilityID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:5:"KSAID";a:1:{s:4:"name";s:5:"KSAID";}}s:8:"moduleID";s:4:"trak";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:31:"`ksaae1`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:5:"KSAID";O:10:"combofield":26:{s:4:"name";s:5:"KSAID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"KSA|A combined field used to describe this KSA when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"ksa";s:10:"foreignKey";s:5:"KSAID";s:12:"foreignField";s:3:"KSA";s:13:"listCondition";N;s:14:"listConditions";a:1:{s:21:"QualificationMethodID";O:13:"listcondition":3:{s:4:"name";s:21:"QualificationMethodID";s:4:"mode";s:2:"in";s:6:"values";a:2:{i:0;s:3:"\'2\'";i:1;s:3:"\'3\'";}}}s:3:"SQL";s:417:"SELECT 
`ksa`.KSAID AS ID, NULLIF(CONCAT(IFNULL(`ksa`.KSATitle,\'\'),\' (\',IFNULL(`ksa`.KSAAbbr,\'\'),\')\'),\' ()\') AS Name, `ksa`.CapabilityID AS ParentID FROM `ksa`
 
 LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa`.CapabilityID = `ksasc1`.CapabilityID )
 LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc1`.AreaID = `ksaae1`.AreaID )
WHERE ksa._Deleted = 0
 AND `ksa`.QualificationMethodID IN (\'2\',\'3\')
 ORDER BY Name, ID;";s:6:"getSQL";s:364:"SELECT 
`ksa`.KSAID AS ID, NULLIF(CONCAT(IFNULL(`ksa`.KSATitle,\'\'),\' (\',IFNULL(`ksa`.KSAAbbr,\'\'),\')\'),\' ()\') AS Name, `ksa`.CapabilityID AS ParentID FROM `ksa`
 
 LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa`.CapabilityID = `ksasc1`.CapabilityID )
 LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc1`.AreaID = `ksaae1`.AreaID )

WHERE `ksa`.KSAID = \'/*recordID*/\'";s:11:"parentField";s:12:"CapabilityID";s:21:"parentListModuleField";N;s:11:"childFields";a:2:{s:7:"LevelID";a:1:{s:4:"name";s:7:"LevelID";}s:7:"KSADesc";a:1:{s:4:"name";s:7:"KSADesc";}}s:8:"moduleID";s:4:"trak";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:31:"`ksaae1`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:7:"KSADesc";O:9:"viewfield":16:{s:4:"name";s:7:"KSADesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"KSA Description|A brief phrase used to describe the knowldege, skill, and or ability";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:5:"KSAID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:7:"LevelID";O:10:"combofield":26:{s:4:"name";s:7:"LevelID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"KSA Level|A combined field used to describe this KSA level when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"ksal";s:10:"foreignKey";s:7:"LevelID";s:12:"foreignField";s:5:"Level";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:621:"SELECT 
`ksal`.LevelID AS ID, NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\'),\'\'),\' - \',IFNULL(`cod1`.Description,\'\')),\' - \') AS Name, `ksal`.KSAID AS ParentID FROM `ksal`
 
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksal`.KSALevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'267\')
 LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`ksal`.KSAID = `ksa1`.KSAID )
 LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa1`.CapabilityID = `ksasc1`.CapabilityID )
 LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc1`.AreaID = `ksaae1`.AreaID )
WHERE ksal._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:616:"SELECT 
`ksal`.LevelID AS ID, NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\'),\'\'),\' - \',IFNULL(`cod1`.Description,\'\')),\' - \') AS Name, `ksal`.KSAID AS ParentID FROM `ksal`
 
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksal`.KSALevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'267\')
 LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`ksal`.KSAID = `ksa1`.KSAID )
 LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa1`.CapabilityID = `ksasc1`.CapabilityID )
 LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc1`.AreaID = `ksaae1`.AreaID )

WHERE `ksal`.LevelID = \'/*recordID*/\'";s:11:"parentField";s:5:"KSAID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:12:"KSALevelDesc";a:1:{s:4:"name";s:12:"KSALevelDesc";}}s:8:"moduleID";s:4:"trak";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:31:"`ksaae1`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:12:"KSALevelDesc";O:9:"viewfield":16:{s:4:"name";s:12:"KSALevelDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"KSA Level Description|A brief but detailed description of knowldege, skill, and/or ability level";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:7:"LevelID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:13:"TrainingKSAID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"trak";s:6:"phrase";s:20:"Qualification Levels";s:6:"number";i:1;s:6:"Fields";a:4:{s:13:"TrainingKSAID";O:14:"invisiblefield":11:{s:4:"name";s:13:"TrainingKSAID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Record ID|An automatically assigned number used to materials required to conduct a course with courses offered by the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:10:"Capability";O:9:"viewfield":16:{s:4:"name";s:10:"Capability";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Capability|A combined field used to describe this strategic capability when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:3:"KSA";O:9:"viewfield":16:{s:4:"name";s:3:"KSA";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"KSA|A combined field used to describe this KSA when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"KSALevel";O:9:"viewfield":16:{s:4:"name";s:8:"KSALevel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:93:"KSA Level|A term or phrase used to distinguish levels of KSA achievement and/or qualification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:12:"KSALevelLink";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:104:"SELECT 
    count(*) 
FROM `trak`
   
WHERE trak._Deleted = 0
   AND `trak`.CourseID = \'/**RecordID**/\'
";s:7:"listSQL";s:783:"SELECT 
   `trak`.TrainingKSAID,
NULLIF(CONCAT(IFNULL(`ksasc1`.CapabilityTitle,\'\'),\' (\',IFNULL(`ksasc1`.CapabilityAbbr,\'\'),\')\'),\' ()\') AS Capability,
NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,
CONCAT(\'internal:view.php?mdl=\',\'ksal\',\'&rid=\',`trak`.LevelID) AS KSALevelLink,
`cod1`.Description AS KSALevel
FROM `trak`

   LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`trak`.KSAID = `ksa1`.KSAID )
   LEFT OUTER JOIN `ksal` AS ksal1 
   ON (`trak`.LevelID = `ksal1`.LevelID )
   LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa1`.CapabilityID = `ksasc1`.CapabilityID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksal1`.KSALevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'267\')
WHERE trak._Deleted = 0
AND `trak`.CourseID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:8:"CourseID";s:9:"parentKey";s:8:"CourseID";s:8:"PKFields";a:1:{i:0;s:13:"TrainingKSAID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');


    /**guidanceGrid**/

    $PKField = 'CourseID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Materials";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `tra`.CourseID,
   `tra`.TrainingTypeID,
   `tra`.CourseCode,
   `tra`.CourseTitle,
   `tra`.CourseDesc,
   `tra`.CourseObj,
   `cod1`.Description AS TrainingCategory,
   NULLIF(CONCAT(IFNULL(`cod2`.Description,''),' - ',IFNULL(`trat1`.TrainingTypeTitle,'')),' - ') AS TrainingType,
   `trat1`.TrainingTypeDesc AS TrainingTypeDesc,
   NULLIF(CONCAT(IFNULL(`tra`.Duration,''),' ',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),''),'')),' ') AS CourseDuration,
   NULLIF(CONCAT(IFNULL(`tra`.Validity,''),' ',IFNULL(NULLIF(CONCAT(IFNULL(`uts2`.UnitName,'')),''),'')),' ') AS ValidityPeriod,
   `tra`.CoursePrep,
   NULLIF(CONCAT(IFNULL(`tra`.CourseTitle,''),' | ',IFNULL(`cod3`.Description,''),' | ',IFNULL(`tra`.CourseCode,''),' | ',IFNULL(`org1`.Name,'')),' |  |  | ') AS RecordLabel,
   `tra`.OrganizationID
FROM `tra`
   
     LEFT OUTER JOIN `trat` AS trat1 
   ON (`tra`.TrainingTypeID = `trat1`.TrainingTypeID )
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`tra`.TimeUnitID = `uts1`.UnitID )
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`tra`.ValidityUnitID = `uts2`.UnitID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`tra`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`tra`.OrgLevelID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '22')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`trat1`.TrainingCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '59')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`trat1`.TrainingCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '59')
WHERE
   tra.CourseID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Training Course");
        $screenPhrase = gettext("Qualifications|Associate knowledge, skill, and experience qualification levels with the training course");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Training Courses");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'CourseID' => gettext("Record ID|An automatically assigned number used to track training courses available to the organization"),
   'TrainingTypeID' => gettext("Training Type|A combined field used to describe this training type when associating it with other records"),
   'CourseCode' => gettext("Course Code|A unique code used to identify a course offering. A course code can include numbers, letters and special characters; such as, dashes and periods"),
   'CourseTitle' => gettext("Title|A brief name used to identify the course offering"),
   'CourseDesc' => gettext("Description|A detailed description of the course"),
   'CourseObj' => gettext("Objective|A detailed description of the course objective. The course objective should reflect the knowledge expected of attendees as they complete the course"),
   'TrainingCategory' => gettext("Training Category|A word or short phrase used to describe the category of training"),
   'TrainingType' => gettext("Training Type|A combined field used to describe this training type when associating it with other records"),
   'TrainingTypeDesc' => gettext("Training Type Description|A detailed description of the training type"),
   'CourseDuration' => gettext("Course Duration|The duration of the course when presented"),
   'ValidityPeriod' => gettext("Validity Period|The amount of time that may pass before the training course satisfaction is no longer valid"),
   'CoursePrep' => gettext("Preparation|A detailed description of the preparation required by attendees of the course in advance of class attendance")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Training Courses"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Training Course") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a training course") );
      $tempTabs['Classes'] = array( "edit.php?scr=Classes&$tabsQS", gettext("Classes|Associate scheduled classes with a training course") );
      $tempTabs['KSAs'] = array( "", gettext("Qualifications|Associate knowledge, skill, and experience qualification levels with the training course") );
      $tempTabs['Materials'] = array( "edit.php?scr=Materials&$tabsQS", gettext("Materials|Associate training materials with the training course") );
      $tempTabs['Providers'] = array( "edit.php?scr=Providers&$tabsQS", gettext("Providers|Associate training providers with the training course") );
      $tempTabs['Instructors'] = array( "edit.php?scr=Instructors&$tabsQS", gettext("Instructors|Associate training instructors with the training course") );
      $tempTabs['Prerequisites'] = array( "edit.php?scr=Prerequisites&$tabsQS", gettext("Prerequisites|Associate course prerequisites with the training course") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate agreements with the training course") );
      $tempTabs['Audits'] = array( "edit.php?scr=Audits&$tabsQS", gettext("Audits|Associate audits with the training course") );
      $tempTabs['Consequences'] = array( "edit.php?scr=Consequences&$tabsQS", gettext("Consequences|Associate business consequences with the training course") );
      $tempTabs['BusinessContinuation'] = array( "edit.php?scr=BusinessContinuation&$tabsQS", gettext("Continuity|Associate business continuity requirements with the training course") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the training course") );
      $tempTabs['Equipment'] = array( "edit.php?scr=Equipment&$tabsQS", gettext("Equipment|Associate equipment with the training course") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the training course") );
      $tempTabs['Insurance'] = array( "edit.php?scr=Insurance&$tabsQS", gettext("Insurance|Associate insurance policies with the training course") );
      $tempTabs['JobTitles'] = array( "edit.php?scr=JobTitles&$tabsQS", gettext("Job Titles|Associate job titles with the training course") );
      $tempTabs['Permits'] = array( "edit.php?scr=Permits&$tabsQS", gettext("Permits|Associate operating permits with the training course") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the training course") );
      $tempTabs['Responsibilities'] = array( "edit.php?scr=Responsibilities&$tabsQS", gettext("Responsibilities|Associate level responsibilities with the training course") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the training course") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the training course") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the training course") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the training course") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with a training course") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with a training course") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with a training course") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['KSAs'] = array( "", gettext("New Course") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>