<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:10:{s:14:"MasterAssignID";O:9:"viewfield":16:{s:4:"name";s:14:"MasterAssignID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Record ID|An automatically assigned number used to associate organizations with meeting requirements";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"MasterMeetingID";O:14:"invisiblefield":11:{s:4:"name";s:15:"MasterMeetingID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:11:"MeetingType";O:9:"viewfield":16:{s:4:"name";s:11:"MeetingType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:42:"Meeting Type|The type of meeting conducted";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"MeetingTitle";O:9:"viewfield":16:{s:4:"name";s:12:"MeetingTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Meeting Title|A brief name used to identify the meeting";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Agenda";O:9:"viewfield":16:{s:4:"name";s:6:"Agenda";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:52:"Agenda|The stated purpose and agenda for the meeting";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Organization|The name of the organization assigned to conduct a meeting";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Person Accountable|The person accountable for ensuring the meeting occurs and satisfies the master meeting agenda";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"AssignmentDate";O:9:"viewfield":16:{s:4:"name";s:14:"AssignmentDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Assignment Date|Date the meeting was assigned to the local organization";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"AssignmentDetails";O:9:"viewfield":16:{s:4:"name";s:17:"AssignmentDetails";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:127:"Assignment Details|A description of any details associated with this meeting assignment; such as, scope, purpose and objectives";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:24:"MasterLeaderObservations";O:9:"viewfield":16:{s:4:"name";s:24:"MasterLeaderObservations";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:155:"Master Leader Observations|Detailed observations of the Master Leader regarding the local acceptance and implementation of the assigned meeting requirement";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Master Meeting Assignment");

//field value array
$data = array(
        'MasterAssignID' => '',
         'MasterMeetingID' => '',
         'MeetingType' => '',
         'MeetingTitle' => '',
         'Agenda' => '',
         'Organization' => '',
         'PersonAccountable' => '',
         'AssignmentDate' => '',
         'AssignmentDetails' => '',
         'MasterLeaderObservations' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[2] = unserialize('O:8:"editgrid":32:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:1216:"SELECT 
   `orgja`.JobTitleAssocID,
   `org1`.Name AS Organization,
   `orgjt1`.OrganizationID AS OrganizationID,
   `cod1`.Description AS Function,
   `orgjt1`.FunctionID AS FunctionID,
   NULLIF(CONCAT(IFNULL(`orgjt1`.JobTitleName,\'\')),\'\') AS OrgJobTitle,
   `orgja`.OrgJobTitleID,
   `cod2`.Description AS JobTitleCategory,
   NULLIF(CONCAT(IFNULL(`orgtt1`.JobTitleTypeTitle,\'\')),\'\') AS JobTitleType,
   `cod3`.Description AS LocalLevel,
   `orgjt1`.JobDescription AS JobDescription,
   `orgja`.MannerAffected
FROM `orgja`
   
     LEFT OUTER JOIN `orgjt` AS orgjt1 
   ON (`orgja`.OrgJobTitleID = `orgjt1`.OrgJobTitleID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`orgjt1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`orgjt1`.FunctionID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'4\')
     LEFT OUTER JOIN `orgtt` AS orgtt1 
   ON (`orgjt1`.JobTitleTypeID = `orgtt1`.JobTitleTypeID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`orgjt1`.LocalLevelID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = \'22\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`orgtt1`.JobTitleCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'20\')
WHERE
   orgja.JobTitleAssocID=\'/**RowID**/\'";s:9:"getRowSQL";s:433:"SELECT 
   `org1`.Name AS Organization,
   NULLIF(CONCAT(IFNULL(`orgjt1`.JobTitleName,\'\')),\'\') AS OrgJobTitle,
   `orgja`.MannerAffected,
   `orgjt1`.OrganizationID AS OrganizationID
FROM `orgja`
   
     LEFT OUTER JOIN `orgjt` AS orgjt1 
   ON (`orgja`.OrgJobTitleID = `orgjt1`.OrgJobTitleID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`orgjt1`.OrganizationID = `org1`.OrganizationID )
WHERE
   orgja.JobTitleAssocID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:9:{s:15:"JobTitleAssocID";O:14:"invisiblefield":11:{s:4:"name";s:15:"JobTitleAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Record ID|An automatically assigned number used to associate job titles with related records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Organization|The organization where this job title is utilized";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"FunctionID";a:1:{s:4:"name";s:10:"FunctionID";}}s:8:"moduleID";s:5:"orgja";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:10:"FunctionID";O:14:"codecombofield":27:{s:4:"name";s:10:"FunctionID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:48:"Function|The functional purpose of the job title";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:16:"CodeTypeID = \'4\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:318:"SELECT DISTINCT
`orgjt`.FunctionID AS ID, `cod1`.Description AS Name, `orgjt`.OrganizationID AS ParentID
FROM `orgjt`

LEFT OUTER JOIN `cod` AS cod1 
   ON (`orgjt`.FunctionID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'4\')
WHERE `orgjt`._Deleted = 0
AND `orgjt`.FunctionID IS NOT NULL
 ORDER BY Name, ID, ParentID;";s:6:"getSQL";s:268:"SELECT DISTINCT
`orgjt`.FunctionID AS ID, `cod1`.Description AS Name, `orgjt`.OrganizationID AS ParentID
FROM `orgjt`

LEFT OUTER JOIN `cod` AS cod1 
   ON (`orgjt`.FunctionID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'4\')
WHERE `orgjt`.FunctionID = \'/*recordID*/\'";s:11:"parentField";s:14:"OrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:13:"OrgJobTitleID";a:2:{s:4:"name";s:13:"OrgJobTitleID";s:15:"listParentField";s:10:"FunctionID";}}s:8:"moduleID";s:5:"orgja";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:1:"4";}s:13:"OrgJobTitleID";O:10:"combofield":26:{s:4:"name";s:13:"OrgJobTitleID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:122:"Job Title|A description of the job title based on a combination of field values assigned from within the Job Titles module";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"orgjt";s:10:"foreignKey";s:13:"OrgJobTitleID";s:12:"foreignField";s:11:"OrgJobTitle";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:185:"SELECT 
`orgjt`.OrgJobTitleID AS ID, NULLIF(CONCAT(IFNULL(`orgjt`.JobTitleName,\'\')),\'\') AS Name, `orgjt`.FunctionID AS ParentID FROM `orgjt`
WHERE orgjt._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:186:"SELECT 
`orgjt`.OrgJobTitleID AS ID, NULLIF(CONCAT(IFNULL(`orgjt`.JobTitleName,\'\')),\'\') AS Name, `orgjt`.FunctionID AS ParentID FROM `orgjt`

WHERE `orgjt`.OrgJobTitleID = \'/*recordID*/\'";s:11:"parentField";s:10:"FunctionID";s:21:"parentListModuleField";N;s:11:"childFields";a:4:{s:16:"JobTitleCategory";a:1:{s:4:"name";s:16:"JobTitleCategory";}s:12:"JobTitleType";a:1:{s:4:"name";s:12:"JobTitleType";}s:10:"LocalLevel";a:1:{s:4:"name";s:10:"LocalLevel";}s:14:"JobDescription";a:1:{s:4:"name";s:14:"JobDescription";}}s:8:"moduleID";s:5:"orgja";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:30:"`orgjt`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:16:"JobTitleCategory";O:9:"viewfield":16:{s:4:"name";s:16:"JobTitleCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Job Title Category|A broad categoy used to group job titles of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:13:"OrgJobTitleID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:12:"JobTitleType";O:9:"viewfield":16:{s:4:"name";s:12:"JobTitleType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Job Title Type|A combined field used to describe this job title type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:13:"OrgJobTitleID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:10:"LocalLevel";O:9:"viewfield":16:{s:4:"name";s:10:"LocalLevel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Organization Level|The hierarchical level of the organization to which the job title belongs";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:13:"OrgJobTitleID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:14:"JobDescription";O:9:"viewfield":16:{s:4:"name";s:14:"JobDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:117:"Job Description|A brief description of the elements of the job to be performed by the person occupying this job title";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:13:"OrgJobTitleID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:14:"MannerAffected";O:9:"memofield":15:{s:4:"name";s:14:"MannerAffected";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Manner Affected|A detailed description of the manner in which this job title is affected by the related record";s:8:"dataType";s:4:"text";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:15:"JobTitleAssocID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:5:"orgja";s:6:"phrase";s:19:"Job Titles Affected";s:6:"number";i:2;s:6:"Fields";a:3:{s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Organization|The organization where this job title is utilized";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"OrgJobTitle";O:9:"viewfield":16:{s:4:"name";s:11:"OrgJobTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:122:"Job Title|A description of the job title based on a combination of field values assigned from within the Job Titles module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"MannerAffected";O:9:"viewfield":16:{s:4:"name";s:14:"MannerAffected";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Manner Affected|A detailed description of the manner in which this job title is affected by the related record";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgja";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:152:"SELECT 
    count(*) 
FROM `orgja`
   
WHERE orgja._Deleted = 0
   AND `orgja`.RelatedModuleID = \'mtgma\'
AND `orgja`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:509:"SELECT 
   `orgja`.JobTitleAssocID,
`orgjt1`.OrganizationID AS OrganizationID,
`org1`.Name AS Organization,
NULLIF(CONCAT(IFNULL(`orgjt1`.JobTitleName,\'\')),\'\') AS OrgJobTitle,
`orgja`.MannerAffected
FROM `orgja`

   LEFT OUTER JOIN `orgjt` AS orgjt1 
   ON (`orgja`.OrgJobTitleID = `orgjt1`.OrgJobTitleID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`orgjt1`.OrganizationID = `org1`.OrganizationID )
WHERE orgja._Deleted = 0
AND `orgja`.RelatedModuleID = \'mtgma\'
AND `orgja`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";s:14:"MasterAssignID";s:8:"PKFields";a:1:{i:0;s:15:"JobTitleAssocID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:10:"conditions";a:1:{s:15:"RelatedModuleID";s:5:"mtgma";}}');


    $guidanceGrid = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:1:{s:20:"GuidanceOrganization";N;}s:6:"isInfo";b:0;s:10:"isGuidance";b:1;s:10:"isVertical";b:1;s:15:"verticalFormats";a:3:{s:16:"OrganizationLogo";s:9:"LogoField";s:26:"JobTitleConsiderationTitle";s:10:"TitleField";s:32:"JobTitleConsiderationDescription";s:12:"FeatureField";}s:8:"moduleID";s:5:"orgtc";s:6:"phrase";s:18:"Job Title Guidance";s:6:"number";N;s:6:"Fields";a:6:{s:23:"JobTitleConsiderationID";O:14:"invisiblefield":11:{s:4:"name";s:23:"JobTitleConsiderationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:140:"Record ID|An automatically assigned number used to track the association of job title considerations with records throughout the application";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgtc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:16:"OrganizationLogo";O:9:"viewfield":16:{s:4:"name";s:16:"OrganizationLogo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Organization Logo|Displays the logo of the guidance organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgtc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:26:"JobTitleConsiderationTitle";O:9:"viewfield":16:{s:4:"name";s:26:"JobTitleConsiderationTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Title|A short title or phrase used to describe the job title consideration";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgtc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:32:"JobTitleConsiderationDescription";O:9:"viewfield":16:{s:4:"name";s:32:"JobTitleConsiderationDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:205:"Consideration|A detailed description of the job title consideration and the manner in which the activity associated with the related record may be impacted by the presence or absence of an job title policy";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgtc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"GuidanceOrganization";O:9:"viewfield":16:{s:4:"name";s:20:"GuidanceOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Guidance Provided By|A combined field used to describe the guidance organization when associating it with guidance types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgtc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"GuidancePerson";O:9:"viewfield":16:{s:4:"name";s:14:"GuidancePerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Guidance Person|The individual providing guidance for consideration";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"orgtc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:341:"SELECT 
    count(*) 
FROM `orgtc`
   
   LEFT OUTER JOIN `gui` AS gui1 
   ON (`orgtc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
 INNER JOIN `mtgma` AS `parent` ON `gui1`.RelatedRecordID = `parent`.MasterMeetingID
WHERE orgtc._Deleted = 0
   AND `gui1`.RelatedModuleID = \'mtgm\'
AND `parent`.MasterAssignID = \'/**RecordID**/\'
";s:7:"listSQL";s:1234:"SELECT 
   `orgtc`.JobTitleConsiderationID,
`orgtc`.GuidanceOrganizationID,
NULLIF(CONCAT(\'<img src=\\"org/\',IFNULL(IFNULL(`org1`.GuidanceLogoName, \'transparent.gif\'),\'\'),\'\\" alt=\\"logo\\" />\'),\'<img src=\\\\\\"org/\\\\\\" alt=\\\\\\"logo\\\\\\" />\') AS OrganizationLogo,
`orgtc`.JobTitleConsiderationTitle,
`orgtc`.JobTitleConsiderationDescription,
NULLIF(CONCAT(IFNULL(`org2`.Name,\'\')),\'\') AS GuidanceOrganization,
`ppl1`.DisplayName AS GuidancePerson
FROM `orgtc`

   LEFT OUTER JOIN `gui` AS gui1 
   ON (`orgtc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`gui1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `org` AS org2 
   ON (`gui1`.OrganizationID = `org2`.OrganizationID )
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`gui1`.GuidanceOrganizationID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'gui\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'184\')
   LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
 INNER JOIN `mtgma` AS `parent` ON `gui1`.RelatedRecordID = `parent`.MasterMeetingID
WHERE orgtc._Deleted = 0
AND `gui1`.RelatedModuleID = \'mtgm\'
AND `parent`.MasterAssignID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:2:{s:13:"suppressTitle";b:1;s:19:"suppressRecordIcons";b:1;}s:10:"fieldTypes";a:6:{s:23:"JobTitleConsiderationID";s:3:"int";s:16:"OrganizationLogo";N;s:26:"JobTitleConsiderationTitle";s:12:"varchar(128)";s:32:"JobTitleConsiderationDescription";s:4:"text";s:20:"GuidanceOrganization";N;s:14:"GuidancePerson";N;}s:4:"name";N;s:10:"fieldAlign";a:6:{s:23:"JobTitleConsiderationID";s:5:"right";s:16:"OrganizationLogo";s:7:"justify";s:26:"JobTitleConsiderationTitle";s:4:"left";s:32:"JobTitleConsiderationDescription";s:7:"justify";s:20:"GuidanceOrganization";s:7:"justify";s:14:"GuidancePerson";s:4:"left";}}');


    $PKField = 'MasterAssignID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[2]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Regulations";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `mtgma`.MasterAssignID,
   `mtgma`.MasterMeetingID,
   `cod1`.Description AS MeetingType,
   `mtgm1`.MeetingTitle AS MeetingTitle,
   `mtgm1`.Agenda AS Agenda,
   `org2`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   `dat1`.RelatedDate AS AssignmentDate,
   `mtgma`.AssignmentDetails,
   `mtgma`.MasterLeaderObservations,
   NULLIF(CONCAT(IFNULL(`mtgm1`.MeetingTitle,''),' | ',IFNULL(`org2`.Name,''),' | ',IFNULL(`dat1`.RelatedDate,'')),' |  | ') AS RecordLabel,
   `mtgma`.OrganizationID
FROM `mtgma`
   
     LEFT OUTER JOIN `mtgm` AS mtgm1 
   ON (`mtgma`.MasterMeetingID = `mtgm1`.MasterMeetingID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`mtgma`.OrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`mtgma`.MasterAssignID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'mtgma'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '58')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`mtgma`.MasterAssignID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'mtgma'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '2')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`mtgm1`.MeetingTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '72')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   mtgma.MasterAssignID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Master Meeting Assignment");
        $screenPhrase = gettext("Job Titles|Associate job titles with the meeting requirement");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Master Meeting Assignments");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'MasterAssignID' => gettext("Record ID|An automatically assigned number used to associate organizations with meeting requirements"),
   'MasterMeetingID' => gettext("Master Meeting ID|An automatically assigned number used to track master meetings assigned to multiple local organizations"),
   'MeetingType' => gettext("Meeting Type|The type of meeting conducted"),
   'MeetingTitle' => gettext("Meeting Title|A brief name used to identify the meeting"),
   'Agenda' => gettext("Agenda|The stated purpose and agenda for the meeting"),
   'Organization' => gettext("Organization|The name of the organization assigned to conduct a meeting"),
   'PersonAccountable' => gettext("Person Accountable|The person accountable for ensuring the meeting occurs and satisfies the master meeting agenda"),
   'AssignmentDate' => gettext("Assignment Date|Date the meeting was assigned to the local organization"),
   'AssignmentDetails' => gettext("Assignment Details|A description of any details associated with this meeting assignment; such as, scope, purpose and objectives"),
   'MasterLeaderObservations' => gettext("Master Leader Observations|Detailed observations of the Master Leader regarding the local acceptance and implementation of the assigned meeting requirement")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Master Meeting Assignments"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Master Meeting Assignment") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a master meeting assignment") );
      $tempTabs['Departments'] = array( "edit.php?scr=Departments&$tabsQS", gettext("Departments|Associate local departments with the meeting requirement") );
      $tempTabs['Audits'] = array( "edit.php?scr=Audits&$tabsQS", gettext("Audits|Associate audit items with the meeting requirement") );
      $tempTabs['BusinessContinuity'] = array( "edit.php?scr=BusinessContinuity&$tabsQS", gettext("Continuity|Associate business continuity requirements with the meeting requirement") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Exposures|Associate cost exposures with the meeting requirement") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the meeting requirement") );
      $tempTabs['Equipment'] = array( "edit.php?scr=Equipment&$tabsQS", gettext("Equipment|Associate equipment with the meeting requirement") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the meeting requirement") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the meeting requirement") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the meeting requirement") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with the meeting requirement") );
      $tempTabs['JobTitles'] = array( "", gettext("Job Titles|Associate job titles with the meeting requirement") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the meeting requirement") );
      $tempTabs['Responsibilities'] = array( "edit.php?scr=Responsibilities&$tabsQS", gettext("Responsibilities|Associate responsibilities with the meeting requirement") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the meeting requirement") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the meeting requirement") );
      $tempTabs['Training'] = array( "edit.php?scr=Training&$tabsQS", gettext("Training|Associate training courses with the meeting requirement") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participant accountabilities with the meeting requirement") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participant involvement with the meeting requirement") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with the meeting requirement") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the meeting requirement") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['JobTitles'] = array( "", gettext("New Master Meeting Assignment") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>