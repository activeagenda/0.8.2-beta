<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:23:{s:14:"TrustAccountID";O:9:"viewfield":16:{s:4:"name";s:14:"TrustAccountID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:108:"Record ID|An automatically assigned number used to track accounts used to trunce the risk management process";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"Organization|The organization responsible for funding and managing the trust account";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Person Accountable|The individual assigned primary accountability for the trust account";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"AccountName";O:9:"viewfield":16:{s:4:"name";s:11:"AccountName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Account Name|A unique name or title used to identify the trust account";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"TrustAccountNumber";O:9:"viewfield":16:{s:4:"name";s:18:"TrustAccountNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Trust Account Number|A unique number used to identify the trust account";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"AccountDesc";O:9:"viewfield":16:{s:4:"name";s:11:"AccountDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Account Description|A detailed description of the trust account";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"EffectiveDate";O:9:"viewfield":16:{s:4:"name";s:13:"EffectiveDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:58:"Effective Date|The date the trust account became effective";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ExpirationDate";O:9:"viewfield":16:{s:4:"name";s:14:"ExpirationDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:50:"Expiration Date|The date the trust account expires";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"AccountOrganization";O:9:"viewfield":16:{s:4:"name";s:19:"AccountOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:80:"Budget Organization|The organization responsible for managing the budget account";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"AccountCategory";O:9:"viewfield":16:{s:4:"name";s:15:"AccountCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Budget Category|A broad categoy used to group accounts of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"AccountType";O:9:"viewfield":16:{s:4:"name";s:11:"AccountType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:102:"Budget Type|A combined field used to describe this account type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Account";O:9:"viewfield":16:{s:4:"name";s:7:"Account";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Budget Account|A combined field used to describe the budget account when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"BudgetNumber";O:9:"viewfield":16:{s:4:"name";s:12:"BudgetNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Number|A number used by internal accounting to track budgets and related expenditures";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"BudgetAccountDesc";O:9:"viewfield":16:{s:4:"name";s:17:"BudgetAccountDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Budget Description|A detailed description of the budget account";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"BudgetedAmount";O:9:"viewfield":16:{s:4:"name";s:14:"BudgetedAmount";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Budget Amount|The total amount of money deposited to the budget account";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"TrustAmount";O:9:"viewfield":16:{s:4:"name";s:11:"TrustAmount";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:180:"Amount Per Participant|The amount of trust issued to each participant in the trust account. The trust amount is stated in the currency assigned to this installation of the software";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:27:"TotalDistributionsAvailable";O:9:"viewfield":16:{s:4:"name";s:27:"TotalDistributionsAvailable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Total Distributions Available|A calculated field representing the total number of distributions available";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:18:"DistributionNumber";O:9:"viewfield":16:{s:4:"name";s:18:"DistributionNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Distributions Made|A calculated field representing the total number of distributions made";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:13:"Distributions";O:9:"viewfield":16:{s:4:"name";s:13:"Distributions";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:145:"Amount Distributed|A calculated field representing the total value of the trust account based on the number of distributions of the Trust Amount.";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:22:"DistributionsRemaining";O:9:"viewfield":16:{s:4:"name";s:22:"DistributionsRemaining";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Distributions Available|A calculated field representing the total number of distributions remaining";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:9:"Available";O:9:"viewfield":16:{s:4:"name";s:9:"Available";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:210:"Amount Available|A calculated field based on the subtraction of the total distributions from the total amount budgeted for the trust account. This amount represents the amount available for further distribution";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:13:"AccountStatus";O:9:"viewfield":16:{s:4:"name";s:13:"AccountStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:42:"Status|Present status of the trust account";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IsBestPractice";O:14:"invisiblefield":11:{s:4:"name";s:14:"IsBestPractice";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'TrustAccountID' => gettext("Record ID|An automatically assigned number used to track accounts used to trunce the risk management process"),
   'Organization' => gettext("Organization|The organization responsible for funding and managing the trust account"),
   'PersonAccountable' => gettext("Person Accountable|The individual assigned primary accountability for the trust account"),
   'AccountName' => gettext("Account Name|A unique name or title used to identify the trust account"),
   'TrustAccountNumber' => gettext("Trust Account Number|A unique number used to identify the trust account"),
   'AccountDesc' => gettext("Account Description|A detailed description of the trust account"),
   'EffectiveDate' => gettext("Effective Date|The date the trust account became effective"),
   'ExpirationDate' => gettext("Expiration Date|The date the trust account expires"),
   'AccountOrganization' => gettext("Budget Organization|The organization responsible for managing the budget account"),
   'AccountCategory' => gettext("Budget Category|A broad categoy used to group accounts of similar types"),
   'AccountType' => gettext("Budget Type|A combined field used to describe this account type when associating it with other records"),
   'Account' => gettext("Budget Account|A combined field used to describe the budget account when associating it with other records"),
   'BudgetNumber' => gettext("Number|A number used by internal accounting to track budgets and related expenditures"),
   'BudgetAccountDesc' => gettext("Budget Description|A detailed description of the budget account"),
   'BudgetedAmount' => gettext("Budget Amount|The total amount of money deposited to the budget account"),
   'TrustAmount' => gettext("Amount Per Participant|The amount of trust issued to each participant in the trust account. The trust amount is stated in the currency assigned to this installation of the software"),
   'TotalDistributionsAvailable' => gettext("Total Distributions Available|A calculated field representing the total number of distributions available"),
   'DistributionNumber' => gettext("Distributions Made|A calculated field representing the total number of distributions made"),
   'Distributions' => gettext("Amount Distributed|A calculated field representing the total value of the trust account based on the number of distributions of the Trust Amount."),
   'DistributionsRemaining' => gettext("Distributions Available|A calculated field representing the total number of distributions remaining"),
   'Available' => gettext("Amount Available|A calculated field based on the subtraction of the total distributions from the total amount budgeted for the trust account. This amount represents the amount available for further distribution"),
   'AccountStatus' => gettext("Status|Present status of the trust account"),
   'IsBestPractice' => gettext("Is Best Practice|Whether the associated record is a best practice")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    $useBestPractices = true;

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `tru`.TrustAccountID,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   `tru`.AccountName,
   `tru`.TrustAccountNumber,
   `tru`.AccountDesc,
   `dat1`.RelatedDate AS EffectiveDate,
   `dat2`.RelatedDate AS ExpirationDate,
   `org2`.Name AS AccountOrganization,
   `cod2`.Description AS AccountCategory,
   NULLIF(CONCAT(IFNULL(`budat1`.AccountTypeTitle,'')),'') AS AccountType,
   NULLIF(CONCAT(IFNULL(`buda1`.AccountName,''),' | ',IFNULL(`buda1`.AccountNumber,'')),' | ') AS Account,
   `bud1`.BudgetNumber AS BudgetNumber,
   `buda1`.AccountDesc AS BudgetAccountDesc,
   `buda1`.AccountAmount AS BudgetedAmount,
   `tru`.TrustAmount,
   IFNULL(ROUND(`buda1`.AccountAmount, 2),0) / ROUND(`tru`.TrustAmount, 2) AS TotalDistributionsAvailable,
   IFNULL(ROUND(`trud1`.Distributions, 2),0) / ROUND(`tru`.TrustAmount, 2) AS DistributionNumber,
   `trud1`.Distributions AS Distributions,
   IFNULL(ROUND(IFNULL(ROUND(`buda1`.AccountAmount, 2),0) - IFNULL(ROUND(`trud1`.Distributions, 2),0), 2),0) / ROUND(`tru`.TrustAmount, 2) AS DistributionsRemaining,
   IFNULL(ROUND(`buda1`.AccountAmount, 2),0) - IFNULL(ROUND(`trud1`.Distributions, 2),0) AS Available,
   `cod1`.Description AS AccountStatus,
   `bpc1`.IsBestPractice AS IsBestPractice,
   NULLIF(CONCAT(IFNULL(`tru`.AccountName,''),' | ',IFNULL(`tru`.TrustAccountNumber,''),' | ',IFNULL(ROUND(`tru`.TrustAmount, 2),'')),' |  | ') AS RecordLabel,
   `tru`.OrganizationID
FROM `tru`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`tru`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`tru`.TrustAccountID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'tru'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '1')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`tru`.TrustAccountID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'tru'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '17')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`tru`.TrustAccountID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'tru'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '10')
     LEFT OUTER JOIN `buda` AS buda1 
   ON (`tru`.AccountID = `buda1`.AccountID )
     LEFT OUTER JOIN (SELECT 
SUM(ROUND(`tru1`.TrustAmount, 2)) AS Distributions,
`trud`.TrustAccountID FROM `trud` 

LEFT OUTER JOIN `tru` AS tru1 
   ON (`trud`.TrustAccountID = `tru1`.TrustAccountID )
 WHERE `trud`._Deleted = 0 
GROUP BY `trud`.TrustAccountID 
) AS trud1 
ON (`tru`.TrustAccountID = trud1.TrustAccountID) 
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`tru`.AccountStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '83')
     LEFT OUTER JOIN (SELECT 
COUNT(`bpc`.BestPracticeID) AS IsBestPractice,
`bpc`.RelatedRecordID FROM `bpc` 
 WHERE `bpc`._Deleted = 0 
 AND 'tru' = `bpc`.RelatedModuleID
GROUP BY `bpc`.RelatedRecordID 
) AS bpc1 
ON (`tru`.TrustAccountID = bpc1.RelatedRecordID) 
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`buda1`.AccountOrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `budat` AS budat1 
   ON (`buda1`.AccountTypeID = `budat1`.AccountTypeID )
     LEFT OUTER JOIN `bud` AS bud1 
   ON (`buda1`.BudgetID = `bud1`.BudgetID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`budat1`.AccountCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '31')
WHERE
   tru.TrustAccountID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Trust Accounts"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about the trust account") );
      $tempTabs['Distributions'] = array( "edit.php?scr=Distributions&$tabsQS", gettext("Distributions|Associate trust distributions with the trust account") );
      $tempTabs['Audits'] = array( "edit.php?scr=Audits&$tabsQS", gettext("Audits|Associate audits with the trust account") );
      $tempTabs['BusinessContinuity'] = array( "edit.php?scr=BusinessContinuity&$tabsQS", gettext("Continuity|Associate business continuity requirements with the trust account") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the trust account") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the trust account") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the trust account") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Cost Exposures|Associate cost exposures with the trust account") );
      $tempTabs['Insurance'] = array( "edit.php?scr=Insurance&$tabsQS", gettext("Insurance|Associate insurance consequences with the trust account") );
      $tempTabs['Permits'] = array( "edit.php?scr=Permits&$tabsQS", gettext("Permits|Associate operating permits with the trust account") );
      $tempTabs['Publicity'] = array( "edit.php?scr=Publicity&$tabsQS", gettext("Publicity|Associate publicity with the trust account") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the trust account") );
      $tempTabs['Responsibilities'] = array( "edit.php?scr=Responsibilities&$tabsQS", gettext("Responsibilities|Associate responsibilities with the trust account") );
      $tempTabs['Classifications'] = array( "edit.php?scr=Classifications&$tabsQS", gettext("Classifications|Associate risk classifications with the trust account") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with the trust account") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the trust account") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the trust account") );
      $tempTabs['Training'] = array( "edit.php?scr=Training&$tabsQS", gettext("Training|Associate training with the trust account") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the trust account") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the trust account") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("File Retention|Associate file retention methods with the trust account") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the trust account") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Trust Account") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Trust Account");
    $screenPhrase = gettext("View|View summary information about the trust account");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
$content .= '<h1>'. gettext("Associations") .'</h1>';
$fields = '';
$phrases = array();
$SQL = '';
   $grids = array();
   $grids[1] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"trud";s:6:"phrase";s:21:"Distribution of Trust";s:6:"number";i:1;s:6:"Fields";a:5:{s:19:"TrustDistributionID";O:14:"invisiblefield":11:{s:4:"name";s:19:"TrustDistributionID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:135:"Record ID|An automatically assigned number used to track account transfers between accounts used to finance the risk management process";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trud";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"Organization|The organization responsible for funding and managing the trust account";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trud";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"TrustedPerson";O:9:"viewfield":16:{s:4:"name";s:13:"TrustedPerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Trusted Person|The name of the individual receiving the trust distribution";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trud";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Department";O:9:"viewfield":16:{s:4:"name";s:10:"Department";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Department|Department of the local organization which the employee belongs to";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trud";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"AccountBalance";O:9:"viewfield":16:{s:4:"name";s:14:"AccountBalance";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:158:"Account Balance|A calculated field based on subtracting all expenses associated with the trust account distributions from the total value of the trust account";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trud";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}s:8:"countSQL";s:110:"SELECT 
    count(*) 
FROM `trud`
   
WHERE trud._Deleted = 0
   AND `trud`.TrustAccountID = \'/**RecordID**/\'
";s:7:"listSQL";s:1349:"SELECT 
   `trud`.TrustDistributionID,
`tru1`.OrganizationID AS OrganizationID,
`org1`.Name AS Organization,
`ppl1`.DisplayName AS TrustedPerson,
NULLIF(CONCAT(IFNULL(`orgdp1`.DepartmentName,\'\')),\'\') AS Department,
IFNULL(ROUND(`tru1`.TrustAmount, 2),0) - IFNULL(ROUND(`cos1`.TrustExpenseValue, 2),0) AS AccountBalance
FROM `trud`

   LEFT OUTER JOIN `tru` AS tru1 
   ON (`trud`.TrustAccountID = `tru1`.TrustAccountID )
   LEFT OUTER JOIN `inv` AS inv1 
    ON (`trud`.TrustDistributionID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'trud\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'1\')
   LEFT OUTER JOIN (SELECT 
SUM(ROUND(`cos`.Incurred, 2)) AS TrustExpenseValue,
`cos`.RelatedRecordID FROM `cos` 
 WHERE `cos`._Deleted = 0 
GROUP BY `cos`.RelatedRecordID 
) AS cos1 
ON (`trud`.TrustDistributionID = cos1.RelatedRecordID) 
   LEFT OUTER JOIN `org` AS org1 
   ON (`tru1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
   LEFT OUTER JOIN `orgda` AS orgda1 
   ON (`inv1`.PersonInvolvedID = `orgda1`.RelatedRecordID 
     AND `orgda1`.RelatedModuleID = \'pple\')
   LEFT OUTER JOIN `orgdp` AS orgdp1 
   ON (`orgda1`.DepartmentID = `orgdp1`.DepartmentID )
WHERE trud._Deleted = 0
AND `trud`.TrustAccountID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:14:"TrustAccountID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:19:"TrustDistributionID";s:3:"int";s:12:"Organization";N;s:13:"TrustedPerson";N;s:10:"Department";N;s:14:"AccountBalance";s:5:"money";}s:4:"name";N;s:10:"fieldAlign";a:5:{s:19:"TrustDistributionID";s:5:"right";s:12:"Organization";s:4:"left";s:13:"TrustedPerson";s:4:"left";s:10:"Department";s:7:"justify";s:14:"AccountBalance";s:5:"right";}}');
   $grids[2] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"apr";s:6:"phrase";s:25:"Asset Protection Measures";s:6:"number";i:2;s:6:"Fields";a:6:{s:14:"AssetProtectID";O:14:"invisiblefield":11:{s:4:"name";s:14:"AssetProtectID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Record ID|An automatically assigned number used to track asset protection methods and criteria";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"apr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:17:"AssetProtectTitle";O:9:"viewfield":16:{s:4:"name";s:17:"AssetProtectTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:209:"Title|A short title used to describe the item to be reviewed or audited. This title should be concise, but descriptive enough for the person performing the asset protection activity to easily identify the item";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"apr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"AssetProtectCategory";O:9:"viewfield":16:{s:4:"name";s:20:"AssetProtectCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Category|A general category used to catgorize asset protection measures for greater flexibility in developing checklists";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"apr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"AssetProtectPurpose";O:9:"viewfield":16:{s:4:"name";s:19:"AssetProtectPurpose";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Purpose|The purpose of the asset protection method or measure";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"apr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ReviewLocation";O:9:"viewfield":16:{s:4:"name";s:14:"ReviewLocation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Review Location|Specific location within the facility where the item is located and can be reviewed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"apr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ScheduleFrequency";O:9:"viewfield":16:{s:4:"name";s:17:"ScheduleFrequency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:131:"Schedule Frequency|A combined field used to describe the asset protection schedule frequency when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"apr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `apr`
   
WHERE apr._Deleted = 0
   AND `apr`.RelatedModuleID = \'tru\'
AND `apr`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1259:"SELECT 
   `apr`.AssetProtectID,
`apr`.ReviewOrganizationID,
`apr`.AssetProtectTitle,
`cod1`.Description AS AssetProtectCategory,
`cod2`.Description AS AssetProtectPurpose,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS ReviewLocation,
NULLIF(CONCAT(IFNULL(`apr`.SchedFreq,\'\'),\' \',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,\'\')),\'\'),\'\')),\' \') AS ScheduleFrequency
FROM `apr`

   LEFT OUTER JOIN `cod` AS cod1 
   ON (`apr`.AssetProtectCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'50\')
   LEFT OUTER JOIN `cod` AS cod2 
   ON (`apr`.AssetProtectPurposeID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'101\')
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`apr`.AssetProtectID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'apr\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `uts` AS uts1 
   ON (`apr`.SchedFreqUnitsID = `uts1`.UnitID )
   LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE apr._Deleted = 0
AND `apr`.RelatedModuleID = \'tru\'
AND `apr`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:6:{s:14:"AssetProtectID";s:3:"int";s:17:"AssetProtectTitle";s:12:"varchar(128)";s:20:"AssetProtectCategory";N;s:19:"AssetProtectPurpose";N;s:14:"ReviewLocation";N;s:17:"ScheduleFrequency";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:6:{s:14:"AssetProtectID";s:5:"right";s:17:"AssetProtectTitle";s:4:"left";s:20:"AssetProtectCategory";s:4:"left";s:19:"AssetProtectPurpose";s:4:"left";s:14:"ReviewLocation";s:7:"justify";s:17:"ScheduleFrequency";s:7:"justify";}}');
   $grids[3] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"bcq";s:6:"phrase";s:21:"Business Consequences";s:6:"number";i:3;s:6:"Fields";a:5:{s:21:"BusinessConsequenceID";O:14:"invisiblefield":11:{s:4:"name";s:21:"BusinessConsequenceID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Record ID|An automatically assigned number used to associate business consequences with related records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bcq";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Organization|The primary organization affected by the business consequence";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bcq";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ConsequenceTitle";O:9:"viewfield":16:{s:4:"name";s:16:"ConsequenceTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Consequence Title|A short title used to specifically describe the business consequence";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bcq";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:23:"BusinessConsequenceType";O:9:"viewfield":16:{s:4:"name";s:23:"BusinessConsequenceType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Business Consequence Type|The specific type of business consequence";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bcq";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"NatureofConsequence";O:9:"viewfield":16:{s:4:"name";s:19:"NatureofConsequence";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"Nature of Consequence|Whether the business consequence will have a beneficial or detrimental impact on the business";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bcq";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `bcq`
   
WHERE bcq._Deleted = 0
   AND `bcq`.RelatedModuleID = \'tru\'
AND `bcq`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:677:"SELECT 
   `bcq`.BusinessConsequenceID,
`bcq`.OrganizationID,
`org1`.Name AS Organization,
`bcq`.ConsequenceTitle,
NULLIF(CONCAT(IFNULL(`bcqt1`.ConsequenceType,\'\')),\'\') AS BusinessConsequenceType,
`cod1`.Description AS NatureofConsequence
FROM `bcq`

   LEFT OUTER JOIN `org` AS org1 
   ON (`bcq`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `bcqt` AS bcqt1 
   ON (`bcq`.BusinessConsequenceTypeID = `bcqt1`.BusinessConsequenceTypeID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`bcq`.NatureofConsequenceID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'204\')
WHERE bcq._Deleted = 0
AND `bcq`.RelatedModuleID = \'tru\'
AND `bcq`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:21:"BusinessConsequenceID";s:3:"int";s:12:"Organization";N;s:16:"ConsequenceTitle";s:12:"varchar(128)";s:23:"BusinessConsequenceType";N;s:19:"NatureofConsequence";N;}s:4:"name";N;s:10:"fieldAlign";a:5:{s:21:"BusinessConsequenceID";s:5:"right";s:12:"Organization";s:4:"left";s:16:"ConsequenceTitle";s:4:"left";s:23:"BusinessConsequenceType";s:7:"justify";s:19:"NatureofConsequence";s:4:"left";}}');
   $grids[4] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"busa";s:6:"phrase";s:23:"Continuity Requirements";s:6:"number";i:4;s:6:"Fields";a:5:{s:14:"BusinessContID";O:14:"invisiblefield":11:{s:4:"name";s:14:"BusinessContID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:142:"Record ID|An automatically assigned number used to associate people, equipment and others assets with business continuation or recovery events";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Organization|The organization with primary responsibility for enforcing this business continuation requirement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"BusinessProcessType";O:9:"viewfield":16:{s:4:"name";s:19:"BusinessProcessType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"Process Type|The specific type of business process to be protected against a business interruption";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"BusRecoveryTitle";O:9:"viewfield":16:{s:4:"name";s:16:"BusRecoveryTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Recovery Title|A short title used to describe the business recovery business continuation responsibility of the person accountable";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"Criticality";O:9:"viewfield":16:{s:4:"name";s:11:"Criticality";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:123:"Criticality|A way of categorizing the critical nature of securing a resource and prioritizing business continuation efforts";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `busa`
   
WHERE busa._Deleted = 0
   AND `busa`.RelatedModuleID = \'tru\'
AND `busa`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:739:"SELECT 
   `busa`.BusinessContID,
`busa`.OrganizationID,
`org1`.Name AS Organization,
`cod1`.Description AS BusinessProcessType,
`busa`.BusRecoveryTitle,
`cod2`.Description AS Criticality
FROM `busa`

   LEFT OUTER JOIN `org` AS org1 
   ON (`busa`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `bus` AS bus1 
   ON (`busa`.BusinessContinuationID = `bus1`.BusinessContinuationID )
   LEFT OUTER JOIN `cod` AS cod2 
   ON (`busa`.CriticalityID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'130\')
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`bus1`.BusinessProcessTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'283\')
WHERE busa._Deleted = 0
AND `busa`.RelatedModuleID = \'tru\'
AND `busa`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:14:"BusinessContID";s:3:"int";s:12:"Organization";N;s:19:"BusinessProcessType";N;s:16:"BusRecoveryTitle";s:12:"varchar(128)";s:11:"Criticality";N;}s:4:"name";N;s:10:"fieldAlign";a:5:{s:14:"BusinessContID";s:5:"right";s:12:"Organization";s:4:"left";s:19:"BusinessProcessType";s:4:"left";s:16:"BusRecoveryTitle";s:4:"left";s:11:"Criticality";s:4:"left";}}');
   $grids[5] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"cosex";s:6:"phrase";s:18:"Exposure Estimates";s:6:"number";i:5;s:6:"Fields";a:7:{s:14:"CostExposureID";O:14:"invisiblefield":11:{s:4:"name";s:14:"CostExposureID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Record ID|An automatically assigned number used to track the association of cost exposures with records throughout the application";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"cosex";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Organization|The primary organization affected by the cost exposure";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"cosex";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"CostCategory";O:9:"viewfield":16:{s:4:"name";s:12:"CostCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Category|A cost of risk categorization which enables an organization to characterize cost of risk exposures";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"cosex";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"CostType";O:9:"viewfield":16:{s:4:"name";s:8:"CostType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:49:"Cost Type|The specific cost of risk exposure type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"cosex";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"CostExposureTitle";O:9:"viewfield":16:{s:4:"name";s:17:"CostExposureTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:54:"Title|A concise title that describes the cost exposure";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"cosex";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Estimate";O:9:"viewfield":16:{s:4:"name";s:8:"Estimate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:56:"Estimate|The total estimated amount of the cost exposure";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"cosex";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"DetrimentFrequency";O:9:"viewfield":16:{s:4:"name";s:18:"DetrimentFrequency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Detriment Frequency|A combined field used to display the detriment frequency";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"cosex";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:150:"SELECT 
    count(*) 
FROM `cosex`
   
WHERE cosex._Deleted = 0
   AND `cosex`.RelatedModuleID = \'tru\'
AND `cosex`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:904:"SELECT 
   `cosex`.CostExposureID,
`cosex`.OrganizationID,
`org1`.Name AS Organization,
`cod1`.Description AS CostCategory,
NULLIF(CONCAT(IFNULL(`cost1`.CostTitle,\'\')),\'\') AS CostType,
`cosex`.CostExposureTitle,
`cosex`.Estimate,
NULLIF(CONCAT(IFNULL(`cosex`.FinancialDetrimentFrequency,\'\'),\' per \',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,\'\')),\'\'),\'\')),\' per \') AS DetrimentFrequency
FROM `cosex`

   LEFT OUTER JOIN `org` AS org1 
   ON (`cosex`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `cost` AS cost1 
   ON (`cosex`.CostTypeID = `cost1`.CostTypeID )
   LEFT OUTER JOIN `uts` AS uts1 
   ON (`cosex`.FinancialDetrimentFrequencyUnitID = `uts1`.UnitID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`cost1`.CostCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'124\')
WHERE cosex._Deleted = 0
AND `cosex`.RelatedModuleID = \'tru\'
AND `cosex`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:7:{s:14:"CostExposureID";s:3:"int";s:12:"Organization";N;s:12:"CostCategory";N;s:8:"CostType";N;s:17:"CostExposureTitle";s:12:"varchar(128)";s:8:"Estimate";s:5:"money";s:18:"DetrimentFrequency";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:7:{s:14:"CostExposureID";s:5:"right";s:12:"Organization";s:4:"left";s:12:"CostCategory";s:4:"left";s:8:"CostType";s:7:"justify";s:17:"CostExposureTitle";s:4:"left";s:8:"Estimate";s:5:"right";s:18:"DetrimentFrequency";s:7:"justify";}}');
   $grids[6] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"hza";s:6:"phrase";s:7:"Hazards";s:6:"number";i:6;s:6:"Fields";a:5:{s:8:"HazardID";O:14:"invisiblefield":11:{s:4:"name";s:8:"HazardID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Record ID|An automatically assigned number used to track general hazards";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"hza";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:11:"HazCategory";O:9:"viewfield":16:{s:4:"name";s:11:"HazCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:93:"Hazard Category|A broadly defined title or phrase used to group similar categories of hazards";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"hza";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"HazardType";O:9:"viewfield":16:{s:4:"name";s:10:"HazardType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Hazard Type|A combined field used to describe this hazard type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"hza";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"HazardTitle";O:9:"viewfield":16:{s:4:"name";s:11:"HazardTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:57:"Title|A short phrase or title used to describe the hazard";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"hza";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"HazardStatus";O:9:"viewfield":16:{s:4:"name";s:12:"HazardStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:46:"Status|Current status of the identified hazard";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"hza";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `hza`
   
WHERE hza._Deleted = 0
   AND `hza`.RelatedModuleID = \'tru\'
AND `hza`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:638:"SELECT 
   `hza`.HazardID,
`hza`.LocationOrganizationID,
`cod1`.Description AS HazCategory,
NULLIF(CONCAT(IFNULL(`hazt1`.HazType,\'\')),\'\') AS HazardType,
`hza`.HazardTitle,
`cod2`.Description AS HazardStatus
FROM `hza`

   LEFT OUTER JOIN `hazt` AS hazt1 
   ON (`hza`.HazardTypeID = `hazt1`.HazardTypeID )
   LEFT OUTER JOIN `cod` AS cod2 
   ON (`hza`.HazardStatusID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'43\')
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`hazt1`.HazCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'62\')
WHERE hza._Deleted = 0
AND `hza`.RelatedModuleID = \'tru\'
AND `hza`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:8:"HazardID";s:3:"int";s:11:"HazCategory";N;s:10:"HazardType";N;s:11:"HazardTitle";s:12:"varchar(128)";s:12:"HazardStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:5:{s:8:"HazardID";s:5:"right";s:11:"HazCategory";s:4:"left";s:10:"HazardType";s:7:"justify";s:11:"HazardTitle";s:4:"left";s:12:"HazardStatus";s:4:"left";}}');
   $grids[7] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"insa";s:6:"phrase";s:18:"Insurance Policies";s:6:"number";i:7;s:6:"Fields";a:4:{s:16:"InsuranceAssocID";O:14:"invisiblefield":11:{s:4:"name";s:16:"InsuranceAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:116:"Record ID|An automatically assigned number used to associate insurance policies with organizations and insured risks";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"insa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:13:"InsuranceType";O:9:"viewfield":16:{s:4:"name";s:13:"InsuranceType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Policy Type|The type of insurance policy associated with the related record";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"insa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Policy";O:9:"viewfield":16:{s:4:"name";s:6:"Policy";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:134:"Policy|A description of the insurance policy based on a combination of field values assigned from within the Insurance Policies module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"insa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"PolicyAssociationType";O:9:"viewfield":16:{s:4:"name";s:21:"PolicyAssociationType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:145:"Association Type|A term established by the organization to define the nature of the relationship between an insurance policy and a related record";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"insa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `insa`
   
WHERE insa._Deleted = 0
   AND `insa`.RelatedModuleID = \'tru\'
AND `insa`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:917:"SELECT 
   `insa`.InsuranceAssocID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
NULLIF(CONCAT(IFNULL(`inst1`.InsuranceTypeTitle,\'\')),\'\') AS InsuranceType,
NULLIF(CONCAT(IFNULL(`org1`.Name,\'\'),\' | \',IFNULL(`ins1`.PolicyNumber,\'\')),\' | \') AS Policy,
`cod1`.Description AS PolicyAssociationType
FROM `insa`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`insa`.RelatedRecordID = rdc1.RecordID AND `insa`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `ins` AS ins1 
   ON (`insa`.PolicyID = `ins1`.PolicyID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`insa`.PolicyAssociationTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'208\')
   LEFT OUTER JOIN `inst` AS inst1 
   ON (`ins1`.InsuranceTypeID = `inst1`.InsuranceTypeID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`ins1`.CarrierNameID = `org1`.OrganizationID )
WHERE insa._Deleted = 0
AND `insa`.RelatedModuleID = \'tru\'
AND `insa`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"InsuranceAssocID";s:3:"int";s:13:"InsuranceType";N;s:6:"Policy";N;s:21:"PolicyAssociationType";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"InsuranceAssocID";s:5:"right";s:13:"InsuranceType";s:7:"justify";s:6:"Policy";s:7:"justify";s:21:"PolicyAssociationType";s:4:"left";}}');
   $grids[8] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"oppa";s:6:"phrase";s:17:"Operating Permits";s:6:"number";i:8;s:6:"Fields";a:4:{s:22:"OperatingPermitAssocID";O:14:"invisiblefield":11:{s:4:"name";s:22:"OperatingPermitAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:138:"Record ID|An automatically assigned number used to associate operating permits with equipment and activities requiring a permit to operate";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"oppa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"Organization|The name of the organization responsible for application for, and maintenance of, the operating permit";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"oppa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"PermitType";O:9:"viewfield":16:{s:4:"name";s:10:"PermitType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Permit Type|A classification used to group permits of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"oppa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"OppPermit";O:9:"viewfield":16:{s:4:"name";s:9:"OppPermit";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Permit|A combined field used to describe this operating permit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"oppa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `oppa`
   
WHERE oppa._Deleted = 0
   AND `oppa`.RelatedModuleID = \'tru\'
AND `oppa`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:571:"SELECT 
   `oppa`.OperatingPermitAssocID,
`org1`.Name AS Organization,
`cod1`.Description AS PermitType,
NULLIF(CONCAT(IFNULL(`opp1`.PermitName,\'\')),\'\') AS OppPermit
FROM `oppa`

   LEFT OUTER JOIN `opp` AS opp1 
   ON (`oppa`.OppPermitID = `opp1`.OppPermitID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`opp1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`opp1`.PermitTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'207\')
WHERE oppa._Deleted = 0
AND `oppa`.RelatedModuleID = \'tru\'
AND `oppa`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:22:"OperatingPermitAssocID";s:3:"int";s:12:"Organization";N;s:10:"PermitType";N;s:9:"OppPermit";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:22:"OperatingPermitAssocID";s:5:"right";s:12:"Organization";s:4:"left";s:10:"PermitType";s:4:"left";s:9:"OppPermit";s:7:"justify";}}');
   $grids[9] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"pub";s:6:"phrase";s:19:"Publicity Exposures";s:6:"number";i:9;s:6:"Fields";a:8:{s:19:"PublicityExposureID";O:14:"invisiblefield":11:{s:4:"name";s:19:"PublicityExposureID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Record ID|An automatically assigned number used to associate publicity exposures with related records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pub";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Organization|The organization at risk of the publicity exposure";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pub";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:25:"PublicityExposureCategory";O:9:"viewfield":16:{s:4:"name";s:25:"PublicityExposureCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Category|A broad categoy used to group publicity exposures of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pub";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"PublicityType";O:9:"viewfield":16:{s:4:"name";s:13:"PublicityType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Publicity Type|A combined field used to describe this publicity type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pub";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"PublicityScope";O:9:"viewfield":16:{s:4:"name";s:14:"PublicityScope";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:59:"Scope|The largest practical scope of the publicity exposure";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pub";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"ExposureTitle";O:9:"viewfield":16:{s:4:"name";s:13:"ExposureTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Exposure Title|A brief title used to describe the publicity exposure";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pub";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"ExposureCriticality";O:9:"viewfield":16:{s:4:"name";s:19:"ExposureCriticality";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"Criticality|A way of categorizing the critical nature of a public relations exposure";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pub";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ExposureStatus";O:9:"viewfield":16:{s:4:"name";s:14:"ExposureStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Status|Status of the publicity mitigation and/or management effort";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"pub";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `pub`
   
WHERE pub._Deleted = 0
   AND `pub`.RelatedModuleID = \'tru\'
AND `pub`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1136:"SELECT 
   `pub`.PublicityExposureID,
`pub`.OrganizationID,
`org1`.Name AS Organization,
`cod1`.Description AS PublicityExposureCategory,
NULLIF(CONCAT(IFNULL(`pubt1`.PublicityExposureType,\'\')),\'\') AS PublicityType,
`cod2`.Description AS PublicityScope,
`pub`.ExposureTitle,
`cod3`.Description AS ExposureCriticality,
`cod4`.Description AS ExposureStatus
FROM `pub`

   LEFT OUTER JOIN `org` AS org1 
   ON (`pub`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `pubt` AS pubt1 
   ON (`pub`.PublicityTypeID = `pubt1`.PublicityTypeID )
   LEFT OUTER JOIN `cod` AS cod2 
   ON (`pub`.PublicityScopeID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'91\')
   LEFT OUTER JOIN `cod` AS cod3 
   ON (`pub`.ExposureCriticalityID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = \'137\')
   LEFT OUTER JOIN `cod` AS cod4 
   ON (`pub`.ExposureStatusID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = \'268\')
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`pubt1`.PublicityExposureCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'136\')
WHERE pub._Deleted = 0
AND `pub`.RelatedModuleID = \'tru\'
AND `pub`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:8:{s:19:"PublicityExposureID";s:3:"int";s:12:"Organization";N;s:25:"PublicityExposureCategory";N;s:13:"PublicityType";N;s:14:"PublicityScope";N;s:13:"ExposureTitle";s:12:"varchar(128)";s:19:"ExposureCriticality";N;s:14:"ExposureStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:8:{s:19:"PublicityExposureID";s:5:"right";s:12:"Organization";s:4:"left";s:25:"PublicityExposureCategory";s:4:"left";s:13:"PublicityType";s:7:"justify";s:14:"PublicityScope";s:4:"left";s:13:"ExposureTitle";s:4:"left";s:19:"ExposureCriticality";s:4:"left";s:14:"ExposureStatus";s:4:"left";}}');
   $grids[10] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"vala";s:6:"phrase";s:15:"Cultural Values";s:6:"number";i:10;s:6:"Fields";a:5:{s:19:"ValuesAssociationID";O:14:"invisiblefield":11:{s:4:"name";s:19:"ValuesAssociationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Record ID|An automatically assigned number used to associate a mission, value, or belief with related records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"vala";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Values Organization|The name of the organization at risk of sustaining a values threat";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"vala";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"SharedValue";O:9:"viewfield":16:{s:4:"name";s:11:"SharedValue";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Value|A combined field used to describe this shared value when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"vala";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"ImpactType";O:9:"viewfield":16:{s:4:"name";s:10:"ImpactType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:121:"Impact Type|A method of grouping cultural impacts so that inferences may be drawn based on a predominance of impact types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"vala";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:22:"ValuesAssociationTitle";O:9:"viewfield":16:{s:4:"name";s:22:"ValuesAssociationTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Association Title|A short title or phrase used to describe the values association with the related record";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"vala";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `vala`
   
WHERE vala._Deleted = 0
   AND `vala`.RelatedModuleID = \'tru\'
AND `vala`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:857:"SELECT 
   `vala`.ValuesAssociationID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`org1`.Name AS Organization,
NULLIF(CONCAT(IFNULL(`val1`.ValueTitle,\'\')),\'\') AS SharedValue,
`cod1`.Description AS ImpactType,
`vala`.ValuesAssociationTitle
FROM `vala`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`vala`.RelatedRecordID = rdc1.RecordID AND `vala`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `vals` AS vals1 
   ON (`vala`.SharedValueID = `vals1`.SharedValueID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`vala`.ImpactTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'21\')
   LEFT OUTER JOIN `org` AS org1 
   ON (`vals1`.SharingOrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `val` AS val1 
   ON (`vals1`.ValueID = `val1`.ValueID )
WHERE vala._Deleted = 0
AND `vala`.RelatedModuleID = \'tru\'
AND `vala`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:19:"ValuesAssociationID";s:3:"int";s:12:"Organization";N;s:11:"SharedValue";N;s:10:"ImpactType";N;s:22:"ValuesAssociationTitle";s:12:"varchar(128)";}s:4:"name";N;s:10:"fieldAlign";a:5:{s:19:"ValuesAssociationID";s:5:"right";s:12:"Organization";s:4:"left";s:11:"SharedValue";s:7:"justify";s:10:"ImpactType";s:4:"left";s:22:"ValuesAssociationTitle";s:4:"left";}}');
   $grids[11] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"rega";s:6:"phrase";s:11:"Regulations";s:6:"number";i:11;s:6:"Fields";a:3:{s:17:"RegulationAssocID";O:14:"invisiblefield":11:{s:4:"name";s:17:"RegulationAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Record ID|An automatically assigned number used to associate governmental regulations with related records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:6:"Agency";O:9:"viewfield":16:{s:4:"name";s:6:"Agency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Agency|Name of the government agency or internal entity";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Regulation";O:9:"viewfield":16:{s:4:"name";s:10:"Regulation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Regulation|A description of the regulation based on a combination of field values assigned from within the Regulations module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `rega`
   
WHERE rega._Deleted = 0
   AND `rega`.RelatedModuleID = \'tru\'
AND `rega`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:646:"SELECT 
   `rega`.RegulationAssocID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`org1`.Name AS Agency,
NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation
FROM `rega`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`rega`.RelatedRecordID = rdc1.RecordID AND `rega`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `reg` AS reg1 
   ON (`rega`.RegulationID = `reg1`.RegulationID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`reg1`.AgencyID = `org1`.OrganizationID )
WHERE rega._Deleted = 0
AND `rega`.RelatedModuleID = \'tru\'
AND `rega`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:17:"RegulationAssocID";s:3:"int";s:6:"Agency";N;s:10:"Regulation";N;}s:4:"name";N;s:10:"fieldAlign";a:3:{s:17:"RegulationAssocID";s:5:"right";s:6:"Agency";s:4:"left";s:10:"Regulation";s:7:"justify";}}');
   $grids[12] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"rsk";s:6:"phrase";s:16:"Risk Imperatives";s:6:"number";i:12;s:6:"Fields";a:3:{s:12:"ImperativeID";O:14:"invisiblefield":11:{s:4:"name";s:12:"ImperativeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Record ID|An automatically assigned number used to track records within modules";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"rsk";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"RiskImperative";O:9:"viewfield":16:{s:4:"name";s:14:"RiskImperative";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Risk Imperative|The risk imperative which is associated with the related record";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"rsk";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"RiskDescription";O:9:"viewfield":16:{s:4:"name";s:15:"RiskDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:111:"Description|A detailed description of the manner in which the risk imperative is impacted by the related record";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"rsk";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `rsk`
   
WHERE rsk._Deleted = 0
   AND `rsk`.RelatedModuleID = \'tru\'
AND `rsk`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:487:"SELECT 
   `rsk`.ImperativeID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`cod1`.Description AS RiskImperative,
`rsk`.RiskDescription
FROM `rsk`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`rsk`.RelatedRecordID = rdc1.RecordID AND `rsk`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`rsk`.RiskImperativeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'234\')
WHERE rsk._Deleted = 0
AND `rsk`.RelatedModuleID = \'tru\'
AND `rsk`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:12:"ImperativeID";s:3:"int";s:14:"RiskImperative";N;s:15:"RiskDescription";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:3:{s:12:"ImperativeID";s:5:"right";s:14:"RiskImperative";s:4:"left";s:15:"RiskDescription";s:7:"justify";}}');
   $grids[13] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"rskcl";s:6:"phrase";s:20:"Risk Classifications";s:6:"number";i:13;s:6:"Fields";a:3:{s:11:"RiskClassID";O:14:"invisiblefield":11:{s:4:"name";s:11:"RiskClassID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Record ID|An automatically assigned number used to track risk classifications";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"rskcl";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"RiskClassification";O:9:"viewfield":16:{s:4:"name";s:18:"RiskClassification";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:78:"Risk Classification|The risk classification associated with the related record";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"rskcl";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"RiskClassDescription";O:9:"viewfield":16:{s:4:"name";s:20:"RiskClassDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Class Description|A detailed description of the risk classification";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"rskcl";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:150:"SELECT 
    count(*) 
FROM `rskcl`
   
WHERE rskcl._Deleted = 0
   AND `rskcl`.RelatedModuleID = \'tru\'
AND `rskcl`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:516:"SELECT 
   `rskcl`.RiskClassID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`cod1`.Description AS RiskClassification,
`rskcl`.RiskClassDescription
FROM `rskcl`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`rskcl`.RelatedRecordID = rdc1.RecordID AND `rskcl`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`rskcl`.RiskClassificationID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'16\')
WHERE rskcl._Deleted = 0
AND `rskcl`.RelatedModuleID = \'tru\'
AND `rskcl`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:11:"RiskClassID";s:3:"int";s:18:"RiskClassification";N;s:20:"RiskClassDescription";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:3:{s:11:"RiskClassID";s:5:"right";s:18:"RiskClassification";s:4:"left";s:20:"RiskClassDescription";s:7:"justify";}}');
   $grids[14] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"rsp";s:6:"phrase";s:22:"Level Responsibilities";s:6:"number";i:14;s:6:"Fields";a:4:{s:16:"ResponsibilityID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ResponsibilityID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:126:"Record ID|An automatically assigned number used to track organizational level responsibilities associated with related records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"rsp";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Organization|The organization where this level based responsibility is enforced";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"rsp";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"OrgLevel";O:9:"viewfield":16:{s:4:"name";s:8:"OrgLevel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Organization Level|The hierarchical level of the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"rsp";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"ResponsibilityTitle";O:9:"viewfield":16:{s:4:"name";s:19:"ResponsibilityTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Responsibility Title|A short phrase or title used to describe the organizational level responsibility";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"rsp";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `rsp`
   
WHERE rsp._Deleted = 0
   AND `rsp`.RelatedModuleID = \'tru\'
AND `rsp`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:457:"SELECT 
   `rsp`.ResponsibilityID,
`rsp`.OrganizationID,
`org1`.Name AS Organization,
`cod1`.Description AS OrgLevel,
`rsp`.ResponsibilityTitle
FROM `rsp`

   LEFT OUTER JOIN `org` AS org1 
   ON (`rsp`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`rsp`.OrgLevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'22\')
WHERE rsp._Deleted = 0
AND `rsp`.RelatedModuleID = \'tru\'
AND `rsp`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ResponsibilityID";s:3:"int";s:12:"Organization";N;s:8:"OrgLevel";N;s:19:"ResponsibilityTitle";s:12:"varchar(128)";}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ResponsibilityID";s:5:"right";s:12:"Organization";s:4:"left";s:8:"OrgLevel";s:4:"left";s:19:"ResponsibilityTitle";s:4:"left";}}');
   $grids[15] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"stda";s:6:"phrase";s:9:"Standards";s:6:"number";i:15;s:6:"Fields";a:5:{s:15:"StandardAssocID";O:14:"invisiblefield":11:{s:4:"name";s:15:"StandardAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Record ID|An automatically assigned number used to associate standards with related records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:33:"StandardsOrganizationAbbreviation";O:9:"viewfield":16:{s:4:"name";s:33:"StandardsOrganizationAbbreviation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Abbreviation|The official abbreviation of the standards organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Standard";O:9:"viewfield":16:{s:4:"name";s:8:"Standard";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:123:"Regulation|A description of the regulation based on a combination of field values assigned from within the Standards module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"MannerAffected";O:9:"viewfield":16:{s:4:"name";s:14:"MannerAffected";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:108:"Manner Affected|A detailed description of the manner in which the related record is affected by the standard";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ComplianceStatus";O:9:"viewfield":16:{s:4:"name";s:16:"ComplianceStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Compliance Status|Current compliance status";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"stda";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `stda`
   
WHERE stda._Deleted = 0
   AND `stda`.RelatedModuleID = \'tru\'
AND `stda`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:824:"SELECT 
   `stda`.StandardAssocID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`std1`.StandardsOrganizationAbbreviation AS StandardsOrganizationAbbreviation,
NULLIF(CONCAT(IFNULL(`std1`.StandardsOrganizationAbbreviation,\'\'),\' | \',IFNULL(`std1`.StandardCode,\'\'),\' \',IFNULL(`std1`.StandardSection,\'\')),\' |  \') AS Standard,
`stda`.MannerAffected,
`cod1`.Description AS ComplianceStatus
FROM `stda`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`stda`.RelatedRecordID = rdc1.RecordID AND `stda`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `std` AS std1 
   ON (`stda`.StandardID = `std1`.StandardID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`stda`.ComplianceStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'94\')
WHERE stda._Deleted = 0
AND `stda`.RelatedModuleID = \'tru\'
AND `stda`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:15:"StandardAssocID";s:3:"int";s:33:"StandardsOrganizationAbbreviation";N;s:8:"Standard";N;s:14:"MannerAffected";s:4:"text";s:16:"ComplianceStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:5:{s:15:"StandardAssocID";s:5:"right";s:33:"StandardsOrganizationAbbreviation";s:4:"left";s:8:"Standard";s:7:"justify";s:14:"MannerAffected";s:7:"justify";s:16:"ComplianceStatus";s:4:"left";}}');
   $grids[16] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"sup";s:6:"phrase";s:9:"Suppliers";s:6:"number";i:16;s:6:"Fields";a:5:{s:10:"SupplierID";O:14:"invisiblefield":11:{s:4:"name";s:10:"SupplierID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Record ID|An automatically assigned number used to track organizations which supply goods and/or services to the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:11:"SupplierOrg";O:9:"viewfield":16:{s:4:"name";s:11:"SupplierOrg";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:33:"Supplier|The name of the supplier";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"ContactCard";O:9:"viewfield":16:{s:4:"name";s:11:"ContactCard";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Contact Card|A combined field used to group basic contact information of a person";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"CostPerUnit";O:9:"viewfield":16:{s:4:"name";s:11:"CostPerUnit";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:104:"Cost Per Unit|A combined field used to describe the cost per unit when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"MinimumOrder";O:9:"viewfield":16:{s:4:"name";s:12:"MinimumOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:114:"Minimum Unit Order|A combined field used to describe the minimum unit order when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `sup`
   
WHERE sup._Deleted = 0
   AND `sup`.RelatedModuleID = \'tru\'
AND `sup`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1371:"SELECT 
   `sup`.SupplierID,
`sup`.OrganizationID,
`org1`.Name AS SupplierOrg,
NULLIF(CONCAT(IFNULL(`ppl1`.WorkPhone,\'\'),\', ext. \',IFNULL(`ppl1`.WorkExtension,\'\'),\' (work)\',\'<br />\',IFNULL(`ppl1`.MobilePhone,\'\'),\' (mobile)\',\'<br />\',IFNULL(`ppl1`.WorkFax,\'\'),\' (fax)\',\' <br /><a href=\\"mailto:\',IFNULL(`ppl1`.WorkEmail,\'\'),\'\\">\',IFNULL(`ppl1`.WorkEmail,\'\'),\'</a>\'),\', ext.  (work)<br /> (mobile)<br /> (fax) <br /><a href=\\\\\\"mailto:\\\\\\"></a>\') AS ContactCard,
NULLIF(CONCAT(IFNULL(ROUND(`sup`.UnitCost, 2),\'\'),\' \',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,\'\')),\'\'),\'\')),\' \') AS CostPerUnit,
NULLIF(CONCAT(IFNULL(`sup`.MinimumUnitOrder,\'\'),\' \',IFNULL(NULLIF(CONCAT(IFNULL(`uts2`.UnitName,\'\')),\'\'),\'\')),\' \') AS MinimumOrder
FROM `sup`

   LEFT OUTER JOIN `org` AS org1 
   ON (`sup`.SupplierOrgID = `org1`.OrganizationID )
   LEFT OUTER JOIN `inv` AS inv1 
    ON (`sup`.SupplierID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'sup\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'73\')
   LEFT OUTER JOIN `uts` AS uts1 
   ON (`sup`.BaseUnitID = `uts1`.UnitID )
   LEFT OUTER JOIN `uts` AS uts2 
   ON (`sup`.MinimumOrderUoMID = `uts2`.UnitID )
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
WHERE sup._Deleted = 0
AND `sup`.RelatedModuleID = \'tru\'
AND `sup`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:10:"SupplierID";s:3:"int";s:11:"SupplierOrg";N;s:11:"ContactCard";N;s:11:"CostPerUnit";s:4:"text";s:12:"MinimumOrder";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:5:{s:10:"SupplierID";s:5:"right";s:11:"SupplierOrg";s:4:"left";s:11:"ContactCard";s:7:"justify";s:11:"CostPerUnit";s:7:"justify";s:12:"MinimumOrder";s:7:"justify";}}');
   $grids[17] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"traca";s:6:"phrase";s:19:"Course Associations";s:6:"number";i:17;s:6:"Fields";a:6:{s:15:"TrainingAssocID";O:14:"invisiblefield":11:{s:4:"name";s:15:"TrainingAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:114:"Record ID|An automatically assigned number used to associate training courses with organizations and insured risks";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traca";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:140:"Organization|The organization with primary responsibility for the design, development, and support for this course throughout the enterprise";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traca";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"TrainingCategory";O:9:"viewfield":16:{s:4:"name";s:16:"TrainingCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Training Category|A word or short phrase used to describe the category of training";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traca";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"TrainingType";O:9:"viewfield":16:{s:4:"name";s:12:"TrainingType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Training Type|A combined field used to describe this training type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traca";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Course";O:9:"viewfield":16:{s:4:"name";s:6:"Course";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Course|A combined field used to describe this course when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traca";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"MannerAffected";O:9:"viewfield":16:{s:4:"name";s:14:"MannerAffected";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"Manner Affected|A detailed description of the manner in which the related record is affected by the training course";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"traca";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:150:"SELECT 
    count(*) 
FROM `traca`
   
WHERE traca._Deleted = 0
   AND `traca`.RelatedModuleID = \'tru\'
AND `traca`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1131:"SELECT 
   `traca`.TrainingAssocID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`org1`.Name AS Organization,
`cod1`.Description AS TrainingCategory,
NULLIF(CONCAT(IFNULL(`cod2`.Description,\'\'),\' - \',IFNULL(`trat1`.TrainingTypeTitle,\'\')),\' - \') AS TrainingType,
NULLIF(CONCAT(IFNULL(`tra1`.CourseTitle,\'\'),\' (\',IFNULL(`tra1`.CourseCode,\'\'),\')\'),\' ()\') AS Course,
`traca`.MannerAffected
FROM `traca`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`traca`.RelatedRecordID = rdc1.RecordID AND `traca`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `tra` AS tra1 
   ON (`traca`.CourseID = `tra1`.CourseID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`tra1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `trat` AS trat1 
   ON (`tra1`.TrainingTypeID = `trat1`.TrainingTypeID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`trat1`.TrainingCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'59\')
   LEFT OUTER JOIN `cod` AS cod2 
   ON (`trat1`.TrainingCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'59\')
WHERE traca._Deleted = 0
AND `traca`.RelatedModuleID = \'tru\'
AND `traca`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:6:{s:15:"TrainingAssocID";s:3:"int";s:12:"Organization";N;s:16:"TrainingCategory";N;s:12:"TrainingType";N;s:6:"Course";N;s:14:"MannerAffected";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:6:{s:15:"TrainingAssocID";s:5:"right";s:12:"Organization";s:4:"left";s:16:"TrainingCategory";s:4:"left";s:12:"TrainingType";s:7:"justify";s:6:"Course";s:7:"justify";s:14:"MannerAffected";s:7:"justify";}}');
   $grids[18] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prta";s:6:"phrase";s:16:"Accountabilities";s:6:"number";i:18;s:6:"Fields";a:4:{s:16:"ParticipantAccID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantAccID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Person Accountable|The name of the person accountable";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"AccountabilityType";O:9:"viewfield":16:{s:4:"name";s:18:"AccountabilityType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Accountability Type|The participant\'s specific type of accountability";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"AccountabilityStatus";O:9:"viewfield":16:{s:4:"name";s:20:"AccountabilityStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Accountability Status|The present status of this participant\'s ongoing involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `prta`
   
WHERE prta._Deleted = 0
   AND `prta`.RelatedModuleID = \'tru\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1172:"SELECT 
   `prta`.ParticipantAccID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonAccountable,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS AccountabilityType,
`cod1`.Description AS AccountabilityStatus
FROM `prta`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prta`.RelatedRecordID = rdc1.RecordID AND `prta`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`prta`.ParticipantAccID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'prta\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'70\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prta`.AccountabilityTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `acc` AS acc2 
    ON (`prta`.ParticipantAccID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = \'prta\'
     AND `acc2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`acc2`.AccountabilityStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prta._Deleted = 0
AND `prta`.RelatedModuleID = \'tru\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantAccID";s:3:"int";s:17:"PersonAccountable";N;s:18:"AccountabilityType";N;s:20:"AccountabilityStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantAccID";s:5:"right";s:17:"PersonAccountable";s:4:"left";s:18:"AccountabilityType";s:7:"justify";s:20:"AccountabilityStatus";s:4:"left";}}');
   $grids[19] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prti";s:6:"phrase";s:11:"Involvement";s:6:"number";i:19;s:6:"Fields";a:4:{s:16:"ParticipantInvID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantInvID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"PersonInvolved";O:9:"viewfield":16:{s:4:"name";s:14:"PersonInvolved";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Person Involved|The name of the person involved";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"InvolvementType";O:9:"viewfield":16:{s:4:"name";s:15:"InvolvementType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Involvement Type|The participant\'s specific type of involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"InvolvementStatus";O:9:"viewfield":16:{s:4:"name";s:17:"InvolvementStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Involvement Status|The present status of this participant\'s involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `prti`
   
WHERE prti._Deleted = 0
   AND `prti`.RelatedModuleID = \'tru\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1151:"SELECT 
   `prti`.ParticipantInvID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonInvolved,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS InvolvementType,
`cod1`.Description AS InvolvementStatus
FROM `prti`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prti`.RelatedRecordID = rdc1.RecordID AND `prti`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `inv` AS inv1 
    ON (`prti`.ParticipantInvID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'prti\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'78\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prti`.InvolvementTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `inv` AS inv2 
    ON (`prti`.ParticipantInvID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = \'prti\'
     AND `inv2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`inv2`.InvolvementStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prti._Deleted = 0
AND `prti`.RelatedModuleID = \'tru\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantInvID";s:3:"int";s:14:"PersonInvolved";N;s:15:"InvolvementType";N;s:17:"InvolvementStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantInvID";s:5:"right";s:14:"PersonInvolved";s:4:"left";s:15:"InvolvementType";s:7:"justify";s:17:"InvolvementStatus";s:4:"left";}}');
   $grids[20] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"filr";s:6:"phrase";s:14:"Physical Files";s:6:"number";i:20;s:6:"Fields";a:6:{s:12:"FileRecordID";O:14:"invisiblefield":11:{s:4:"name";s:12:"FileRecordID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Record ID|An automatically assigned number used to associate records with physical files";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"FilingOrganization";O:9:"viewfield":16:{s:4:"name";s:18:"FilingOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Filing Organization|The name of the organization where the  where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"File Location|Specific area within the facility where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"FileName";O:9:"viewfield":16:{s:4:"name";s:8:"FileName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"File Name|A short title or phrase used to identify the physical file";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"FileNumber";O:9:"viewfield":16:{s:4:"name";s:10:"FileNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"File Number|A number manually assigned to a file for tracking purposes";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"SystemNumber";O:9:"viewfield":16:{s:4:"name";s:12:"SystemNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:262:"System Number|A unique number assigned to the phisical file based on a combination of fields from within the file retention module. The system number is comprised of the filing organization ID, the filing location ID, the file type ID and the record retention ID";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `filr`
   
WHERE filr._Deleted = 0
   AND `filr`.RelatedModuleID = \'tru\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1267:"SELECT 
   `filr`.FileRecordID,
`filph1`.FilingOrganizationID AS FilingOrganizationID,
`org1`.Name AS FilingOrganization,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
`filph1`.FileName AS FileName,
`filph1`.FileNumber AS FileNumber,
NULLIF(CONCAT(IFNULL(`filph1`.FilingOrganizationID,\'\'),IFNULL(`orgla1`.LocationID,\'\'),IFNULL(`fil1`.FileTypeID,\'\'),IFNULL(`filph1`.FileRetentionID,\'\')),\'\') AS SystemNumber
FROM `filr`

   LEFT OUTER JOIN `filph` AS filph1 
   ON (`filr`.FileRetentionID = `filph1`.FileRetentionID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`filph1`.FilingOrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`filph1`.FileRetentionID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'filph\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `fil` AS fil1 
   ON (`filph1`.FileReqID = `fil1`.FileReqID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE filr._Deleted = 0
AND `filr`.RelatedModuleID = \'tru\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:6:{s:12:"FileRecordID";s:3:"int";s:18:"FilingOrganization";N;s:8:"Location";N;s:8:"FileName";N;s:10:"FileNumber";N;s:12:"SystemNumber";N;}s:4:"name";N;s:10:"fieldAlign";a:6:{s:12:"FileRecordID";s:5:"right";s:18:"FilingOrganization";s:4:"left";s:8:"Location";s:7:"justify";s:8:"FileName";s:4:"left";s:10:"FileNumber";s:4:"left";s:12:"SystemNumber";s:7:"justify";}}');
   $grids[21] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"bpc";s:6:"phrase";s:14:"Best Practices";s:6:"number";i:21;s:6:"Fields";a:4:{s:14:"BestPracticeID";O:14:"invisiblefield":11:{s:4:"name";s:14:"BestPracticeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Record ID|An automatically assigned number used to track best practices";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:20:"BestPracticeCategory";O:9:"viewfield":16:{s:4:"name";s:20:"BestPracticeCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Best Practice Category|A method of categorizing best practices of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"BestPracticeTitle";O:9:"viewfield":16:{s:4:"name";s:17:"BestPracticeTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Best Practice Title|A descriptive title of the best practice identified";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Evaluator|The individual evaluating and awarding the best practice";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `bpc`
   
WHERE bpc._Deleted = 0
   AND `bpc`.RelatedModuleID = \'tru\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:676:"SELECT 
   `bpc`.BestPracticeID,
`cod1`.Description AS BestPracticeCategory,
`bpc`.BestPracticeTitle,
`ppl1`.DisplayName AS PersonAccountable
FROM `bpc`

   LEFT OUTER JOIN `cod` AS cod1 
   ON (`bpc`.BestPracticeCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'108\')
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`bpc`.BestPracticeID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'bpc\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'142\')
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE bpc._Deleted = 0
AND `bpc`.RelatedModuleID = \'tru\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:14:"BestPracticeID";s:3:"int";s:20:"BestPracticeCategory";N;s:17:"BestPracticeTitle";s:12:"varchar(128)";s:17:"PersonAccountable";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:14:"BestPracticeID";s:5:"right";s:20:"BestPracticeCategory";s:4:"left";s:17:"BestPracticeTitle";s:4:"left";s:17:"PersonAccountable";s:4:"left";}}');
$content .= renderViewScreenSection($fields, $phrases, $SQL, $grids);

?>
