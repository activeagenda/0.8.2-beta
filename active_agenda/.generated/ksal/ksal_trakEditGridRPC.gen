<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    $grid = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:921:"SELECT 
   `trak`.TrainingKSAID,
   `cod2`.Description AS TrainingCategory,
   `trat1`.TrainingCategoryID AS TrainingCategoryID,
   NULLIF(CONCAT(IFNULL(`cod1`.Description,\'\'),\' - \',IFNULL(`trat1`.TrainingTypeTitle,\'\')),\' - \') AS TrainingType,
   `tra1`.TrainingTypeID AS TrainingTypeID,
   NULLIF(CONCAT(IFNULL(`tra1`.CourseTitle,\'\'),\' (\',IFNULL(`tra1`.CourseCode,\'\'),\')\'),\' ()\') AS Course,
   `trak`.CourseID,
   `tra1`.CourseCode AS CourseCode
FROM `trak`
   
     LEFT OUTER JOIN `tra` AS tra1 
   ON (`trak`.CourseID = `tra1`.CourseID )
     LEFT OUTER JOIN `trat` AS trat1 
   ON (`tra1`.TrainingTypeID = `trat1`.TrainingTypeID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`trat1`.TrainingCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'59\')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`trat1`.TrainingCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'59\')
WHERE
   trak.TrainingKSAID=\'/**RowID**/\'";s:9:"getRowSQL";s:720:"SELECT 
   `trak`.TrainingKSAID,
   NULLIF(CONCAT(IFNULL(`cod1`.Description,\'\'),\' - \',IFNULL(`trat1`.TrainingTypeTitle,\'\')),\' - \') AS TrainingType,
   `tra1`.CourseCode AS CourseCode,
   CONCAT(\'internal:view.php?mdl=\',\'tra\',\'&rid=\',`trak`.CourseID) AS CourseLink,
   NULLIF(CONCAT(IFNULL(`tra1`.CourseTitle,\'\'),\' (\',IFNULL(`tra1`.CourseCode,\'\'),\')\'),\' ()\') AS Course
FROM `trak`
   
     LEFT OUTER JOIN `tra` AS tra1 
   ON (`trak`.CourseID = `tra1`.CourseID )
     LEFT OUTER JOIN `trat` AS trat1 
   ON (`tra1`.TrainingTypeID = `trat1`.TrainingTypeID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`trat1`.TrainingCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'59\')
WHERE
   trak.TrainingKSAID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:5:{s:13:"TrainingKSAID";O:14:"invisiblefield":11:{s:4:"name";s:13:"TrainingKSAID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Record ID|An automatically assigned number used to materials required to conduct a course with courses offered by the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"TrainingCategoryID";O:14:"codecombofield":27:{s:4:"name";s:18:"TrainingCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Training Category|A word or short phrase used to describe the category of training";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'59\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'59\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:14:"TrainingTypeID";a:2:{s:4:"name";s:14:"TrainingTypeID";s:15:"listParentField";s:18:"TrainingCategoryID";}}s:8:"moduleID";s:4:"trak";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"59";}s:14:"TrainingTypeID";O:10:"combofield":26:{s:4:"name";s:14:"TrainingTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Training Type|A combined field used to describe this training type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"trat";s:10:"foreignKey";s:14:"TrainingTypeID";s:12:"foreignField";s:12:"TrainingType";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:352:"SELECT 
`trat`.TrainingTypeID AS ID, NULLIF(CONCAT(IFNULL(`cod1`.Description,\'\'),\' - \',IFNULL(`trat`.TrainingTypeTitle,\'\')),\' - \') AS Name, `trat`.TrainingCategoryID AS ParentID FROM `trat`
 
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`trat`.TrainingCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'59\')
WHERE trat._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:354:"SELECT 
`trat`.TrainingTypeID AS ID, NULLIF(CONCAT(IFNULL(`cod1`.Description,\'\'),\' - \',IFNULL(`trat`.TrainingTypeTitle,\'\')),\' - \') AS Name, `trat`.TrainingCategoryID AS ParentID FROM `trat`
 
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`trat`.TrainingCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'59\')

WHERE `trat`.TrainingTypeID = \'/*recordID*/\'";s:11:"parentField";s:18:"TrainingCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:8:"CourseID";a:1:{s:4:"name";s:8:"CourseID";}}s:8:"moduleID";s:4:"trak";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:8:"CourseID";O:10:"combofield":26:{s:4:"name";s:8:"CourseID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Course|A combined field used to describe this course when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"tra";s:10:"foreignKey";s:8:"CourseID";s:12:"foreignField";s:6:"Course";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:213:"SELECT 
`tra`.CourseID AS ID, NULLIF(CONCAT(IFNULL(`tra`.CourseTitle,\'\'),\' (\',IFNULL(`tra`.CourseCode,\'\'),\')\'),\' ()\') AS Name, `tra`.TrainingTypeID AS ParentID FROM `tra`
WHERE tra._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:209:"SELECT 
`tra`.CourseID AS ID, NULLIF(CONCAT(IFNULL(`tra`.CourseTitle,\'\'),\' (\',IFNULL(`tra`.CourseCode,\'\'),\')\'),\' ()\') AS Name, `tra`.TrainingTypeID AS ParentID FROM `tra`

WHERE `tra`.CourseID = \'/*recordID*/\'";s:11:"parentField";s:14:"TrainingTypeID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"CourseCode";a:1:{s:4:"name";s:10:"CourseCode";}}s:8:"moduleID";s:4:"trak";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`tra`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:10:"CourseCode";O:9:"viewfield":16:{s:4:"name";s:10:"CourseCode";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:156:"Course Code|A unique code used to identify a course offering. A course code can include numbers, letters and special characters; such as, dashes and periods";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:8:"CourseID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:13:"TrainingKSAID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"trak";s:6:"phrase";s:16:"Training Courses";s:6:"number";N;s:6:"Fields";a:4:{s:13:"TrainingKSAID";O:14:"invisiblefield":11:{s:4:"name";s:13:"TrainingKSAID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Record ID|An automatically assigned number used to materials required to conduct a course with courses offered by the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"TrainingType";O:9:"viewfield":16:{s:4:"name";s:12:"TrainingType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Training Type|A combined field used to describe this training type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"CourseCode";O:9:"viewfield":16:{s:4:"name";s:10:"CourseCode";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:156:"Course Code|A unique code used to identify a course offering. A course code can include numbers, letters and special characters; such as, dashes and periods";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Course";O:9:"viewfield":16:{s:4:"name";s:6:"Course";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Course|A combined field used to describe this course when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"trak";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:10:"CourseLink";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:103:"SELECT 
    count(*) 
FROM `trak`
   
WHERE trak._Deleted = 0
   AND `trak`.LevelID = \'/**RecordID**/\'
";s:7:"listSQL";s:721:"SELECT 
   `trak`.TrainingKSAID,
NULLIF(CONCAT(IFNULL(`cod1`.Description,\'\'),\' - \',IFNULL(`trat1`.TrainingTypeTitle,\'\')),\' - \') AS TrainingType,
`tra1`.CourseCode AS CourseCode,
CONCAT(\'internal:view.php?mdl=\',\'tra\',\'&rid=\',`trak`.CourseID) AS CourseLink,
NULLIF(CONCAT(IFNULL(`tra1`.CourseTitle,\'\'),\' (\',IFNULL(`tra1`.CourseCode,\'\'),\')\'),\' ()\') AS Course
FROM `trak`

   LEFT OUTER JOIN `tra` AS tra1 
   ON (`trak`.CourseID = `tra1`.CourseID )
   LEFT OUTER JOIN `trat` AS trat1 
   ON (`tra1`.TrainingTypeID = `trat1`.TrainingTypeID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`trat1`.TrainingCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'59\')
WHERE trak._Deleted = 0
AND `trak`.LevelID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:7:"LevelID";s:9:"parentKey";s:7:"LevelID";s:8:"PKFields";a:1:{i:0;s:13:"TrainingKSAID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');
?>