<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:18:{s:8:"ModuleID";O:9:"viewfield":16:{s:4:"name";s:8:"ModuleID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:237:"Module ID|A unique character ID assigned to each module of the application. Character ID\'s are usually between three and five characters. Main module ID\'s typically contain three characters and sub-modules contain four to five characters";s:8:"dataType";s:10:"varchar(5)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:4:"Name";O:9:"viewfield":16:{s:4:"name";s:4:"Name";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:34:"Module Name|The name of the module";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:12:"InternalLink";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"InternalLink";O:14:"invisiblefield":11:{s:4:"name";s:12:"InternalLink";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:10:"ModuleDesc";O:9:"viewfield":16:{s:4:"name";s:10:"ModuleDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Module Description|A detailed description of the purpose of the module";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:23:"GlobalDiscussionAddress";O:9:"viewfield":16:{s:4:"name";s:23:"GlobalDiscussionAddress";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Global Discussion ID|The ID assigned to the global discussion forum most relevant to this module";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:22:"LocalDiscussionAddress";O:9:"viewfield":16:{s:4:"name";s:22:"LocalDiscussionAddress";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Local Discussion ID|The ID assigned to the local discussion forum most relevant to this module";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"StandAlone";O:9:"viewfield":16:{s:4:"name";s:10:"StandAlone";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Stand Alone|Whether this module is a stand alone module";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"SubModule";O:9:"viewfield":16:{s:4:"name";s:9:"SubModule";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Sub Module|Whether this module is a sub module of another module";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"Association";O:9:"viewfield":16:{s:4:"name";s:11:"Association";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"Association|Whether this module is an association module which is used to associate many modules of different types";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Global";O:9:"viewfield":16:{s:4:"name";s:6:"Global";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Global|Whether this module is a global module which is available from within all other modules";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"Remote";O:9:"viewfield":16:{s:4:"name";s:6:"Remote";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Remote|Whether this module is a remote module, i.e. pointed to by RemoteFields from other modules";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ModuleStatus";O:9:"viewfield":16:{s:4:"name";s:12:"ModuleStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Module Status|A short description of the technical implementation status of the module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"LastParsed";O:9:"viewfield":16:{s:4:"name";s:10:"LastParsed";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Last Parsed|Most recent date and time when the module was parsed";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"RevisionAuthor";O:9:"viewfield":16:{s:4:"name";s:14:"RevisionAuthor";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"Revision Author|The author of the XML specification file used to generate the module";s:8:"dataType";s:11:"varchar(30)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"RevisionNumber";O:9:"viewfield":16:{s:4:"name";s:14:"RevisionNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:117:"Revision Number|A number that was automatically assigned by the software versioning system when the revision was made";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"RevisionDate";O:9:"viewfield":16:{s:4:"name";s:12:"RevisionDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Revision Date|The revision date of the XML specification file used to generate the module";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"ModuleDependencies";O:9:"viewfield":16:{s:4:"name";s:18:"ModuleDependencies";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Module Dependencies|A calculated field representing the total number of modules dependent upon this module";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:16:"CodeDependencies";O:9:"viewfield":16:{s:4:"name";s:16:"CodeDependencies";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:104:"Code Dependencies|A calculated field representing the total number of codes the module is dependent upon";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'ModuleID' => gettext("Module ID|A unique character ID assigned to each module of the application. Character ID's are usually between three and five characters. Main module ID's typically contain three characters and sub-modules contain four to five characters"),
   'Name' => gettext("Module Name|The name of the module"),
   'InternalLink' => gettext("Internal Link|A link to the List screen of that module"),
   'ModuleDesc' => gettext("Module Description|A detailed description of the purpose of the module"),
   'GlobalDiscussionAddress' => gettext("Global Discussion ID|The ID assigned to the global discussion forum most relevant to this module"),
   'LocalDiscussionAddress' => gettext("Local Discussion ID|The ID assigned to the local discussion forum most relevant to this module"),
   'StandAlone' => gettext("Stand Alone|Whether this module is a stand alone module"),
   'SubModule' => gettext("Sub Module|Whether this module is a sub module of another module"),
   'Association' => gettext("Association|Whether this module is an association module which is used to associate many modules of different types"),
   'Global' => gettext("Global|Whether this module is a global module which is available from within all other modules"),
   'Remote' => gettext("Remote|Whether this module is a remote module, i.e. pointed to by RemoteFields from other modules"),
   'ModuleStatus' => gettext("Module Status|A short description of the technical implementation status of the module"),
   'LastParsed' => gettext("Last Parsed|Most recent date and time when the module was parsed"),
   'RevisionAuthor' => gettext("Revision Author|The author of the XML specification file used to generate the module"),
   'RevisionNumber' => gettext("Revision Number|A number that was automatically assigned by the software versioning system when the revision was made"),
   'RevisionDate' => gettext("Revision Date|The revision date of the XML specification file used to generate the module"),
   'ModuleDependencies' => gettext("Module Dependencies|A calculated field representing the total number of modules dependent upon this module"),
   'CodeDependencies' => gettext("Code Dependencies|A calculated field representing the total number of codes the module is dependent upon")
   );


    $ownerField = '';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `mod`.ModuleID,
   NULLIF(CONCAT('internal:list.php?mdl=',IFNULL(`mod`.ModuleID,'')),'internal:list.php?mdl=') AS InternalLink,
   `mod`.Name,
   `mod`.ModuleDesc,
   `mod`.GlobalDiscussionAddress,
   `mod`.LocalDiscussionAddress,
   `mod`.StandAlone,
   `mod`.SubModule,
   `mod`.Association,
   `mod`.Global,
   `mod`.Remote,
   `cod1`.Description AS ModuleStatus,
   `mod`.LastParsed,
   `mod`.RevisionAuthor,
   `mod`.RevisionNumber,
   `mod`.RevisionDate,
   `modd1`.ModuleDependencies AS ModuleDependencies,
   `codtd1`.CodeDependencies AS CodeDependencies,
   NULLIF(CONCAT(IFNULL(`mod`.Name,''),' | ',IFNULL(`cod1`.Description,''),' Last parsed: ',IFNULL(`mod`.LastParsed,'')),' |  Last parsed: ') AS RecordLabel
FROM `mod`
   
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`mod`.ModuleStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '272')
     LEFT OUTER JOIN (SELECT 
COUNT(`modd`.DependencyID) AS ModuleDependencies,
`modd`.ModuleID FROM `modd` 
 WHERE `modd`._Deleted = 0 
GROUP BY `modd`.ModuleID 
) AS modd1 
ON (`mod`.ModuleID = modd1.ModuleID) 
     LEFT OUTER JOIN (SELECT 
COUNT(`codtd`.CodeTypeID) AS CodeDependencies,
`codtd`.DependencyID FROM `codtd` 
 WHERE `codtd`._Deleted = 0 
GROUP BY `codtd`.DependencyID 
) AS codtd1 
ON (`mod`.ModuleID = codtd1.DependencyID) 
WHERE
   mod.ModuleID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Modules"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Module") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|The screen used to edit summary information about modules") );
      $tempTabs['Issues'] = array( "edit.php?scr=Issues&$tabsQS", gettext("Issues|Associate issue reports with a module") );
      $tempTabs['Direction'] = array( "edit.php?scr=Direction&$tabsQS", gettext("Direction|Associate organizational direction with a module") );
      $tempTabs['GapAnalysis'] = array( "edit.php?scr=GapAnalysis&$tabsQS", gettext("Gap Analysis|Associate gap analysis criteria with a module") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Module") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Module") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Module") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Module") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Module") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Module");
    $screenPhrase = gettext("View|The screen used to view summary information about modules");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
$content .= '<h1>'. gettext("Associations") .'</h1>';
$fields = '';
$phrases = array();
$SQL = '';
   $grids = array();
   $grids[1] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"modd";s:6:"phrase";s:17:"Dependent Modules";s:6:"number";i:1;s:6:"Fields";a:6:{s:18:"ModuleDependencyID";O:14:"invisiblefield":11:{s:4:"name";s:18:"ModuleDependencyID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Record ID|An automatically assigned number used to associate module dependencies with dependent modules";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"modd";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"DependencyID";O:9:"viewfield":16:{s:4:"name";s:12:"DependencyID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Dependent Module ID|The name of the module dependency";s:8:"dataType";s:10:"varchar(5)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"modd";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Dependency";O:9:"viewfield":16:{s:4:"name";s:10:"Dependency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:49:"Dependent Module|The name of the dependent module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"modd";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ForeignDependency";O:9:"viewfield":16:{s:4:"name";s:17:"ForeignDependency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:44:"Foreign|Whether this is a foreign dependency";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"modd";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"RemoteDependency";O:9:"viewfield":16:{s:4:"name";s:16:"RemoteDependency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:42:"Remote|Whether this is a remote dependency";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"modd";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"SubModDependency";O:9:"viewfield":16:{s:4:"name";s:16:"SubModDependency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:50:"Sub Module|Whether this is a sub-module dependency";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"modd";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:104:"SELECT 
    count(*) 
FROM `modd`
   
WHERE modd._Deleted = 0
   AND `modd`.ModuleID = \'/**RecordID**/\'
";s:7:"listSQL";s:319:"SELECT 
   `modd`.ModuleDependencyID,
`modd`.DependencyID,
`mod1`.Name AS Dependency,
`modd`.ForeignDependency,
`modd`.RemoteDependency,
`modd`.SubModDependency
FROM `modd`

   LEFT OUTER JOIN `mod` AS mod1 
   ON (`modd`.DependencyID = `mod1`.ModuleID )
WHERE modd._Deleted = 0
AND `modd`.ModuleID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:8:"ModuleID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:6:{s:18:"ModuleDependencyID";s:3:"int";s:12:"DependencyID";s:10:"varchar(5)";s:10:"Dependency";N;s:17:"ForeignDependency";s:4:"bool";s:16:"RemoteDependency";s:4:"bool";s:16:"SubModDependency";s:4:"bool";}s:4:"name";N;s:10:"fieldAlign";a:6:{s:18:"ModuleDependencyID";s:5:"right";s:12:"DependencyID";s:4:"left";s:10:"Dependency";s:4:"left";s:17:"ForeignDependency";s:6:"center";s:16:"RemoteDependency";s:6:"center";s:16:"SubModDependency";s:6:"center";}}');
   $grids[2] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"codtd";s:6:"phrase";s:17:"Code Dependencies";s:6:"number";i:2;s:6:"Fields";a:3:{s:20:"CodeTypeDependencyID";O:14:"invisiblefield":11:{s:4:"name";s:20:"CodeTypeDependencyID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Record ID|An automatically assigned number used to associate code type dependencies with dependent modules";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"codtd";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:10:"CodeTypeID";O:9:"viewfield":16:{s:4:"name";s:10:"CodeTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:54:"Code Type ID|A number used to track code type records.";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"codtd";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"CodeType";O:9:"viewfield":16:{s:4:"name";s:8:"CodeType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Code Type|A combined field used to describe this code type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"codtd";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:111:"SELECT 
    count(*) 
FROM `codtd`
   
WHERE codtd._Deleted = 0
   AND `codtd`.DependencyID = \'/**RecordID**/\'
";s:7:"listSQL";s:255:"SELECT 
   `codtd`.CodeTypeDependencyID,
`codtd`.CodeTypeID,
`codt1`.Name AS CodeType
FROM `codtd`

   LEFT OUTER JOIN `codt` AS codt1 
   ON (`codtd`.CodeTypeID = `codt1`.CodeTypeID )
WHERE codtd._Deleted = 0
AND `codtd`.DependencyID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:12:"DependencyID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:20:"CodeTypeDependencyID";s:3:"int";s:10:"CodeTypeID";s:3:"int";s:8:"CodeType";N;}s:4:"name";N;s:10:"fieldAlign";a:3:{s:20:"CodeTypeDependencyID";s:5:"right";s:10:"CodeTypeID";s:5:"right";s:8:"CodeType";s:4:"left";}}');
   $grids[3] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"modir";s:6:"phrase";s:13:"Issue Reports";s:6:"number";i:3;s:6:"Fields";a:6:{s:13:"IssueReportID";O:14:"invisiblefield":11:{s:4:"name";s:13:"IssueReportID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Issue ID|An automatically assigned number used to track application issues which need to be addressed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"modir";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:9:"IssueDate";O:9:"viewfield":16:{s:4:"name";s:9:"IssueDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:59:"Issue Date|The date the issue was submitted to be addressed";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"modir";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"IssueType";O:9:"viewfield":16:{s:4:"name";s:9:"IssueType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Issue Type|The type of issue associated with the report";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"modir";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"IssueTitle";O:9:"viewfield":16:{s:4:"name";s:10:"IssueTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Issue Title|A brief title used to identify the issue being reported";s:8:"dataType";s:12:"varchar(255)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"modir";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"HoursEstimate";O:9:"viewfield":16:{s:4:"name";s:13:"HoursEstimate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:80:"Time Estimate (hours)|The number of hours estimated to address this issue report";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"modir";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"IssueStatus";O:9:"viewfield":16:{s:4:"name";s:11:"IssueStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:45:"Issue Status|The status of the reported issue";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"modir";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:107:"SELECT 
    count(*) 
FROM `modir`
   
WHERE modir._Deleted = 0
   AND `modir`.ModuleID = \'/**RecordID**/\'
";s:7:"listSQL";s:710:"SELECT 
   `modir`.IssueReportID,
`modir`.OrganizationID,
`dat1`.RelatedDate AS IssueDate,
`cod1`.Description AS IssueType,
`modir`.IssueTitle,
`modir`.HoursEstimate,
`cod2`.Description AS IssueStatus
FROM `modir`

   LEFT OUTER JOIN `dat` AS dat1 
    ON (`modir`.IssueReportID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'modir\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'37\')
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`modir`.IssueTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'88\')
   LEFT OUTER JOIN `cod` AS cod2 
   ON (`modir`.IssueStatusID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'271\')
WHERE modir._Deleted = 0
AND `modir`.ModuleID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:8:"ModuleID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:6:{s:13:"IssueReportID";s:3:"int";s:9:"IssueDate";s:4:"date";s:9:"IssueType";N;s:10:"IssueTitle";s:12:"varchar(255)";s:13:"HoursEstimate";s:5:"float";s:11:"IssueStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:6:{s:13:"IssueReportID";s:5:"right";s:9:"IssueDate";s:6:"center";s:9:"IssueType";s:4:"left";s:10:"IssueTitle";s:4:"left";s:13:"HoursEstimate";s:5:"right";s:11:"IssueStatus";s:4:"left";}}');
   $grids[4] = unserialize('O:8:"viewgrid":21:{s:13:"orderByFields";a:1:{s:9:"SortOrder";N;}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:1;s:15:"verticalFormats";a:2:{s:14:"DirectionTitle";s:10:"TitleField";s:9:"Direction";s:12:"FeatureField";}s:8:"moduleID";s:5:"moddr";s:6:"phrase";s:16:"Module Direction";s:6:"number";i:4;s:6:"Fields";a:6:{s:17:"ModuleDirectionID";O:14:"invisiblefield":11:{s:4:"name";s:17:"ModuleDirectionID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:135:"Record ID|An automatically assigned number used to track module specific directions provided to users based on the default organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"moddr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"DirectionTitle";O:9:"viewfield":16:{s:4:"name";s:14:"DirectionTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Title|A short but descriptive title for the direction being provided";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"moddr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"Direction";O:9:"viewfield":16:{s:4:"name";s:9:"Direction";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:211:"Direction|Detailed directions regarding the use of a module at a specific location. Directions can include data entry, internal policy, or other direction issued throughout an organization to standardize results";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"moddr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ModifiedDate";O:9:"viewfield":16:{s:4:"name";s:12:"ModifiedDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:73:"Last Modified|Automatic entry of the last date the direction was modified";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"moddr";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:10:"ModifiedBy";O:9:"viewfield":16:{s:4:"name";s:10:"ModifiedBy";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Modified By|Automatic entry of the last user to modify the direction";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"moddr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"SortOrder";O:14:"invisiblefield":11:{s:4:"name";s:9:"SortOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}}s:8:"countSQL";s:269:"SELECT 
    count(*) 
FROM `moddr`
   
   LEFT OUTER JOIN `org` AS org1 
   ON (`moddr`.OrganizationID = `org1`.DirectionOrganizationID )
WHERE moddr._Deleted = 0
   AND `org1`.OrganizationID = \'[**OwnerOrganizationID**]\'
AND `moddr`.RelatedModuleID = \'/**RecordID**/\'
";s:7:"listSQL";s:509:"SELECT 
   `moddr`.ModuleDirectionID,
`moddr`.OrganizationID,
`moddr`.DirectionTitle,
`moddr`.Direction,
`moddr`._ModDate AS ModifiedDate,
`ppl1`.DisplayName AS ModifiedBy,
`moddr`.SortOrder
FROM `moddr`

   LEFT OUTER JOIN `org` AS org1 
   ON (`moddr`.OrganizationID = `org1`.DirectionOrganizationID )
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`moddr`._ModBy = `ppl1`.PersonID )
WHERE moddr._Deleted = 0
AND `org1`.OrganizationID = \'[**OwnerOrganizationID**]\'
AND `moddr`.RelatedModuleID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedModuleID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:1:{s:13:"suppressTitle";b:1;}s:10:"fieldTypes";a:6:{s:17:"ModuleDirectionID";s:3:"int";s:14:"DirectionTitle";s:12:"varchar(128)";s:9:"Direction";s:4:"text";s:12:"ModifiedDate";s:8:"datetime";s:10:"ModifiedBy";N;s:9:"SortOrder";s:3:"int";}s:4:"name";N;s:10:"conditions";a:1:{s:22:"DirectedOrganizationID";s:25:"[**OwnerOrganizationID**]";}s:10:"fieldAlign";a:6:{s:17:"ModuleDirectionID";s:5:"right";s:14:"DirectionTitle";s:4:"left";s:9:"Direction";s:7:"justify";s:12:"ModifiedDate";s:6:"center";s:10:"ModifiedBy";s:4:"left";s:9:"SortOrder";s:5:"right";}}');
   $grids[5] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"gap";s:6:"phrase";s:17:"Gap Analysis Item";s:6:"number";i:5;s:6:"Fields";a:5:{s:13:"GapAnalysisID";O:14:"invisiblefield":11:{s:4:"name";s:13:"GapAnalysisID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:102:"Record ID|An automatically assigned number used to track application issues which need to be addressed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"gap";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"AnalysisType";O:9:"viewfield":16:{s:4:"name";s:12:"AnalysisType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:57:"Analysis Type|The specific type of gap analysis performed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"gap";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"AnalysisItem";O:9:"viewfield":16:{s:4:"name";s:12:"AnalysisItem";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Analysis Item|A brief title used to identify the item being analyzed for gaps";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"gap";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"HoursEstimate";O:9:"viewfield":16:{s:4:"name";s:13:"HoursEstimate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Estimate (hours)|The number of hours estimated to analyze gaps in the business process";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"gap";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"AdvancedCopy";O:9:"viewfield":16:{s:4:"name";s:12:"AdvancedCopy";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:134:"Send Advance Copy|Whether an advanced copy of the gap analysis item should be sent to the reviewer prior to the scheduled gap analysis";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"gap";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:101:"SELECT 
    count(*) 
FROM `gap`
   
WHERE gap._Deleted = 0
   AND `gap`.ModuleID = \'/**RecordID**/\'
";s:7:"listSQL";s:317:"SELECT 
   `gap`.GapAnalysisID,
`cod1`.Description AS AnalysisType,
`gap`.AnalysisItem,
`gap`.HoursEstimate,
`gap`.AdvancedCopy
FROM `gap`

   LEFT OUTER JOIN `cod` AS cod1 
   ON (`gap`.AnalysisTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'157\')
WHERE gap._Deleted = 0
AND `gap`.ModuleID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:8:"ModuleID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:13:"GapAnalysisID";s:3:"int";s:12:"AnalysisType";N;s:12:"AnalysisItem";s:12:"varchar(128)";s:13:"HoursEstimate";s:5:"float";s:12:"AdvancedCopy";s:4:"bool";}s:4:"name";N;s:10:"fieldAlign";a:5:{s:13:"GapAnalysisID";s:5:"right";s:12:"AnalysisType";s:4:"left";s:12:"AnalysisItem";s:4:"left";s:13:"HoursEstimate";s:5:"right";s:12:"AdvancedCopy";s:6:"center";}}');
$content .= renderViewScreenSection($fields, $phrases, $SQL, $grids);

?>
