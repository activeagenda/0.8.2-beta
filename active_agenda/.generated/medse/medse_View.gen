<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:14:{s:15:"ScheduledExamID";O:9:"viewfield":16:{s:4:"name";s:15:"ScheduledExamID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Record ID|An automatically assigned number used to track medical examinations";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"MedicalExamType";O:9:"viewfield":16:{s:4:"name";s:15:"MedicalExamType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Exam Type|The specific type of medical examination to be performed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"MedicalExamTitle";O:9:"viewfield":16:{s:4:"name";s:16:"MedicalExamTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Title|A title or phrase used to describe the medical examination";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"MedicalExamDesc";O:9:"viewfield":16:{s:4:"name";s:15:"MedicalExamDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Description|A brief but thorough description of the medical examination";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"MedicalExamCriteria";O:9:"viewfield":16:{s:4:"name";s:19:"MedicalExamCriteria";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:111:"Criteria|A brief but thorough description of the qualification criteria associated with the medical examination";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ScheduleFrequency";O:9:"viewfield":16:{s:4:"name";s:17:"ScheduleFrequency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:133:"Schedule Frequency|The frequency at which the medical examination shall be performed for individuals meeting the examination criteria";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Examinee";O:9:"viewfield":16:{s:4:"name";s:8:"Examinee";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:57:"Examinee|The individual scheduled for medical examination";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ScheduledProvider";O:9:"viewfield":16:{s:4:"name";s:17:"ScheduledProvider";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Scheduled Provider|The name of the provider scheduled to perform the medical examination";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"ScheduledDate";O:9:"viewfield":16:{s:4:"name";s:13:"ScheduledDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Schedule Date|The date the medical examination is scheduled to occur";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ActualExamDate";O:9:"viewfield":16:{s:4:"name";s:14:"ActualExamDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:60:"Exam Date|The date the medical examination actually occurred";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"NextExamDate";O:9:"viewfield":16:{s:4:"name";s:12:"NextExamDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:145:"Next Exam Date|The date of the next required examination based on the actual exam date and the schedule frequency associated with the examination";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"ExamResults";O:9:"viewfield":16:{s:4:"name";s:11:"ExamResults";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:51:"Exam Results|The results of the medical examination";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ExamResultsDetail";O:9:"viewfield":16:{s:4:"name";s:17:"ExamResultsDetail";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:57:"Details|A detailed description of the examination results";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IsBestPractice";O:14:"invisiblefield":11:{s:4:"name";s:14:"IsBestPractice";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'ScheduledExamID' => gettext("Record ID|An automatically assigned number used to track medical examinations"),
   'MedicalExamType' => gettext("Exam Type|The specific type of medical examination to be performed"),
   'MedicalExamTitle' => gettext("Title|A title or phrase used to describe the medical examination"),
   'MedicalExamDesc' => gettext("Description|A brief but thorough description of the medical examination"),
   'MedicalExamCriteria' => gettext("Criteria|A brief but thorough description of the qualification criteria associated with the medical examination"),
   'ScheduleFrequency' => gettext("Schedule Frequency|The frequency at which the medical examination shall be performed for individuals meeting the examination criteria"),
   'Examinee' => gettext("Examinee|The individual scheduled for medical examination"),
   'ScheduledProvider' => gettext("Scheduled Provider|The name of the provider scheduled to perform the medical examination"),
   'ScheduledDate' => gettext("Schedule Date|The date the medical examination is scheduled to occur"),
   'ActualExamDate' => gettext("Exam Date|The date the medical examination actually occurred"),
   'NextExamDate' => gettext("Next Exam Date|The date of the next required examination based on the actual exam date and the schedule frequency associated with the examination"),
   'ExamResults' => gettext("Exam Results|The results of the medical examination"),
   'ExamResultsDetail' => gettext("Details|A detailed description of the examination results"),
   'IsBestPractice' => gettext("Is Best Practice|Whether the associated record is a best practice")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    $useBestPractices = true;

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `medse`.ScheduledExamID,
   NULLIF(CONCAT(IFNULL(`medet1`.ExamType,'')),'') AS MedicalExamType,
   `med1`.MedicalExamTitle AS MedicalExamTitle,
   `med1`.MedicalExamDesc AS MedicalExamDesc,
   `med1`.MedicalExamCriteria AS MedicalExamCriteria,
   NULLIF(CONCAT(IFNULL(`med1`.SchedFreq,''),' ',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),''),'')),' ') AS ScheduleFrequency,
   `ppl4`.DisplayName AS Examinee,
   `org3`.Name AS ScheduledProvider,
   `dat3`.RelatedDate AS ScheduledDate,
   `dat4`.RelatedDate AS ActualExamDate,
   IFNULL(`dat4`.RelatedDate, 0) + IFNULL(NULLIF(CONCAT(IFNULL(`med1`.SchedFreq,''),' ',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),''),'')),' '), 0) AS NextExamDate,
   `cod5`.Description AS ExamResults,
   `medse`.ExamResultsDetail,
   `bpc1`.IsBestPractice AS IsBestPractice,
   NULLIF(CONCAT(IFNULL(`org1`.Name,''),' | ',IFNULL(`ppl2`.LastName,''),', ',IFNULL(`ppl2`.FirstName,''),' | ',IFNULL(`med1`.MedicalExamTitle,''),' | ',IFNULL(`dat4`.RelatedDate,'')),' | ,  |  | ') AS RecordLabel,
   `med1`.OrganizationID AS OrganizationID
FROM `medse`
   
     LEFT OUTER JOIN `med` AS med1 
   ON (`medse`.MedicalExamID = `med1`.MedicalExamID )
     LEFT OUTER JOIN `acc` AS acc2 
    ON (`medse`.ScheduledExamID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = 'medse'
     AND `acc2`._Deleted = 0
     AND `acc2`.AccountabilityDescriptorID = '86')
     LEFT OUTER JOIN `org` AS org3 
   ON (`medse`.ScheduledProviderID = `org3`.OrganizationID )
     LEFT OUTER JOIN `dat` AS dat3 
    ON (`medse`.ScheduledExamID = `dat3`.SourceRecordID 
     AND `dat3`.SourceModuleID = 'medse'
     AND `dat3`._Deleted = 0
     AND `dat3`.DateDescriptorID = '51')
     LEFT OUTER JOIN `dat` AS dat4 
    ON (`medse`.ScheduledExamID = `dat4`.SourceRecordID 
     AND `dat4`.SourceModuleID = 'medse'
     AND `dat4`._Deleted = 0
     AND `dat4`.DateDescriptorID = '24')
     LEFT OUTER JOIN `cod` AS cod5 
   ON (`medse`.ExamResultsID = `cod5`.CodeID 
     AND `cod5`.CodeTypeID = '282')
     LEFT OUTER JOIN (SELECT 
COUNT(`bpc`.BestPracticeID) AS IsBestPractice,
`bpc`.RelatedRecordID FROM `bpc` 
 WHERE `bpc`._Deleted = 0 
 AND 'medse' = `bpc`.RelatedModuleID
GROUP BY `bpc`.RelatedRecordID 
) AS bpc1 
ON (`medse`.ScheduledExamID = bpc1.RelatedRecordID) 
     LEFT OUTER JOIN `medet` AS medet1 
   ON (`med1`.MedicalExamTypeID = `medet1`.MedicalExamTypeID )
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`med1`.SchedFreqUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`med1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `pple` AS pple1 
   ON (`acc2`.PersonAccountableID = `pple1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`acc2`.PersonAccountableID = `ppl2`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl4 
   ON (`pple1`.PersonID = `ppl4`.PersonID )
WHERE
   medse.ScheduledExamID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Scheduled Examinations"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Scheduled Examination") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about the scheduled medical examination") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the scheduled medical examination") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the scheduled medical examination") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("File Retention|Associate physical files with the scheduled medical examination") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the scheduled medical examination") , 'bpc');
      $tempTabs['Reports'] = array( "reports.php?scr=Reports&$tabsQS", gettext("Reports|View reports for the scheduled medical examination") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Scheduled Examination") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Scheduled Examination") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Scheduled Examination") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Scheduled Examination") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Scheduled Examination") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Scheduled Examination") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Scheduled Examination") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Scheduled Examination");
    $screenPhrase = gettext("View|View summary information about the scheduled medical examination");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
$content .= '<h1>'. gettext("Associations") .'</h1>';
$fields = '';
$phrases = array();
$SQL = '';
   $grids = array();
   $grids[1] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"medee";s:6:"phrase";s:20:"Examination Elements";s:6:"number";i:1;s:6:"Fields";a:3:{s:20:"MedicalExamElementID";O:14:"invisiblefield":11:{s:4:"name";s:20:"MedicalExamElementID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:102:"Record ID|An automatically assigned number used to track elements associated with medical examinations";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"medee";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:11:"ExamElement";O:9:"viewfield":16:{s:4:"name";s:11:"ExamElement";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:58:"Exam Element|A specific element of the medical examination";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"medee";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"ExamElementDetail";O:9:"viewfield":16:{s:4:"name";s:17:"ExamElementDetail";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"Element Detail|A Detailed description of the medical exam element and related performance criteria";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"medee";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:197:"SELECT 
    count(*) 
FROM `medee`
   
 INNER JOIN `medse` AS `parent` ON `medee`.MedicalExamID = `parent`.MedicalExamID
WHERE medee._Deleted = 0
   AND `parent`.ScheduledExamID = \'/**RecordID**/\'
";s:7:"listSQL";s:517:"SELECT 
   `medee`.MedicalExamElementID,
`med1`.OrganizationID AS OrganizationID,
`cod1`.Description AS ExamElement,
`medee`.ExamElementDetail
FROM `medee`

   LEFT OUTER JOIN `med` AS med1 
   ON (`medee`.MedicalExamID = `med1`.MedicalExamID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`medee`.ExamElementID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'142\')
 INNER JOIN `medse` AS `parent` ON `medee`.MedicalExamID = `parent`.MedicalExamID
WHERE medee._Deleted = 0
AND `parent`.ScheduledExamID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:13:"MedicalExamID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:20:"MedicalExamElementID";s:3:"int";s:11:"ExamElement";N;s:17:"ExamElementDetail";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:3:{s:20:"MedicalExamElementID";s:5:"right";s:11:"ExamElement";s:4:"left";s:17:"ExamElementDetail";s:7:"justify";}}');
   $grids[2] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"medep";s:6:"phrase";s:16:"Procedural Steps";s:6:"number";i:2;s:6:"Fields";a:4:{s:19:"ExamProcedureStepID";O:14:"invisiblefield":11:{s:4:"name";s:19:"ExamProcedureStepID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:123:"Record ID|An automatically assigned number used to associate medical examination procedural steps with medical examinations";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"medep";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"ProcedureStepOrder";O:9:"viewfield":16:{s:4:"name";s:18:"ProcedureStepOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Order|The list order of this examination procedure step";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"medep";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"ProcedureStepTitle";O:9:"viewfield":16:{s:4:"name";s:18:"ProcedureStepTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:58:"Step|A procedural step required by the medical examination";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"medep";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"ProcedureStepDetail";O:9:"viewfield":16:{s:4:"name";s:19:"ProcedureStepDetail";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Detail|A detailed explanation of the step required by the medical examination";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"medep";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:197:"SELECT 
    count(*) 
FROM `medep`
   
 INNER JOIN `medse` AS `parent` ON `medep`.MedicalExamID = `parent`.MedicalExamID
WHERE medep._Deleted = 0
   AND `parent`.ScheduledExamID = \'/**RecordID**/\'
";s:7:"listSQL";s:423:"SELECT 
   `medep`.ExamProcedureStepID,
`med1`.OrganizationID AS OrganizationID,
`medep`.ProcedureStepOrder,
`medep`.ProcedureStepTitle,
`medep`.ProcedureStepDetail
FROM `medep`

   LEFT OUTER JOIN `med` AS med1 
   ON (`medep`.MedicalExamID = `med1`.MedicalExamID )
 INNER JOIN `medse` AS `parent` ON `medep`.MedicalExamID = `parent`.MedicalExamID
WHERE medep._Deleted = 0
AND `parent`.ScheduledExamID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:13:"MedicalExamID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:19:"ExamProcedureStepID";s:3:"int";s:18:"ProcedureStepOrder";s:5:"float";s:18:"ProcedureStepTitle";s:12:"varchar(128)";s:19:"ProcedureStepDetail";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:4:{s:19:"ExamProcedureStepID";s:5:"right";s:18:"ProcedureStepOrder";s:5:"right";s:18:"ProcedureStepTitle";s:4:"left";s:19:"ProcedureStepDetail";s:7:"justify";}}');
   $grids[3] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prta";s:6:"phrase";s:16:"Accountabilities";s:6:"number";i:3;s:6:"Fields";a:4:{s:16:"ParticipantAccID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantAccID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Person Accountable|The name of the person accountable";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"AccountabilityType";O:9:"viewfield":16:{s:4:"name";s:18:"AccountabilityType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Accountability Type|The participant\'s specific type of accountability";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"AccountabilityStatus";O:9:"viewfield":16:{s:4:"name";s:20:"AccountabilityStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Accountability Status|The present status of this participant\'s ongoing involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:148:"SELECT 
    count(*) 
FROM `prta`
   
WHERE prta._Deleted = 0
   AND `prta`.RelatedModuleID = \'medse\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1174:"SELECT 
   `prta`.ParticipantAccID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonAccountable,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS AccountabilityType,
`cod1`.Description AS AccountabilityStatus
FROM `prta`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prta`.RelatedRecordID = rdc1.RecordID AND `prta`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`prta`.ParticipantAccID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'prta\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'70\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prta`.AccountabilityTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `acc` AS acc2 
    ON (`prta`.ParticipantAccID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = \'prta\'
     AND `acc2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`acc2`.AccountabilityStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prta._Deleted = 0
AND `prta`.RelatedModuleID = \'medse\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantAccID";s:3:"int";s:17:"PersonAccountable";N;s:18:"AccountabilityType";N;s:20:"AccountabilityStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantAccID";s:5:"right";s:17:"PersonAccountable";s:4:"left";s:18:"AccountabilityType";s:7:"justify";s:20:"AccountabilityStatus";s:4:"left";}}');
   $grids[4] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prti";s:6:"phrase";s:11:"Involvement";s:6:"number";i:4;s:6:"Fields";a:4:{s:16:"ParticipantInvID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantInvID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"PersonInvolved";O:9:"viewfield":16:{s:4:"name";s:14:"PersonInvolved";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Person Involved|The name of the person involved";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"InvolvementType";O:9:"viewfield":16:{s:4:"name";s:15:"InvolvementType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Involvement Type|The participant\'s specific type of involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"InvolvementStatus";O:9:"viewfield":16:{s:4:"name";s:17:"InvolvementStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Involvement Status|The present status of this participant\'s involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:148:"SELECT 
    count(*) 
FROM `prti`
   
WHERE prti._Deleted = 0
   AND `prti`.RelatedModuleID = \'medse\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1153:"SELECT 
   `prti`.ParticipantInvID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonInvolved,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS InvolvementType,
`cod1`.Description AS InvolvementStatus
FROM `prti`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prti`.RelatedRecordID = rdc1.RecordID AND `prti`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `inv` AS inv1 
    ON (`prti`.ParticipantInvID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'prti\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'78\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prti`.InvolvementTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `inv` AS inv2 
    ON (`prti`.ParticipantInvID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = \'prti\'
     AND `inv2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`inv2`.InvolvementStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prti._Deleted = 0
AND `prti`.RelatedModuleID = \'medse\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantInvID";s:3:"int";s:14:"PersonInvolved";N;s:15:"InvolvementType";N;s:17:"InvolvementStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantInvID";s:5:"right";s:14:"PersonInvolved";s:4:"left";s:15:"InvolvementType";s:7:"justify";s:17:"InvolvementStatus";s:4:"left";}}');
   $grids[5] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"filr";s:6:"phrase";s:14:"Physical Files";s:6:"number";i:5;s:6:"Fields";a:6:{s:12:"FileRecordID";O:14:"invisiblefield":11:{s:4:"name";s:12:"FileRecordID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Record ID|An automatically assigned number used to associate records with physical files";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"FilingOrganization";O:9:"viewfield":16:{s:4:"name";s:18:"FilingOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Filing Organization|The name of the organization where the  where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"File Location|Specific area within the facility where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"FileName";O:9:"viewfield":16:{s:4:"name";s:8:"FileName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"File Name|A short title or phrase used to identify the physical file";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"FileNumber";O:9:"viewfield":16:{s:4:"name";s:10:"FileNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"File Number|A number manually assigned to a file for tracking purposes";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"SystemNumber";O:9:"viewfield":16:{s:4:"name";s:12:"SystemNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:262:"System Number|A unique number assigned to the phisical file based on a combination of fields from within the file retention module. The system number is comprised of the filing organization ID, the filing location ID, the file type ID and the record retention ID";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:148:"SELECT 
    count(*) 
FROM `filr`
   
WHERE filr._Deleted = 0
   AND `filr`.RelatedModuleID = \'medse\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1269:"SELECT 
   `filr`.FileRecordID,
`filph1`.FilingOrganizationID AS FilingOrganizationID,
`org1`.Name AS FilingOrganization,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
`filph1`.FileName AS FileName,
`filph1`.FileNumber AS FileNumber,
NULLIF(CONCAT(IFNULL(`filph1`.FilingOrganizationID,\'\'),IFNULL(`orgla1`.LocationID,\'\'),IFNULL(`fil1`.FileTypeID,\'\'),IFNULL(`filph1`.FileRetentionID,\'\')),\'\') AS SystemNumber
FROM `filr`

   LEFT OUTER JOIN `filph` AS filph1 
   ON (`filr`.FileRetentionID = `filph1`.FileRetentionID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`filph1`.FilingOrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`filph1`.FileRetentionID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'filph\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `fil` AS fil1 
   ON (`filph1`.FileReqID = `fil1`.FileReqID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE filr._Deleted = 0
AND `filr`.RelatedModuleID = \'medse\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:6:{s:12:"FileRecordID";s:3:"int";s:18:"FilingOrganization";N;s:8:"Location";N;s:8:"FileName";N;s:10:"FileNumber";N;s:12:"SystemNumber";N;}s:4:"name";N;s:10:"fieldAlign";a:6:{s:12:"FileRecordID";s:5:"right";s:18:"FilingOrganization";s:4:"left";s:8:"Location";s:7:"justify";s:8:"FileName";s:4:"left";s:10:"FileNumber";s:4:"left";s:12:"SystemNumber";s:7:"justify";}}');
   $grids[6] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"bpc";s:6:"phrase";s:14:"Best Practices";s:6:"number";i:6;s:6:"Fields";a:4:{s:14:"BestPracticeID";O:14:"invisiblefield":11:{s:4:"name";s:14:"BestPracticeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Record ID|An automatically assigned number used to track best practices";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:20:"BestPracticeCategory";O:9:"viewfield":16:{s:4:"name";s:20:"BestPracticeCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Best Practice Category|A method of categorizing best practices of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"BestPracticeTitle";O:9:"viewfield":16:{s:4:"name";s:17:"BestPracticeTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Best Practice Title|A descriptive title of the best practice identified";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Evaluator|The individual evaluating and awarding the best practice";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:144:"SELECT 
    count(*) 
FROM `bpc`
   
WHERE bpc._Deleted = 0
   AND `bpc`.RelatedModuleID = \'medse\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:678:"SELECT 
   `bpc`.BestPracticeID,
`cod1`.Description AS BestPracticeCategory,
`bpc`.BestPracticeTitle,
`ppl1`.DisplayName AS PersonAccountable
FROM `bpc`

   LEFT OUTER JOIN `cod` AS cod1 
   ON (`bpc`.BestPracticeCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'108\')
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`bpc`.BestPracticeID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'bpc\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'142\')
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE bpc._Deleted = 0
AND `bpc`.RelatedModuleID = \'medse\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:14:"BestPracticeID";s:3:"int";s:20:"BestPracticeCategory";N;s:17:"BestPracticeTitle";s:12:"varchar(128)";s:17:"PersonAccountable";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:14:"BestPracticeID";s:5:"right";s:20:"BestPracticeCategory";s:4:"left";s:17:"BestPracticeTitle";s:4:"left";s:17:"PersonAccountable";s:4:"left";}}');
$content .= renderViewScreenSection($fields, $phrases, $SQL, $grids);

?>
