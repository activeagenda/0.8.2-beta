<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    //label section, serialized
    $fields = unserialize('a:9:{s:8:"PolicyID";O:9:"viewfield":16:{s:4:"name";s:8:"PolicyID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Record ID|An automatically assigned number used to track insurance policies";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"PolicyNumber";O:9:"viewfield":16:{s:4:"name";s:12:"PolicyNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:65:"Policy Number|The policy number assigned by the insurance carrier";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"CarrierName";O:9:"viewfield":16:{s:4:"name";s:11:"CarrierName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Carrier Name|The name of insurance carrier providing the policy and related coverages";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"InsuranceType";O:9:"viewfield":16:{s:4:"name";s:13:"InsuranceType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Insurance Type|A combined field used to describe this insurance type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ExpirationDate";O:9:"viewfield":16:{s:4:"name";s:14:"ExpirationDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:80:"Expiration Date|The date the is no longer in force and coverage no longer exists";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"DaysRemaining";O:9:"viewfield":16:{s:4:"name";s:13:"DaysRemaining";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Days Remaining|The total number of days remaining before the insurance policy expires";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:13:"RetentionAcct";O:9:"viewfield":16:{s:4:"name";s:13:"RetentionAcct";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:127:"Retention Account|Whether this policy is an internal retention or accruel account established to pay claims from internal funds";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IsBestPractice";O:9:"viewfield":16:{s:4:"name";s:14:"IsBestPractice";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:65:"Is Best Practice|Whether the associated record is a best practice";s:8:"dataType";s:7:"tinyint";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:11:"RecordLabel";O:14:"invisiblefield":11:{s:4:"name";s:11:"RecordLabel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}}');
    $phrases = unserialize('a:8:{s:8:"PolicyID";s:75:"Record ID|An automatically assigned number used to track insurance policies";s:12:"PolicyNumber";s:65:"Policy Number|The policy number assigned by the insurance carrier";s:11:"CarrierName";s:85:"Carrier Name|The name of insurance carrier providing the policy and related coverages";s:13:"InsuranceType";s:107:"Insurance Type|A combined field used to describe this insurance type when associating it with other records";s:14:"ExpirationDate";s:80:"Expiration Date|The date the is no longer in force and coverage no longer exists";s:13:"DaysRemaining";s:85:"Days Remaining|The total number of days remaining before the insurance policy expires";s:13:"RetentionAcct";s:127:"Retention Account|Whether this policy is an internal retention or accruel account established to pay claims from internal funds";s:14:"IsBestPractice";s:65:"Is Best Practice|Whether the associated record is a best practice";}');
    $singularRecordName = 'Insurance Policy';
    $labelSQL = "SELECT 
   `ins`.PolicyID,
   `ins`.PolicyNumber,
   `org2`.Name AS CarrierName,
   NULLIF(CONCAT(IFNULL(`inst1`.InsuranceTypeTitle,'')),'') AS InsuranceType,
   `dat2`.RelatedDate AS ExpirationDate,
   CASE WHEN DATEDIFF(`dat2`.RelatedDate, NOW()) > 0 THEN DATEDIFF(`dat2`.RelatedDate, NOW()) ELSE 0 END AS DaysRemaining,
   `ins`.RetentionAcct,
   `bpc1`.IsBestPractice AS IsBestPractice,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`inst1`.InsuranceTypeTitle,'')),''),''),' Number: ',IFNULL(`ins`.PolicyNumber,''),' issued by ',IFNULL(`org2`.Name,''),', expiring on ',IFNULL(`dat2`.RelatedDate,'')),' Number:  issued by , expiring on ') AS RecordLabel,
   `ins`.OrganizationID
FROM `ins`
   
     LEFT OUTER JOIN `org` AS org2 
   ON (`ins`.CarrierNameID = `org2`.OrganizationID )
     LEFT OUTER JOIN `inst` AS inst1 
   ON (`ins`.InsuranceTypeID = `inst1`.InsuranceTypeID )
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`ins`.PolicyID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'ins'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '10')
     LEFT OUTER JOIN (SELECT 
COUNT(`bpc`.BestPracticeID) AS IsBestPractice,
`bpc`.RelatedRecordID FROM `bpc` 
 WHERE `bpc`._Deleted = 0 
 AND 'ins' = `bpc`.RelatedModuleID
GROUP BY `bpc`.RelatedRecordID 
) AS bpc1 
ON (`ins`.PolicyID = bpc1.RelatedRecordID) 
WHERE
   ins.PolicyID='/**RecordID**/'";
    $recordLabelField = "RecordLabel";
?>