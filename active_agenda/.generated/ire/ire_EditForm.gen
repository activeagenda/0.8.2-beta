<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:18:{s:16:"IncidentReportID";O:9:"viewfield":16:{s:4:"name";s:16:"IncidentReportID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Record ID|An automatically assigned number used to track situations and incidents";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"EventDate";O:9:"datefield":15:{s:4:"name";s:9:"EventDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:10:"ReportDate";O:9:"datefield":15:{s:4:"name";s:10:"ReportDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"ReportSourceID";O:14:"coderadiofield":29:{s:4:"name";s:14:"ReportSourceID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'230\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'230\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ire";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:11:"orientation";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:17:"PersonReportingID";O:16:"personcombofield":29:{s:4:"name";s:17:"PersonReportingID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ire";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:21:"PersonReportingID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"RepPersonTypeID";O:14:"codecombofield":27:{s:4:"name";s:15:"RepPersonTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'228\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'228\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ire";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"228";}s:16:"MannerReceivedID";O:14:"codecombofield":27:{s:4:"name";s:16:"MannerReceivedID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'187\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'187\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ire";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"187";}s:9:"EntryDate";O:9:"viewfield":16:{s:4:"name";s:9:"EntryDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"System Entry Date|Date the situation or incident was entered into the system";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:13:"SubmittedByID";O:16:"personcombofield":29:{s:4:"name";s:13:"SubmittedByID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ire";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:17:"SubmittedByID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:9:"SubObserv";O:9:"memofield":15:{s:4:"name";s:9:"SubObserv";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ire";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:8:"RepEvent";O:9:"memofield":15:{s:4:"name";s:8:"RepEvent";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"IncidentName";O:9:"editfield":14:{s:4:"name";s:12:"IncidentName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:8:"CodeName";O:9:"editfield":14:{s:4:"name";s:8:"CodeName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(50)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:2:"50";s:5:"align";s:4:"left";}s:9:"PotVioLaw";O:13:"checkboxfield":14:{s:4:"name";s:9:"PotVioLaw";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:8:"GovtRept";O:13:"checkboxfield":14:{s:4:"name";s:8:"GovtRept";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ire";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:10:"OnCoPropID";O:14:"coderadiofield":29:{s:4:"name";s:10:"OnCoPropID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:16:"CodeTypeID = \'8\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:140:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'8\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ire";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:11:"orientation";N;s:14:"conditionField";N;s:14:"conditionValue";N;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Incident Report");

//field value array
$data = array(
        'IncidentReportID' => '',
         'EventDate' => '',
         'ReportDate' => '',
         'ReportSourceID' => '',
         'PersonReportingID' => '',
         'RepPersonTypeID' => '',
         'MannerReceivedID' => '',
         'EntryDate' => '',
         'SubmittedByID' => '',
         'SubObserv' => '',
         'OrganizationID' => '',
         'RepEvent' => '',
         'IncidentName' => '',
         'CodeName' => '',
         'PotVioLaw' => '',
         'GovtRept' => '',
         'PersonAccountableID' => '',
         'OnCoPropID' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'IncidentReportID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Situations";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `ire`.IncidentReportID,
   `dat1`.RelatedDate AS EventDate,
   `dat2`.RelatedDate AS ReportDate,
   `cod2`.Description AS ReportSource,
   `ire`.ReportSourceID,
   `ppl3`.DisplayName AS PersonReporting,
   `inv2`.PersonInvolvedID AS PersonReportingID,
   `cod3`.Description AS RepPersonType,
   `ire`.RepPersonTypeID,
   `cod1`.Description AS MannerReceived,
   `ire`.MannerReceivedID,
   `ire_l`.createDate AS EntryDate,
   `ppl2`.DisplayName AS SubmittedBy,
   `inv1`.PersonInvolvedID AS SubmittedByID,
   `ire`.SubObserv,
   `org1`.Name AS Organization,
   `ire`.OrganizationID,
   `ire`.RepEvent,
   `ire`.IncidentName,
   `ire`.CodeName,
   `ire`.PotVioLaw,
   `ire`.GovtRept,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `cod4`.Description AS OnCoProp,
   `ire`.OnCoPropID,
   NULLIF(CONCAT(IFNULL(`ire`.IncidentName,''),' | ',IFNULL(`org1`.Name,''),' | ',IFNULL(`dat1`.RelatedDate,''),' Incident ID: ',IFNULL(`ire`.IncidentReportID,'')),' |  |  Incident ID: ') AS RecordLabel
FROM `ire`
   
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`ire`.IncidentReportID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'ire'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '16')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`ire`.IncidentReportID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'ire'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '32')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`ire`.ReportSourceID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '230')
     LEFT OUTER JOIN `inv` AS inv2 
    ON (`ire`.IncidentReportID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = 'ire'
     AND `inv2`._Deleted = 0
     AND `inv2`.InvolvementDescriptorID = '42')
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`ire`.RepPersonTypeID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '228')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ire`.MannerReceivedID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '187')
     LEFT OUTER JOIN (
                SELECT
                    `ire_l`.IncidentReportID,
                    `ire_l`._ModDate AS createDate,
                    `ire_l`._ModBy AS createBy
                FROM `ire_l`
                INNER JOIN (
                    SELECT
                        IncidentReportID,
                        MIN(_RecordID) AS MinRecordID
                    FROM `ire_l`
                    GROUP BY IncidentReportID) as `ire_min`
                ON `ire_l`._RecordID = `ire_min`.MinRecordID
                ) AS ire_l
                ON (`ire`.IncidentReportID = ire_l.IncidentReportID)
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`ire`.IncidentReportID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'ire'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '43')
     LEFT OUTER JOIN `org` AS org1 
   ON (`ire`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`ire`.IncidentReportID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'ire'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '44')
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`ire`.OnCoPropID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '8')
     LEFT OUTER JOIN `ppl` AS ppl3 
   ON (`inv2`.PersonInvolvedID = `ppl3`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv1`.PersonInvolvedID = `ppl2`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   ire.IncidentReportID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Incident Report");
        $screenPhrase = gettext("Form|Edit summary information about the reported incident or situation");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Incident Reporting");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'IncidentReportID' => gettext("Record ID|An automatically assigned number used to track situations and incidents"),
   'EventDate' => gettext("Event Date|Date the situation or incident occurred"),
   'ReportDate' => gettext("Report Date|Date the situation or incident was first reported"),
   'ReportSourceID' => gettext("Report Source|The source of the report. Whether the report was generated anonymously, by a known person, or by an unknown source"),
   'PersonReportingID' => gettext("Person Reporting|The name of the individual that reported the situation or incident"),
   'RepPersonTypeID' => gettext("Reporting Person Type|The organizational affiliation of the person reporting"),
   'MannerReceivedID' => gettext("Manner Received|The manner in which the initial report was received"),
   'EntryDate' => gettext("System Entry Date|Date the situation or incident was entered into the system"),
   'SubmittedByID' => gettext("Submitted By|The name of the individual that submitted this report into the system"),
   'SubObserv' => gettext("Submission Observations|A detailed description of any observations or impressions about the reporter or other information about the event that might be helpful in assessing the situation or incident"),
   'OrganizationID' => gettext("Organization|The primary organization involved in the incident"),
   'RepEvent' => gettext("Reported Event|A detailed description of the situation or incident, as received from the reporter. Every effort should be made to enter the reporter's comments on a word-for-word basis. Who, What, When, Where and Why"),
   'IncidentName' => gettext("Incident Name|A unique name used to identify the situation or incident"),
   'CodeName' => gettext("Code Name|A unique code name used to reference situation or incident information without disclosing the particular situation or incident"),
   'PotVioLaw' => gettext("Potential Violation of Law|Check this box if this situation or incident is a potential violation of law"),
   'GovtRept' => gettext("Governmental Reporting Requirements|Check this box if this situation or incident requires governmental reporting"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for managing the report process"),
   'OnCoPropID' => gettext("On Company Property|Whether this situation or incident occurred on company property")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['EventDate'], ShortPhrase($phrases['EventDate']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['EventDate']->invalid = TRUE;
            }
$vMsg = Validate($data['ReportDate'], ShortPhrase($phrases['ReportDate']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ReportDate']->invalid = TRUE;
            }
$vMsg = Validate($data['ReportSourceID'], ShortPhrase($phrases['ReportSourceID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ReportSourceID']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonReportingID'], ShortPhrase($phrases['PersonReportingID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonReportingID']->invalid = TRUE;
            }
$vMsg = Validate($data['RepPersonTypeID'], ShortPhrase($phrases['RepPersonTypeID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['RepPersonTypeID']->invalid = TRUE;
            }
$vMsg = Validate($data['MannerReceivedID'], ShortPhrase($phrases['MannerReceivedID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MannerReceivedID']->invalid = TRUE;
            }
$vMsg = Validate($data['SubmittedByID'], ShortPhrase($phrases['SubmittedByID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SubmittedByID']->invalid = TRUE;
            }
$vMsg = Validate($data['SubObserv'], ShortPhrase($phrases['SubObserv']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SubObserv']->invalid = TRUE;
            }
$vMsg = Validate($data['OrganizationID'], ShortPhrase($phrases['OrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['OrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['RepEvent'], ShortPhrase($phrases['RepEvent']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['RepEvent']->invalid = TRUE;
            }
$vMsg = Validate($data['IncidentName'], ShortPhrase($phrases['IncidentName']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['IncidentName']->invalid = TRUE;
            }
$vMsg = Validate($data['CodeName'], ShortPhrase($phrases['CodeName']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['CodeName']->invalid = TRUE;
            }
$vMsg = Validate($data['PotVioLaw'], ShortPhrase($phrases['PotVioLaw']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PotVioLaw']->invalid = TRUE;
            }
$vMsg = Validate($data['GovtRept'], ShortPhrase($phrases['GovtRept']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['GovtRept']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['OnCoPropID'], ShortPhrase($phrases['OnCoPropID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['OnCoPropID']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Incident Reports"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Incident Report") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about the reported incident or situation") );
      $tempTabs['Situations'] = array( "edit.php?scr=Situations&$tabsQS", gettext("Situations|Edit summary information about the situations leading to a reported incident") );
      $tempTabs['Numbers'] = array( "edit.php?scr=Numbers&$tabsQS", gettext("Numbers|Associate one or more incident numbers with a reported incident or situation") );
      $tempTabs['Documentation'] = array( "edit.php?scr=Documentation&$tabsQS", gettext("Documentation|Track the status of documentation delivery requirements associated with an incident report") );
      $tempTabs['RiskMatrix'] = array( "edit.php?scr=RiskMatrix&$tabsQS", gettext("Risk Matrix|Associate risk matrix values with a reported incident or situation") );
      $tempTabs['Products'] = array( "edit.php?scr=Products&$tabsQS", gettext("Products|Associate products and/or services with a situation requiring involvement and/or reporting") );
      $tempTabs['EmploymentPracticeLoss'] = array( "edit.php?scr=EmploymentPracticeLoss&$tabsQS", gettext("Labor|Associate one or more employment practice incidents with a reported incident or situation") );
      $tempTabs['EnvironmentalLoss'] = array( "edit.php?scr=EnvironmentalLoss&$tabsQS", gettext("Environment|Associate one or more environmental incidents with a reported incident or situation") );
      $tempTabs['InjuryLoss'] = array( "edit.php?scr=InjuryLoss&$tabsQS", gettext("Injury|Associate one or more injury incidents with a reported incident or situation") );
      $tempTabs['ITLoss'] = array( "edit.php?scr=ITLoss&$tabsQS", gettext("Technology|Associate one or more information technology losses with a reported incident or situation") );
      $tempTabs['ProductServiceLoss'] = array( "edit.php?scr=ProductServiceLoss&$tabsQS", gettext("Product|Associate one or more product/service incidents with a reported incident or situation") );
      $tempTabs['BuildingLoss'] = array( "edit.php?scr=BuildingLoss&$tabsQS", gettext("Building|Associate one or more building incidents with a reported incident or situation") );
      $tempTabs['EquipmentLoss'] = array( "edit.php?scr=EquipmentLoss&$tabsQS", gettext("Equipment|Associate one or more equipment incidents with a reported incident or situation") );
      $tempTabs['OtherAssetLoss'] = array( "edit.php?scr=OtherAssetLoss&$tabsQS", gettext("Other|Associate one or more asset incidents with a reported incident or situation") );
      $tempTabs['VehicleLoss'] = array( "edit.php?scr=VehicleLoss&$tabsQS", gettext("Vehicle|Associate one or more vehicle incidents with a reported incident or situation") );
      $tempTabs['Contacts'] = array( "edit.php?scr=Contacts&$tabsQS", gettext("Contacts|Display contacts associated with a reported incident or situation based upon contact conditions established within the situation contacts module") );
      $tempTabs['Litigation'] = array( "edit.php?scr=Litigation&$tabsQS", gettext("Litigation|Associate law firms and lead attorneys with the reported incident or situation") );
      $tempTabs['Review'] = array( "edit.php?scr=Review&$tabsQS", gettext("Review|Assign and track incident review activities associated with the reported incident or situation") );
      $tempTabs['RootCause'] = array( "edit.php?scr=RootCause&$tabsQS", gettext("Causes|Associate root causes of the reported incident or situation") );
      $tempTabs['PolicyViolations'] = array( "edit.php?scr=PolicyViolations&$tabsQS", gettext("Policies|Assign and track policy violations associated with the reported incident or situation") );
      $tempTabs['ClosureandFollowUp'] = array( "edit.php?scr=ClosureandFollowUp&$tabsQS", gettext("Closure|Edit incident closure factors and ongoing follow-up assignments associated with the reported incident or situation") );
      $tempTabs['WorkOrders'] = array( "edit.php?scr=WorkOrders&$tabsQS", gettext("Orders|Associate hazard abatement work orders with the reported incident or situation") );
      $tempTabs['Publicity'] = array( "edit.php?scr=Publicity&$tabsQS", gettext("Publicity|Associate publicity exposures with the reported incident or situation") );
      $tempTabs['Telephone'] = array( "edit.php?scr=Telephone&$tabsQS", gettext("Telephone|Associate telephone calls with the reported incident or situation") );
      $tempTabs['AgencyLetter'] = array( "edit.php?scr=AgencyLetter&$tabsQS", gettext("Letters|Associate letters with the reported incident or situation") );
      $tempTabs['Visitations'] = array( "edit.php?scr=Visitations&$tabsQS", gettext("Visitations|Associate agency visits with the reported incident or situation") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the reported incident or situation") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the reported incident or situation") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with the reported incident or situation") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with the reported incident or situation") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the reported incident or situation") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Report") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"EventDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_EventDate\"
});
Calendar.setup({
   inputField : \"ReportDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_ReportDate\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>