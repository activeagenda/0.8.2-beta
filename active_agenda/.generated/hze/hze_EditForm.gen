<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:14:{s:18:"HazEnergyControlID";O:9:"viewfield":16:{s:4:"name";s:18:"HazEnergyControlID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Record ID|An automatically assigned number used to track hazardous energy control procedures";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"LocationID";a:1:{s:4:"name";s:10:"LocationID";}}s:8:"moduleID";s:3:"hze";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:10:"LocationID";O:10:"combofield":26:{s:4:"name";s:10:"LocationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgl";s:10:"foreignKey";s:10:"LocationID";s:12:"foreignField";s:8:"Location";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:371:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE orgl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:369:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `orgl`.LocationID = \'/*recordID*/\'";s:11:"parentField";s:14:"OrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:20:"EquipmentInventoryID";a:1:{s:4:"name";s:20:"EquipmentInventoryID";}}s:8:"moduleID";s:3:"hze";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`orgl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:20:"EquipmentInventoryID";O:10:"combofield":26:{s:4:"name";s:20:"EquipmentInventoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"eqpin";s:10:"foreignKey";s:20:"EquipmentInventoryID";s:12:"foreignField";s:18:"EquipmentInventory";s:13:"listCondition";N;s:14:"listConditions";a:1:{s:15:"HazardousEnergy";O:13:"listcondition":3:{s:4:"name";s:15:"HazardousEnergy";s:4:"mode";s:6:"equals";s:6:"values";a:1:{i:0;s:4:"true";}}}s:3:"SQL";s:707:"SELECT 
`eqpin`.EquipmentInventoryID AS ID, NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`eqpt1`.EquipmentTypeTitle,\'\')),\'\'),\'\'),\' | \',IFNULL(`eqp1`.EquipmentName,\'\'),\' | No: \',IFNULL(`eqpin`.TrackingNumber,\'\')),\' |  | No: \') AS Name, `orgla1`.LocationID AS ParentID FROM `eqpin`
 
 LEFT OUTER JOIN `eqp` AS eqp1 
   ON (`eqpin`.EquipmentID = `eqp1`.EquipmentID )
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`eqpin`.EquipmentInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'eqpin\'
     AND `orgla1`._Deleted = 0)
 LEFT OUTER JOIN `eqpt` AS eqpt1 
   ON (`eqp1`.EquipmentTypeID = `eqpt1`.EquipmentTypeID )
WHERE eqpin._Deleted = 0
 AND `eqp1`.HazardousEnergy = true
 ORDER BY Name, ID;";s:6:"getSQL";s:680:"SELECT 
`eqpin`.EquipmentInventoryID AS ID, NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`eqpt1`.EquipmentTypeTitle,\'\')),\'\'),\'\'),\' | \',IFNULL(`eqp1`.EquipmentName,\'\'),\' | No: \',IFNULL(`eqpin`.TrackingNumber,\'\')),\' |  | No: \') AS Name, `orgla1`.LocationID AS ParentID FROM `eqpin`
 
 LEFT OUTER JOIN `eqp` AS eqp1 
   ON (`eqpin`.EquipmentID = `eqp1`.EquipmentID )
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`eqpin`.EquipmentInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'eqpin\'
     AND `orgla1`._Deleted = 0)
 LEFT OUTER JOIN `eqpt` AS eqpt1 
   ON (`eqp1`.EquipmentTypeID = `eqpt1`.EquipmentTypeID )

WHERE `eqpin`.EquipmentInventoryID = \'/*recordID*/\'";s:11:"parentField";s:10:"LocationID";s:21:"parentListModuleField";N;s:11:"childFields";a:5:{s:17:"EquipmentCategory";a:1:{s:4:"name";s:17:"EquipmentCategory";}s:13:"EquipmentType";a:1:{s:4:"name";s:13:"EquipmentType";}s:13:"EquipmentName";a:1:{s:4:"name";s:13:"EquipmentName";}s:26:"EquipmentPersonAccountable";a:1:{s:4:"name";s:26:"EquipmentPersonAccountable";}s:14:"TrackingNumber";a:1:{s:4:"name";s:14:"TrackingNumber";}}s:8:"moduleID";s:3:"hze";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:30:"`eqpin`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:17:"EquipmentCategory";O:9:"viewfield":16:{s:4:"name";s:17:"EquipmentCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"Equipment Category|A broadly defined title or phrase used to group similar categories of equipment";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:20:"EquipmentInventoryID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:13:"EquipmentType";O:9:"viewfield":16:{s:4:"name";s:13:"EquipmentType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:146:"Equipment Type|A method of grouping equipment of similar types so that asset protection measures can be assigned to all equipment of the same type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:20:"EquipmentInventoryID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:13:"EquipmentName";O:9:"viewfield":16:{s:4:"name";s:13:"EquipmentName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:36:"Equipment Name|Name of the equipment";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:20:"EquipmentInventoryID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:26:"EquipmentPersonAccountable";O:9:"viewfield":16:{s:4:"name";s:26:"EquipmentPersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:132:"Person Accountable for Equipment|The individual assigned primary accountability for managing the equipment at this specific location";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:20:"EquipmentInventoryID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:14:"TrackingNumber";O:9:"viewfield":16:{s:4:"name";s:14:"TrackingNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:93:"Tracking Number|A unique number used by the organization to track specific items of equipment";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:20:"EquipmentInventoryID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"hze";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:16:"ControlProcTitle";O:9:"editfield":14:{s:4:"name";s:16:"ControlProcTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"text";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:15:"ControlProcDesc";O:9:"memofield":15:{s:4:"name";s:15:"ControlProcDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"LastReviewDate";O:9:"datefield":15:{s:4:"name";s:14:"LastReviewDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"date";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:24:"HazEnergyControlStatusID";O:14:"codecombofield":27:{s:4:"name";s:24:"HazEnergyControlStatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'163\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'163\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"hze";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"163";}}');

$hasEditableFields = true;


$singularRecordName = gettext("Hazardous Energy Control Procedure");

//field value array
$data = array(
        'HazEnergyControlID' => '',
         'OrganizationID' => '',
         'LocationID' => '',
         'EquipmentInventoryID' => '',
         'EquipmentCategory' => '',
         'EquipmentType' => '',
         'EquipmentName' => '',
         'EquipmentPersonAccountable' => '',
         'TrackingNumber' => '',
         'PersonAccountableID' => '',
         'ControlProcTitle' => '',
         'ControlProcDesc' => '',
         'LastReviewDate' => '',
         'HazEnergyControlStatusID' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'HazEnergyControlID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "EnergySources";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `hze`.HazEnergyControlID,
   `org1`.Name AS Organization,
   `eqpin1`.OrganizationID AS OrganizationID,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS Location,
   `orgla1`.LocationID AS LocationID,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`eqpt1`.EquipmentTypeTitle,'')),''),''),' | ',IFNULL(`eqp1`.EquipmentName,''),' | No: ',IFNULL(`eqpin1`.TrackingNumber,'')),' |  | No: ') AS EquipmentInventory,
   `hze`.EquipmentInventoryID,
   `cod2`.Description AS EquipmentCategory,
   NULLIF(CONCAT(IFNULL(`eqpt3`.EquipmentTypeTitle,'')),'') AS EquipmentType,
   `eqp2`.EquipmentName AS EquipmentName,
   `ppl1`.DisplayName AS EquipmentPersonAccountable,
   `eqpin1`.TrackingNumber AS TrackingNumber,
   `ppl2`.DisplayName AS PersonAccountable,
   `acc2`.PersonAccountableID AS PersonAccountableID,
   `hze`.ControlProcTitle,
   `hze`.ControlProcDesc,
   `dat1`.RelatedDate AS LastReviewDate,
   `cod1`.Description AS HazEnergyControlStatus,
   `hze`.HazEnergyControlStatusID,
   NULLIF(CONCAT(IFNULL(`hze`.ControlProcTitle,''),' | ',IFNULL(`org1`.Name,''),' | ',IFNULL(`cod1`.Description,'')),' |  | ') AS RecordLabel
FROM `hze`
   
     LEFT OUTER JOIN `eqpin` AS eqpin1 
   ON (`hze`.EquipmentInventoryID = `eqpin1`.EquipmentInventoryID )
     LEFT OUTER JOIN `acc` AS acc2 
    ON (`hze`.HazEnergyControlID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = 'hze'
     AND `acc2`._Deleted = 0
     AND `acc2`.AccountabilityDescriptorID = '36')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`hze`.HazEnergyControlID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'hze'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '9')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`hze`.HazEnergyControlStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '163')
     LEFT OUTER JOIN `org` AS org1 
   ON (`eqpin1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`eqpin1`.EquipmentInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'eqpin'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `eqp` AS eqp1 
   ON (`eqpin1`.EquipmentID = `eqp1`.EquipmentID )
     LEFT OUTER JOIN `eqp` AS eqp2 
   ON (`eqpin1`.EquipmentID = `eqp2`.EquipmentID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`eqpin1`.EquipmentInventoryID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'eqpin'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '31')
     LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`acc2`.PersonAccountableID = `ppl2`.PersonID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `eqpt` AS eqpt1 
   ON (`eqp1`.EquipmentTypeID = `eqpt1`.EquipmentTypeID )
     LEFT OUTER JOIN `eqpt` AS eqpt3 
   ON (`eqp2`.EquipmentTypeID = `eqpt3`.EquipmentTypeID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`eqpt3`.EquipmentCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '284')
WHERE
   hze.HazEnergyControlID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Hazardous Energy Control Procedure");
        $screenPhrase = gettext("Form|Edit summary information about a hazardous energy control procedure");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Energy Control Procedures");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'HazEnergyControlID' => gettext("Record ID|An automatically assigned number used to track hazardous energy control procedures"),
   'OrganizationID' => gettext("Organization|The name of the organization where the equipment is located"),
   'LocationID' => gettext("Location|A description of the specific location within the facility where the equipment is located. Specific locations are based on a combination of field values assigned from within the Organizations - Locations module"),
   'EquipmentInventoryID' => gettext("Equipment|The specific equipment the energy control procedure is intended to control"),
   'EquipmentCategory' => gettext("Equipment Category|A broadly defined title or phrase used to group similar categories of equipment"),
   'EquipmentType' => gettext("Equipment Type|A method of grouping equipment of similar types so that asset protection measures can be assigned to all equipment of the same type"),
   'EquipmentName' => gettext("Equipment Name|Name of the equipment"),
   'EquipmentPersonAccountable' => gettext("Person Accountable for Equipment|The individual assigned primary accountability for managing the equipment at this specific location"),
   'TrackingNumber' => gettext("Tracking Number|A unique number used by the organization to track specific items of equipment"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for managing this hazardous energy control procedure"),
   'ControlProcTitle' => gettext("Control Procedure Title|A short, descriptive, title for the hazardous energy control procedure"),
   'ControlProcDesc' => gettext("Control Procedure Description|A detailed description of the hazardous energy control procedure"),
   'LastReviewDate' => gettext("Last Review Date|The date the control procedure was last reviewed"),
   'HazEnergyControlStatusID' => gettext("Procedure Status|Present status of this hazardous energy control procedure")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['ControlProcTitle'], ShortPhrase($phrases['ControlProcTitle']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ControlProcTitle']->invalid = TRUE;
            }
$vMsg = Validate($data['ControlProcDesc'], ShortPhrase($phrases['ControlProcDesc']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ControlProcDesc']->invalid = TRUE;
            }
$vMsg = Validate($data['LastReviewDate'], ShortPhrase($phrases['LastReviewDate']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['LastReviewDate']->invalid = TRUE;
            }
$vMsg = Validate($data['HazEnergyControlStatusID'], ShortPhrase($phrases['HazEnergyControlStatusID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['HazEnergyControlStatusID']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Hazardous Energy Control Procedures"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Hazardous Energy Control Procedure") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about a hazardous energy control procedure") );
      $tempTabs['EnergySources'] = array( "edit.php?scr=EnergySources&$tabsQS", gettext("Energy|Associate energy sources with the energy control procedure") );
      $tempTabs['Adjustments'] = array( "edit.php?scr=Adjustments&$tabsQS", gettext("Adjustments|Associate adjustment requirements with the energy control procedure") );
      $tempTabs['Cleaning'] = array( "edit.php?scr=Cleaning&$tabsQS", gettext("Cleaning|Associate cleaning requirements with the energy control procedure") );
      $tempTabs['Repair'] = array( "edit.php?scr=Repair&$tabsQS", gettext("Repair|Associate repair requirements with the energy control procedure") );
      $tempTabs['Service'] = array( "edit.php?scr=Service&$tabsQS", gettext("Service|Associate service requirements with the energy control procedure") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate agreements with the energy control procedure") );
      $tempTabs['Audits'] = array( "edit.php?scr=Audits&$tabsQS", gettext("Audits|Associate audits with the energy control procedure") );
      $tempTabs['BusinessContinuity'] = array( "edit.php?scr=BusinessContinuity&$tabsQS", gettext("Continuity|Associate business continuity requirements with the energy control procedure") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the energy control procedure") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the energy control procedure") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the energy control procedure") );
      $tempTabs['Insurance'] = array( "edit.php?scr=Insurance&$tabsQS", gettext("Insurance|Associate insurance consequences with the energy control procedure") );
      $tempTabs['Permits'] = array( "edit.php?scr=Permits&$tabsQS", gettext("Permits|Associate operating permits with the energy control procedure") );
      $tempTabs['Publicity'] = array( "edit.php?scr=Publicity&$tabsQS", gettext("Publicity|Associate publicity with the energy control procedure") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the energy control procedure") );
      $tempTabs['Responsibilities'] = array( "edit.php?scr=Responsibilities&$tabsQS", gettext("Responsibilities|Associate responsibilities with the energy control procedure") );
      $tempTabs['Classifications'] = array( "edit.php?scr=Classifications&$tabsQS", gettext("Classifications|Associate risk classifications with the energy control procedure") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with the energy control procedure") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the energy control procedure") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the energy control procedure") );
      $tempTabs['Training'] = array( "edit.php?scr=Training&$tabsQS", gettext("Training|Associate training with the energy control procedure") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the energy control procedure") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the energy control procedure") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("File Retention|Associate file retention methods with the energy control procedure") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the energy control procedure") , 'bpc');
      $tempTabs['Reports'] = array( "reports.php?scr=Reports&$tabsQS", gettext("Reports|View reports for this energy control procedure") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Procedure") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"LastReviewDate\",
".$User->getCalFormat(false)."
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_LastReviewDate\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>