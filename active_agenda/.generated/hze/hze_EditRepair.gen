<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:8:{s:18:"HazEnergyControlID";O:9:"viewfield":16:{s:4:"name";s:18:"HazEnergyControlID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Record ID|An automatically assigned number used to track hazardous energy control procedures";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"EquipmentTypeID";O:14:"invisiblefield":11:{s:4:"name";s:15:"EquipmentTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Organization|The name of the organization where the equipment is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:118:"Person Accountable|The individual assigned primary accountability for managing this hazardous energy control procedure";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"Equipment";O:9:"viewfield":16:{s:4:"name";s:9:"Equipment";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:121:"Equipment|A description of the equipment based on a combination of field values assigned from within the equipment module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ControlProcTitle";O:9:"viewfield":16:{s:4:"name";s:16:"ControlProcTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Control Procedure Title|A short, descriptive, title for the hazardous energy control procedure";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"LastReviewDate";O:9:"viewfield":16:{s:4:"name";s:14:"LastReviewDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:65:"Last Review Date|The date the control procedure was last reviewed";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:22:"HazEnergyControlStatus";O:9:"viewfield":16:{s:4:"name";s:22:"HazEnergyControlStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Procedure Status|Present status of this hazardous energy control procedure";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Hazardous Energy Control Procedure");

//field value array
$data = array(
        'HazEnergyControlID' => '',
         'EquipmentTypeID' => '',
         'Organization' => '',
         'PersonAccountable' => '',
         'Equipment' => '',
         'ControlProcTitle' => '',
         'LastReviewDate' => '',
         'HazEnergyControlStatus' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:1251:"SELECT 
   `hzerp`.RepairID,
   `org1`.Name AS RepairOrganization,
   `hzerp`.RepairOrganizationID,
   NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
   `orgla1`.LocationID AS LocationID,
   `cod1`.Description AS EnergyControlStage,
   `hzerp`.EnergyControlStageID,
   `hzerp`.ControlStepTitle,
   `hzerp`.ControlStepDesc,
   `hzerp`.ControlStepOrder,
   `eqpin1`.OrganizationID AS OrganizationID
FROM `hzerp`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`hzerp`.RepairOrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`hzerp`.RepairID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'hzerp\'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`hzerp`.EnergyControlStageID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'219\')
     LEFT OUTER JOIN `eqpin` AS eqpin1 
   ON (`hzerp`.HazEnergyControlID = `eqpin1`.EquipmentInventoryID )
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   hzerp.RepairID=\'/**RowID**/\'";s:9:"getRowSQL";s:1011:"SELECT 
   `hzerp`.RepairID,
   `cod1`.Description AS EnergyControlStage,
   `hzerp`.ControlStepTitle,
   `hzerp`.ControlStepDesc,
   `hzerp`.ControlStepOrder,
   NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
   `eqpin1`.OrganizationID AS OrganizationID
FROM `hzerp`
   
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`hzerp`.EnergyControlStageID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'219\')
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`hzerp`.RepairID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'hzerp\'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `eqpin` AS eqpin1 
   ON (`hzerp`.HazEnergyControlID = `eqpin1`.EquipmentInventoryID )
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   hzerp.RepairID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:7:{s:8:"RepairID";O:14:"invisiblefield":11:{s:4:"name";s:8:"RepairID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Record ID|An automatically assigned number used to track hazardous energy control procedure repairs";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:20:"RepairOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:20:"RepairOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Organization|The organization where the equipment repair occurs";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"LocationID";a:1:{s:4:"name";s:10:"LocationID";}}s:8:"moduleID";s:5:"hzerp";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:10:"LocationID";O:10:"combofield":26:{s:4:"name";s:10:"LocationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Location|Specific location within the facility where the energy control step occurred";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgl";s:10:"foreignKey";s:10:"LocationID";s:12:"foreignField";s:8:"Location";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:371:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE orgl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:369:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `orgl`.LocationID = \'/*recordID*/\'";s:11:"parentField";s:20:"RepairOrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"hzerp";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`orgl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:20:"EnergyControlStageID";O:14:"codecombofield":27:{s:4:"name";s:20:"EnergyControlStageID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Control Stage|The stage of the energy control process";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'219\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'219\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"hzerp";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"219";}s:16:"ControlStepTitle";O:9:"editfield":14:{s:4:"name";s:16:"ControlStepTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Control Step|A short phrase or sentence used to describe the energy control process step";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:15:"ControlStepDesc";O:9:"memofield":15:{s:4:"name";s:15:"ControlStepDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Description|A detailed description of the energy control step";s:8:"dataType";s:4:"text";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:16:"ControlStepOrder";O:9:"editfield":14:{s:4:"name";s:16:"ControlStepOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Step Order|The list order of this energy control step";s:8:"dataType";s:5:"float";s:8:"validate";s:35:"Number notZero notEmpty notNegative";s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:8:"RepairID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:5:"hzerp";s:6:"phrase";s:6:"Repair";s:6:"number";i:1;s:6:"Fields";a:6:{s:8:"RepairID";O:14:"invisiblefield":11:{s:4:"name";s:8:"RepairID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Record ID|An automatically assigned number used to track hazardous energy control procedure repairs";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"EnergyControlStage";O:9:"viewfield":16:{s:4:"name";s:18:"EnergyControlStage";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Control Stage|The stage of the energy control process";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ControlStepTitle";O:9:"viewfield":16:{s:4:"name";s:16:"ControlStepTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Control Step|A short phrase or sentence used to describe the energy control process step";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"ControlStepDesc";O:9:"viewfield":16:{s:4:"name";s:15:"ControlStepDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Description|A detailed description of the energy control step";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ControlStepOrder";O:9:"viewfield":16:{s:4:"name";s:16:"ControlStepOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Step Order|The list order of this energy control step";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Location|Specific location within the facility where the energy control step occurred";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"hzerp";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:117:"SELECT 
    count(*) 
FROM `hzerp`
   
WHERE hzerp._Deleted = 0
   AND `hzerp`.HazEnergyControlID = \'/**RecordID**/\'
";s:7:"listSQL";s:1017:"SELECT 
   `hzerp`.RepairID,
`eqpin1`.OrganizationID AS OrganizationID,
`cod1`.Description AS EnergyControlStage,
`hzerp`.ControlStepTitle,
`hzerp`.ControlStepDesc,
`hzerp`.ControlStepOrder,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location
FROM `hzerp`

   LEFT OUTER JOIN `eqpin` AS eqpin1 
   ON (`hzerp`.HazEnergyControlID = `eqpin1`.EquipmentInventoryID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`hzerp`.EnergyControlStageID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'219\')
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`hzerp`.RepairID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'hzerp\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE hzerp._Deleted = 0
AND `hzerp`.HazEnergyControlID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:18:"HazEnergyControlID";s:9:"parentKey";s:18:"HazEnergyControlID";s:8:"PKFields";a:1:{i:0;s:8:"RepairID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');


    /**guidanceGrid**/

    $PKField = 'HazEnergyControlID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Service";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `hze`.HazEnergyControlID,
   `eqp2`.EquipmentTypeID AS EquipmentTypeID,
   `org1`.Name AS Organization,
   `ppl2`.DisplayName AS PersonAccountable,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`eqpt2`.EquipmentTypeTitle,'')),''),''),' | ',IFNULL(`eqp2`.EquipmentName,''),' | ',IFNULL(`eqp2`.ModelNo,'')),' |  | ') AS Equipment,
   `hze`.ControlProcTitle,
   `dat1`.RelatedDate AS LastReviewDate,
   `cod1`.Description AS HazEnergyControlStatus,
   NULLIF(CONCAT(IFNULL(`hze`.ControlProcTitle,''),' | ',IFNULL(`org1`.Name,''),' | ',IFNULL(`cod1`.Description,'')),' |  | ') AS RecordLabel,
   `eqpin1`.OrganizationID AS OrganizationID
FROM `hze`
   
     LEFT OUTER JOIN `eqpin` AS eqpin1 
   ON (`hze`.EquipmentInventoryID = `eqpin1`.EquipmentInventoryID )
     LEFT OUTER JOIN `acc` AS acc2 
    ON (`hze`.HazEnergyControlID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = 'hze'
     AND `acc2`._Deleted = 0
     AND `acc2`.AccountabilityDescriptorID = '36')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`hze`.HazEnergyControlID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'hze'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '9')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`hze`.HazEnergyControlStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '163')
     LEFT OUTER JOIN `eqp` AS eqp2 
   ON (`eqpin1`.EquipmentID = `eqp2`.EquipmentID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`eqpin1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`acc2`.PersonAccountableID = `ppl2`.PersonID )
     LEFT OUTER JOIN `eqpt` AS eqpt2 
   ON (`eqp2`.EquipmentTypeID = `eqpt2`.EquipmentTypeID )
WHERE
   hze.HazEnergyControlID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Hazardous Energy Control Procedure");
        $screenPhrase = gettext("Repair|Associate repair requirements with the energy control procedure");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Energy Control Procedures");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'HazEnergyControlID' => gettext("Record ID|An automatically assigned number used to track hazardous energy control procedures"),
   'EquipmentTypeID' => gettext("Equipment Type|A method of grouping equipment of similar types so that asset protection measures can be assigned to all equipment of the same type"),
   'Organization' => gettext("Organization|The name of the organization where the equipment is located"),
   'PersonAccountable' => gettext("Person Accountable|The individual assigned primary accountability for managing this hazardous energy control procedure"),
   'Equipment' => gettext("Equipment|A description of the equipment based on a combination of field values assigned from within the equipment module"),
   'ControlProcTitle' => gettext("Control Procedure Title|A short, descriptive, title for the hazardous energy control procedure"),
   'LastReviewDate' => gettext("Last Review Date|The date the control procedure was last reviewed"),
   'HazEnergyControlStatus' => gettext("Procedure Status|Present status of this hazardous energy control procedure")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Hazardous Energy Control Procedures"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Hazardous Energy Control Procedure") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a hazardous energy control procedure") );
      $tempTabs['EnergySources'] = array( "edit.php?scr=EnergySources&$tabsQS", gettext("Energy|Associate energy sources with the energy control procedure") );
      $tempTabs['Adjustments'] = array( "edit.php?scr=Adjustments&$tabsQS", gettext("Adjustments|Associate adjustment requirements with the energy control procedure") );
      $tempTabs['Cleaning'] = array( "edit.php?scr=Cleaning&$tabsQS", gettext("Cleaning|Associate cleaning requirements with the energy control procedure") );
      $tempTabs['Repair'] = array( "", gettext("Repair|Associate repair requirements with the energy control procedure") );
      $tempTabs['Service'] = array( "edit.php?scr=Service&$tabsQS", gettext("Service|Associate service requirements with the energy control procedure") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate agreements with the energy control procedure") );
      $tempTabs['Audits'] = array( "edit.php?scr=Audits&$tabsQS", gettext("Audits|Associate audits with the energy control procedure") );
      $tempTabs['BusinessContinuity'] = array( "edit.php?scr=BusinessContinuity&$tabsQS", gettext("Continuity|Associate business continuity requirements with the energy control procedure") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the energy control procedure") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the energy control procedure") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the energy control procedure") );
      $tempTabs['Insurance'] = array( "edit.php?scr=Insurance&$tabsQS", gettext("Insurance|Associate insurance consequences with the energy control procedure") );
      $tempTabs['Permits'] = array( "edit.php?scr=Permits&$tabsQS", gettext("Permits|Associate operating permits with the energy control procedure") );
      $tempTabs['Publicity'] = array( "edit.php?scr=Publicity&$tabsQS", gettext("Publicity|Associate publicity with the energy control procedure") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the energy control procedure") );
      $tempTabs['Responsibilities'] = array( "edit.php?scr=Responsibilities&$tabsQS", gettext("Responsibilities|Associate responsibilities with the energy control procedure") );
      $tempTabs['Classifications'] = array( "edit.php?scr=Classifications&$tabsQS", gettext("Classifications|Associate risk classifications with the energy control procedure") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with the energy control procedure") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the energy control procedure") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the energy control procedure") );
      $tempTabs['Training'] = array( "edit.php?scr=Training&$tabsQS", gettext("Training|Associate training with the energy control procedure") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the energy control procedure") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the energy control procedure") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("File Retention|Associate file retention methods with the energy control procedure") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the energy control procedure") , 'bpc');
      $tempTabs['Reports'] = array( "reports.php?scr=Reports&$tabsQS", gettext("Reports|View reports for this energy control procedure") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Repair'] = array( "", gettext("New Procedure") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>