<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:8:{s:15:"CertificationID";O:9:"viewfield":16:{s:4:"name";s:15:"CertificationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Record ID|An automatically assigned number used to associate certifications with training courses";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"Organization|The organization with primary responsibility for managing this certification throughout the enterprise";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:165:"Person Accountable|The individual assigned primary responsibility for maintaining the currency of this certification and its requirements throughout the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"CertificationType";O:9:"viewfield":16:{s:4:"name";s:17:"CertificationType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Certification Type|The type of certification offered by the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"CertificationTitle";O:9:"viewfield":16:{s:4:"name";s:18:"CertificationTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Title|A brief name used to identify the certification offered";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"CertificationDesc";O:9:"viewfield":16:{s:4:"name";s:17:"CertificationDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Description|A detailed description of the certification offered";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"CertificationPeriod";O:9:"viewfield":16:{s:4:"name";s:19:"CertificationPeriod";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Certification Period|The period of time the certification covers until it must be renewed";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"RiskImperatives";O:9:"viewfield":16:{s:4:"name";s:15:"RiskImperatives";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:54:"Risk Imperatives|A list of associated Risk Imperatives";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'CertificationID' => gettext("Record ID|An automatically assigned number used to associate certifications with training courses"),
   'Organization' => gettext("Organization|The organization with primary responsibility for managing this certification throughout the enterprise"),
   'PersonAccountable' => gettext("Person Accountable|The individual assigned primary responsibility for maintaining the currency of this certification and its requirements throughout the organization"),
   'CertificationType' => gettext("Certification Type|The type of certification offered by the organization"),
   'CertificationTitle' => gettext("Title|A brief name used to identify the certification offered"),
   'CertificationDesc' => gettext("Description|A detailed description of the certification offered"),
   'CertificationPeriod' => gettext("Certification Period|The period of time the certification covers until it must be renewed"),
   'RiskImperatives' => gettext("Risk Imperatives|A list of associated Risk Imperatives")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `trac`.CertificationID,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   `cod1`.Description AS CertificationType,
   `trac`.CertificationTitle,
   `trac`.CertificationDesc,
   NULLIF(CONCAT(IFNULL(`trac`.CertificationDuration,''),' ',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),''),'')),' ') AS CertificationPeriod,
   `rsk1`.RiskImperatives AS RiskImperatives,
   NULLIF(CONCAT(IFNULL(`cod1`.Description,''),' | ',IFNULL(`trac`.CertificationTitle,''),' | ',IFNULL(`org1`.Name,'')),' |  | ') AS RecordLabel,
   `trac`.OrganizationID
FROM `trac`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`trac`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`trac`.CertificationID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'trac'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '86')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`trac`.CertificationTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '33')
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`trac`.CertificationDurationUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN (SELECT 
GROUP_CONCAT(`cod1`.Description ORDER BY `cod1`.Description SEPARATOR ', ') AS RiskImperatives,
`rsk`.RelatedRecordID FROM `rsk` 

LEFT OUTER JOIN `cod` AS cod1 
   ON (`rsk`.RiskImperativeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '234')
 WHERE `rsk`._Deleted = 0 
 AND RelatedModuleID = 'trac' 
 AND 'trac' = `rsk`.RelatedModuleID
GROUP BY `rsk`.RelatedRecordID 
) AS rsk1 
ON (`trac`.CertificationID = rsk1.RelatedRecordID) 
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   trac.CertificationID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Certifications"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Certification") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a training certification") );
      $tempTabs['Prerequisites'] = array( "edit.php?scr=Prerequisites&$tabsQS", gettext("Prerequisites|Associate training course prerequisites with a training certification") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with a training certification") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with a training certification") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Certification") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Certification") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Certification") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Certification") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Certification") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Certification");
    $screenPhrase = gettext("View|View summary information about a training certification");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here
   $Grid1 = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"tracp";s:6:"phrase";s:20:"Prerequisite Courses";s:6:"number";i:1;s:6:"Fields";a:3:{s:12:"CertPrereqID";O:14:"invisiblefield":11:{s:4:"name";s:12:"CertPrereqID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Record ID|An automatically assigned number used to associate prior course requirements to training courses";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"tracp";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:6:"Course";O:9:"viewfield":16:{s:4:"name";s:6:"Course";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Course|A combined field used to describe this course when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"tracp";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:23:"CourseSatisfactionLevel";O:9:"viewfield":16:{s:4:"name";s:23:"CourseSatisfactionLevel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"Satisfaction Level|The level to which the course identified satisfies the associated certification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"tracp";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:114:"SELECT 
    count(*) 
FROM `tracp`
   
WHERE tracp._Deleted = 0
   AND `tracp`.CertificationID = \'/**RecordID**/\'
";s:7:"listSQL";s:473:"SELECT 
   `tracp`.CertPrereqID,
NULLIF(CONCAT(IFNULL(`tra1`.CourseTitle,\'\'),\' (\',IFNULL(`tra1`.CourseCode,\'\'),\')\'),\' ()\') AS Course,
`cod1`.Description AS CourseSatisfactionLevel
FROM `tracp`

   LEFT OUTER JOIN `tra` AS tra1 
   ON (`tracp`.CourseID = `tra1`.CourseID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`tracp`.CourseSatisfactionLevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'127\')
WHERE tracp._Deleted = 0
AND `tracp`.CertificationID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"CertificationID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:12:"CertPrereqID";s:3:"int";s:6:"Course";N;s:23:"CourseSatisfactionLevel";N;}s:4:"name";N;s:10:"fieldAlign";a:3:{s:12:"CertPrereqID";s:5:"right";s:6:"Course";s:7:"justify";s:23:"CourseSatisfactionLevel";s:4:"left";}}');
   $content .= $Grid1->render('view.php', $qsArgs);
   $Grid2 = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"rega";s:6:"phrase";s:11:"Regulations";s:6:"number";i:2;s:6:"Fields";a:3:{s:17:"RegulationAssocID";O:14:"invisiblefield":11:{s:4:"name";s:17:"RegulationAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Record ID|An automatically assigned number used to associate governmental regulations with related records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:6:"Agency";O:9:"viewfield":16:{s:4:"name";s:6:"Agency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Agency|Name of the government agency or internal entity";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Regulation";O:9:"viewfield":16:{s:4:"name";s:10:"Regulation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Regulation|A description of the regulation based on a combination of field values assigned from within the Regulations module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:147:"SELECT 
    count(*) 
FROM `rega`
   
WHERE rega._Deleted = 0
   AND `rega`.RelatedModuleID = \'trac\'
AND `rega`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:647:"SELECT 
   `rega`.RegulationAssocID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`org1`.Name AS Agency,
NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation
FROM `rega`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`rega`.RelatedRecordID = rdc1.RecordID AND `rega`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `reg` AS reg1 
   ON (`rega`.RegulationID = `reg1`.RegulationID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`reg1`.AgencyID = `org1`.OrganizationID )
WHERE rega._Deleted = 0
AND `rega`.RelatedModuleID = \'trac\'
AND `rega`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:3:{s:17:"RegulationAssocID";s:3:"int";s:6:"Agency";N;s:10:"Regulation";N;}s:4:"name";N;s:10:"fieldAlign";a:3:{s:17:"RegulationAssocID";s:5:"right";s:6:"Agency";s:4:"left";s:10:"Regulation";s:7:"justify";}}');
   $content .= $Grid2->render('view.php', $qsArgs);


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
