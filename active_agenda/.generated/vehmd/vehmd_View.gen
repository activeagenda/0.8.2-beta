<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:7:{s:14:"VehicleModelID";O:9:"viewfield":16:{s:4:"name";s:14:"VehicleModelID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:51:"Record ID|A unique id to identify states internally";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"VehMake";O:9:"viewfield":16:{s:4:"name";s:7:"VehMake";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Make|The make of the vehicle which is usually the manufacturer\'s name";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"VehModel";O:9:"viewfield":16:{s:4:"name";s:8:"VehModel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Model|The model of the vehicle assigned by the vehicle manufacturer";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"VehModelNo";O:9:"viewfield":16:{s:4:"name";s:10:"VehModelNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:146:"Model Number|The model number of the vehicle assigned by the vehicle manufacturer to differentiate models of the same type with different features";s:8:"dataType";s:11:"varchar(20)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"VehModelDesc";O:9:"viewfield":16:{s:4:"name";s:12:"VehModelDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Model Description|A detailed description of the vehicle model";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"BestPrice";O:9:"viewfield":16:{s:4:"name";s:9:"BestPrice";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:139:"Best Price|The best price available for the make and model of vehicle, stated in the currency assigned to this installation of the software";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"Suppliers";O:9:"viewfield":16:{s:4:"name";s:9:"Suppliers";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Suppliers|The suppliers offering this vehicle make and model across the global enterprise";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'VehicleModelID' => gettext("Record ID|A unique id to identify states internally"),
   'VehMake' => gettext("Make|The make of the vehicle which is usually the manufacturer's name"),
   'VehModel' => gettext("Model|The model of the vehicle assigned by the vehicle manufacturer"),
   'VehModelNo' => gettext("Model Number|The model number of the vehicle assigned by the vehicle manufacturer to differentiate models of the same type with different features"),
   'VehModelDesc' => gettext("Model Description|A detailed description of the vehicle model"),
   'BestPrice' => gettext("Best Price|The best price available for the make and model of vehicle, stated in the currency assigned to this installation of the software"),
   'Suppliers' => gettext("Suppliers|The suppliers offering this vehicle make and model across the global enterprise")
   );


    $ownerField = '';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `vehmd`.VehicleModelID,
   `cod1`.Description AS VehMake,
   `vehmd`.VehModel,
   `vehmd`.VehModelNo,
   `vehmd`.VehModelDesc,
   `vehmd`.BestPrice,
   `sup1`.Suppliers AS Suppliers,
   NULLIF(CONCAT(IFNULL(`cod1`.Description,''),' ',IFNULL(`vehmd`.VehModel,''),' ',IFNULL(`vehmd`.VehModelNo,'')),'  ') AS RecordLabel
FROM `vehmd`
   
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`vehmd`.VehMakeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '29')
     LEFT OUTER JOIN (SELECT 
GROUP_CONCAT(`org1`.Name ORDER BY `org1`.Name SEPARATOR ', ') AS Suppliers,
`sup`.RelatedRecordID FROM `sup` 

LEFT OUTER JOIN `org` AS org1 
   ON (`sup`.SupplierOrgID = `org1`.OrganizationID )
 WHERE `sup`._Deleted = 0 
 AND RelatedModuleID = 'vehmd' 
 AND 'vehmd' = `sup`.RelatedModuleID
GROUP BY `sup`.RelatedRecordID 
) AS sup1 
ON (`vehmd`.VehicleModelID = sup1.RelatedRecordID) 
WHERE
   vehmd.VehicleModelID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of vehicle Models"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Vehicle Model") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a vehicle model") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Vehicle Model") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Vehicle Model") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Vehicle Model");
    $screenPhrase = gettext("View|View summary information about a vehicle model");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here
   $Grid1 = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"sup";s:6:"phrase";s:9:"Suppliers";s:6:"number";i:1;s:6:"Fields";a:5:{s:10:"SupplierID";O:14:"invisiblefield":11:{s:4:"name";s:10:"SupplierID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Record ID|An automatically assigned number used to track organizations which supply goods and/or services to the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:11:"SupplierOrg";O:9:"viewfield":16:{s:4:"name";s:11:"SupplierOrg";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:33:"Supplier|The name of the supplier";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"ContactCard";O:9:"viewfield":16:{s:4:"name";s:11:"ContactCard";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Contact Card|A combined field used to group basic contact information of a person";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"CostPerUnit";O:9:"viewfield":16:{s:4:"name";s:11:"CostPerUnit";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:104:"Cost Per Unit|A combined field used to describe the cost per unit when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"MinimumOrder";O:9:"viewfield":16:{s:4:"name";s:12:"MinimumOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:114:"Minimum Unit Order|A combined field used to describe the minimum unit order when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"sup";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:144:"SELECT 
    count(*) 
FROM `sup`
   
WHERE sup._Deleted = 0
   AND `sup`.RelatedModuleID = \'vehmd\'
AND `sup`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1373:"SELECT 
   `sup`.SupplierID,
`sup`.OrganizationID,
`org1`.Name AS SupplierOrg,
NULLIF(CONCAT(IFNULL(`ppl1`.WorkPhone,\'\'),\', ext. \',IFNULL(`ppl1`.WorkExtension,\'\'),\' (work)\',\'<br />\',IFNULL(`ppl1`.MobilePhone,\'\'),\' (mobile)\',\'<br />\',IFNULL(`ppl1`.WorkFax,\'\'),\' (fax)\',\' <br /><a href=\\"mailto:\',IFNULL(`ppl1`.WorkEmail,\'\'),\'\\">\',IFNULL(`ppl1`.WorkEmail,\'\'),\'</a>\'),\', ext.  (work)<br /> (mobile)<br /> (fax) <br /><a href=\\\\\\"mailto:\\\\\\"></a>\') AS ContactCard,
NULLIF(CONCAT(IFNULL(ROUND(`sup`.UnitCost, 2),\'\'),\' \',IFNULL(NULLIF(CONCAT(IFNULL(`uts1`.UnitName,\'\')),\'\'),\'\')),\' \') AS CostPerUnit,
NULLIF(CONCAT(IFNULL(`sup`.MinimumUnitOrder,\'\'),\' \',IFNULL(NULLIF(CONCAT(IFNULL(`uts2`.UnitName,\'\')),\'\'),\'\')),\' \') AS MinimumOrder
FROM `sup`

   LEFT OUTER JOIN `org` AS org1 
   ON (`sup`.SupplierOrgID = `org1`.OrganizationID )
   LEFT OUTER JOIN `inv` AS inv1 
    ON (`sup`.SupplierID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'sup\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'73\')
   LEFT OUTER JOIN `uts` AS uts1 
   ON (`sup`.BaseUnitID = `uts1`.UnitID )
   LEFT OUTER JOIN `uts` AS uts2 
   ON (`sup`.MinimumOrderUoMID = `uts2`.UnitID )
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
WHERE sup._Deleted = 0
AND `sup`.RelatedModuleID = \'vehmd\'
AND `sup`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:10:"SupplierID";s:3:"int";s:11:"SupplierOrg";N;s:11:"ContactCard";N;s:11:"CostPerUnit";s:4:"text";s:12:"MinimumOrder";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:5:{s:10:"SupplierID";s:5:"right";s:11:"SupplierOrg";s:4:"left";s:11:"ContactCard";s:7:"justify";s:11:"CostPerUnit";s:7:"justify";s:12:"MinimumOrder";s:7:"justify";}}');
   $content .= $Grid1->render('view.php', $qsArgs);


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
