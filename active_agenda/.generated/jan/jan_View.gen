<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:9:{s:13:"JobAnalysisID";O:9:"viewfield":16:{s:4:"name";s:13:"JobAnalysisID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Record ID|A unique number assigned to each job being analyzed for hazards and functional requirements";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:73:"Organization|The organization authoring and/or utilizing the job analyses";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:114:"Person Accountable|The individual assigned primary accountability for maintaining the currency of the job analysis";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Function";O:9:"viewfield":16:{s:4:"name";s:8:"Function";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Function|The business purpose of the department responsible for the job to be performed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"JobAnalysisTitle";O:9:"viewfield":16:{s:4:"name";s:16:"JobAnalysisTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Job Analysis Title|A descriptive name of the job to be performed";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"JobAnalysisDesc";O:9:"viewfield":16:{s:4:"name";s:15:"JobAnalysisDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:190:"Job Analysis Description|A detailed description of the job to be performed. The detailed description will be very importnat to others interested in assigning this job to different job titles";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"LastReviewDate";O:9:"viewfield":16:{s:4:"name";s:14:"LastReviewDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Last Review|The date of the last formal review of the complete job analysis";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"JobAnalysisStatus";O:9:"viewfield":16:{s:4:"name";s:17:"JobAnalysisStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:39:"Status|Status of the job review process";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IsBestPractice";O:14:"invisiblefield":11:{s:4:"name";s:14:"IsBestPractice";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'JobAnalysisID' => gettext("Record ID|A unique number assigned to each job being analyzed for hazards and functional requirements"),
   'Organization' => gettext("Organization|The organization authoring and/or utilizing the job analyses"),
   'PersonAccountable' => gettext("Person Accountable|The individual assigned primary accountability for maintaining the currency of the job analysis"),
   'Function' => gettext("Function|The business purpose of the department responsible for the job to be performed"),
   'JobAnalysisTitle' => gettext("Job Analysis Title|A descriptive name of the job to be performed"),
   'JobAnalysisDesc' => gettext("Job Analysis Description|A detailed description of the job to be performed. The detailed description will be very importnat to others interested in assigning this job to different job titles"),
   'LastReviewDate' => gettext("Last Review|The date of the last formal review of the complete job analysis"),
   'JobAnalysisStatus' => gettext("Status|Status of the job review process"),
   'IsBestPractice' => gettext("Is Best Practice|Whether the associated record is a best practice")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    $useBestPractices = true;

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `jan`.JobAnalysisID,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   `cod1`.Description AS Function,
   `jan`.JobAnalysisTitle,
   `jan`.JobAnalysisDesc,
   `dat1`.RelatedDate AS LastReviewDate,
   `cod2`.Description AS JobAnalysisStatus,
   `bpc1`.IsBestPractice AS IsBestPractice,
   NULLIF(CONCAT(IFNULL(`jan`.JobAnalysisTitle,''),' | ',IFNULL(`org1`.Name,'')),' | ') AS RecordLabel,
   `jan`.OrganizationID
FROM `jan`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`jan`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`jan`.JobAnalysisID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'jan'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '48')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`jan`.FunctionID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '4')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`jan`.JobAnalysisID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'jan'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '20')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`jan`.JobAnalysisStatusID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '175')
     LEFT OUTER JOIN (SELECT 
COUNT(`bpc`.BestPracticeID) AS IsBestPractice,
`bpc`.RelatedRecordID FROM `bpc` 
 WHERE `bpc`._Deleted = 0 
 AND 'jan' = `bpc`.RelatedModuleID
GROUP BY `bpc`.RelatedRecordID 
) AS bpc1 
ON (`jan`.JobAnalysisID = bpc1.RelatedRecordID) 
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   jan.JobAnalysisID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Job Analyses"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about the job analysis") );
      $tempTabs['SpecificTasks'] = array( "edit.php?scr=SpecificTasks&$tabsQS", gettext("Specific Tasks|Associate job specific tasks with the job analysis") );
      $tempTabs['GeneralTasks'] = array( "edit.php?scr=GeneralTasks&$tabsQS", gettext("General Tasks|Associate general tasks with the job analysis") );
      $tempTabs['KSAs'] = array( "edit.php?scr=KSAs&$tabsQS", gettext("Qualifications|Associate knowledge, skill, and experience qualification levels with the job analysis") );
      $tempTabs['Glossary'] = array( "edit.php?scr=Glossary&$tabsQS", gettext("Glossary|Associate glossary terms with the job analysis") );
      $tempTabs['Partnerships'] = array( "edit.php?scr=Partnerships&$tabsQS", gettext("Policies|Associate partnerships and policies with the job analysis") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the job analysis") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the job analysis") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with a physical job analysis file") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the job analysis") , 'bpc');
      $tempTabs['Reports'] = array( "reports.php?scr=Reports&$tabsQS", gettext("Reports|View reports for this job analysis") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Analysis") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Job Analysis");
    $screenPhrase = gettext("View|View summary information about a job analysis");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
$content .= '<h1>'. gettext("Associations") .'</h1>';
$fields = '';
$phrases = array();
$SQL = '';
   $grids = array();
   $grids[1] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"janst";s:6:"phrase";s:18:"Job Specific Tasks";s:6:"number";i:1;s:6:"Fields";a:5:{s:17:"JobSpecificTaskID";O:14:"invisiblefield":11:{s:4:"name";s:17:"JobSpecificTaskID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Record ID|A unique number assigned to each task so that tasks can be associated with job analyses";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"janst";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:9:"SortOrder";O:9:"viewfield":16:{s:4:"name";s:9:"SortOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Order|A numerical value used to define the order of the task within the list";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"janst";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"TaskName";O:9:"viewfield":16:{s:4:"name";s:8:"TaskName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:60:"Task|A descriptive name of the specific task to be performed";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"janst";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"TaskOrganization";O:9:"viewfield":16:{s:4:"name";s:16:"TaskOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"Task Organization|The organization directly associated with the task";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"janst";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:178:"Location|Specific location within the facility where this task is performed. In the case of a multi-location task, this should be the primary location where the task is performed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"janst";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:112:"SELECT 
    count(*) 
FROM `janst`
   
WHERE janst._Deleted = 0
   AND `janst`.JobAnalysisID = \'/**RecordID**/\'
";s:7:"listSQL";s:932:"SELECT 
   `janst`.JobSpecificTaskID,
`jan1`.OrganizationID AS OrganizationID,
`janst`.SortOrder,
`janst`.TaskName,
`org1`.Name AS TaskOrganization,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location
FROM `janst`

   LEFT OUTER JOIN `jan` AS jan1 
   ON (`janst`.JobAnalysisID = `jan1`.JobAnalysisID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`janst`.TaskOrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`janst`.JobSpecificTaskID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'janst\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE janst._Deleted = 0
AND `janst`.JobAnalysisID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:13:"JobAnalysisID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:17:"JobSpecificTaskID";s:3:"int";s:9:"SortOrder";s:3:"int";s:8:"TaskName";s:12:"varchar(128)";s:16:"TaskOrganization";N;s:8:"Location";N;}s:4:"name";N;s:10:"fieldAlign";a:5:{s:17:"JobSpecificTaskID";s:5:"right";s:9:"SortOrder";s:5:"right";s:8:"TaskName";s:4:"left";s:16:"TaskOrganization";s:4:"left";s:8:"Location";s:7:"justify";}}');
   $grids[2] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:1:{s:9:"SortOrder";N;}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"jant";s:6:"phrase";s:13:"General Tasks";s:6:"number";i:2;s:6:"Fields";a:5:{s:9:"JobTaskID";O:14:"invisiblefield":11:{s:4:"name";s:9:"JobTaskID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:116:"Job Task ID|An automatically assigned number used to associate job analyses with tasks performed by the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"jant";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:9:"SortOrder";O:9:"viewfield":16:{s:4:"name";s:9:"SortOrder";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:5:"Order";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"jant";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:4:"Task";O:9:"viewfield":16:{s:4:"name";s:4:"Task";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:4:"Task";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"jant";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:8:"TaskLink";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"TaskOrganization";O:9:"viewfield":16:{s:4:"name";s:16:"TaskOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:17:"Task Organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"jant";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:8:"Location";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"jant";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:109:"SELECT 
    count(*) 
FROM `jant`
   
WHERE jant._Deleted = 0
   AND `jant`.JobAnalysisID = \'/**RecordID**/\'
";s:7:"listSQL";s:1089:"SELECT 
   `jant`.JobTaskID,
`jan1`.OrganizationID AS JAOrganizationID,
`jant`.SortOrder,
CONCAT(\'internal:view.php?mdl=\',\'tas\',\'&rid=\',`jant`.TaskID) AS TaskLink,
NULLIF(CONCAT(IFNULL(`tas1`.TaskName,\'\')),\'\') AS Task,
`org1`.Name AS TaskOrganization,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location
FROM `jant`

   LEFT OUTER JOIN `jan` AS jan1 
   ON (`jant`.JobAnalysisID = `jan1`.JobAnalysisID )
   LEFT OUTER JOIN `tas` AS tas1 
   ON (`jant`.TaskID = `tas1`.TaskID )
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`jant`.JobTaskID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'jant\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `org` AS org1 
   ON (`tas1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE jant._Deleted = 0
AND `jant`.JobAnalysisID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:13:"JobAnalysisID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:5:{s:9:"JobTaskID";s:3:"int";s:9:"SortOrder";s:3:"int";s:4:"Task";N;s:16:"TaskOrganization";N;s:8:"Location";N;}s:4:"name";N;s:10:"fieldAlign";a:5:{s:9:"JobTaskID";s:5:"right";s:9:"SortOrder";s:5:"right";s:4:"Task";s:7:"justify";s:16:"TaskOrganization";s:4:"left";s:8:"Location";s:7:"justify";}}');
   $grids[3] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"jank";s:6:"phrase";s:20:"Qualification Levels";s:6:"number";i:3;s:6:"Fields";a:4:{s:8:"JobKSAID";O:14:"invisiblefield":11:{s:4:"name";s:8:"JobKSAID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:108:"Record ID|An automatically assigned number used to track knowledge, skill, and bility associations with jobs";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"jank";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:10:"Capability";O:9:"viewfield":16:{s:4:"name";s:10:"Capability";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Capability|A combined field used to describe this strategic capability when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"jank";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:3:"KSA";O:9:"viewfield":16:{s:4:"name";s:3:"KSA";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"KSA|A combined field used to describe this KSA when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"jank";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"KSALevel";O:9:"viewfield":16:{s:4:"name";s:8:"KSALevel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:93:"KSA Level|A term or phrase used to distinguish levels of KSA achievement and/or qualification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"jank";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:12:"KSALevelLink";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:109:"SELECT 
    count(*) 
FROM `jank`
   
WHERE jank._Deleted = 0
   AND `jank`.JobAnalysisID = \'/**RecordID**/\'
";s:7:"listSQL";s:913:"SELECT 
   `jank`.JobKSAID,
`jan1`.OrganizationID AS JAOrganizationID,
NULLIF(CONCAT(IFNULL(`ksasc1`.CapabilityTitle,\'\'),\' (\',IFNULL(`ksasc1`.CapabilityAbbr,\'\'),\')\'),\' ()\') AS Capability,
NULLIF(CONCAT(IFNULL(`ksa1`.KSATitle,\'\'),\' (\',IFNULL(`ksa1`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,
CONCAT(\'internal:view.php?mdl=\',\'ksal\',\'&rid=\',`jank`.LevelID) AS KSALevelLink,
`cod1`.Description AS KSALevel
FROM `jank`

   LEFT OUTER JOIN `jan` AS jan1 
   ON (`jank`.JobAnalysisID = `jan1`.JobAnalysisID )
   LEFT OUTER JOIN `ksa` AS ksa1 
   ON (`jank`.KSAID = `ksa1`.KSAID )
   LEFT OUTER JOIN `ksal` AS ksal1 
   ON (`jank`.LevelID = `ksal1`.LevelID )
   LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa1`.CapabilityID = `ksasc1`.CapabilityID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksal1`.KSALevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'267\')
WHERE jank._Deleted = 0
AND `jank`.JobAnalysisID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:13:"JobAnalysisID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:8:"JobKSAID";s:3:"int";s:10:"Capability";N;s:3:"KSA";N;s:8:"KSALevel";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:8:"JobKSAID";s:5:"right";s:10:"Capability";s:7:"justify";s:3:"KSA";s:7:"justify";s:8:"KSALevel";s:4:"left";}}');
   $grids[4] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"gloa";s:6:"phrase";s:21:"Glossary Associations";s:6:"number";i:4;s:6:"Fields";a:4:{s:15:"GlossaryAssocID";O:14:"invisiblefield":11:{s:4:"name";s:15:"GlossaryAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:142:"Record ID|An automatically assigned number used to associate glossary associations with equipment and activities requiring a permit to operate";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"gloa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:8:"Glossary";O:9:"viewfield":16:{s:4:"name";s:8:"Glossary";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Glossary|A combined field used to describe this glossary item when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"gloa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Definition";O:9:"viewfield":16:{s:4:"name";s:10:"Definition";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Definition|The definition of the glossary item as it is uesd throughout the enterprise";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"gloa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"SpecialInterpretation";O:9:"viewfield":16:{s:4:"name";s:21:"SpecialInterpretation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:134:"Special Interpretation|Any special interpretations of the glossary item based on how the glossary item is used with the related record";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"gloa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `gloa`
   
WHERE gloa._Deleted = 0
   AND `gloa`.RelatedModuleID = \'jan\'
AND `gloa`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:360:"SELECT 
   `gloa`.GlossaryAssocID,
NULLIF(CONCAT(IFNULL(`glo1`.GlossaryItem,\'\')),\'\') AS Glossary,
`glo1`.Definition AS Definition,
`gloa`.SpecialInterpretation
FROM `gloa`

   LEFT OUTER JOIN `glo` AS glo1 
   ON (`gloa`.GlossaryID = `glo1`.GlossaryID )
WHERE gloa._Deleted = 0
AND `gloa`.RelatedModuleID = \'jan\'
AND `gloa`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:15:"GlossaryAssocID";s:3:"int";s:8:"Glossary";N;s:10:"Definition";N;s:21:"SpecialInterpretation";s:4:"text";}s:4:"name";N;s:10:"fieldAlign";a:4:{s:15:"GlossaryAssocID";s:5:"right";s:8:"Glossary";s:7:"justify";s:10:"Definition";s:7:"justify";s:21:"SpecialInterpretation";s:7:"justify";}}');
   $grids[5] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:5:"parpa";s:6:"phrase";s:19:"Policy Associations";s:6:"number";i:5;s:6:"Fields";a:4:{s:18:"PartnershipAssocID";O:14:"invisiblefield":11:{s:4:"name";s:18:"PartnershipAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:145:"Record ID|An automatically assigned number used to associate partnership associations with equipment and activities requiring a permit to operate";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"parpa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:174:"Implementing Organization|The organization with primary responsibility for implementing this partnership and maintaining currency with existing laws and internal requirements";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"parpa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"PartnershipTitle";O:9:"viewfield":16:{s:4:"name";s:16:"PartnershipTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:93:"Partnership Title|A unique title assigned to the partnership by the implementing organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"parpa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PartnershipNumber";O:9:"viewfield":16:{s:4:"name";s:17:"PartnershipNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:95:"Partnership Number|A unique number assigned to the partnership by the implementing organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"parpa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:150:"SELECT 
    count(*) 
FROM `parpa`
   
WHERE parpa._Deleted = 0
   AND `parpa`.RelatedModuleID = \'jan\'
AND `parpa`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:627:"SELECT 
   `parpa`.PartnershipAssocID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`org1`.Name AS Organization,
`par1`.PartnershipTitle AS PartnershipTitle,
`par1`.PartnershipNumber AS PartnershipNumber
FROM `parpa`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`parpa`.RelatedRecordID = rdc1.RecordID AND `parpa`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `par` AS par1 
   ON (`parpa`.PartnershipID = `par1`.PartnershipID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`par1`.OrganizationID = `org1`.OrganizationID )
WHERE parpa._Deleted = 0
AND `parpa`.RelatedModuleID = \'jan\'
AND `parpa`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:18:"PartnershipAssocID";s:3:"int";s:12:"Organization";N;s:16:"PartnershipTitle";N;s:17:"PartnershipNumber";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:18:"PartnershipAssocID";s:5:"right";s:12:"Organization";s:4:"left";s:16:"PartnershipTitle";s:4:"left";s:17:"PartnershipNumber";s:4:"left";}}');
   $grids[6] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prta";s:6:"phrase";s:16:"Accountabilities";s:6:"number";i:6;s:6:"Fields";a:4:{s:16:"ParticipantAccID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantAccID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Person Accountable|The name of the person accountable";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"AccountabilityType";O:9:"viewfield":16:{s:4:"name";s:18:"AccountabilityType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Accountability Type|The participant\'s specific type of accountability";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"AccountabilityStatus";O:9:"viewfield":16:{s:4:"name";s:20:"AccountabilityStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Accountability Status|The present status of this participant\'s ongoing involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prta";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `prta`
   
WHERE prta._Deleted = 0
   AND `prta`.RelatedModuleID = \'jan\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1172:"SELECT 
   `prta`.ParticipantAccID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonAccountable,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS AccountabilityType,
`cod1`.Description AS AccountabilityStatus
FROM `prta`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prta`.RelatedRecordID = rdc1.RecordID AND `prta`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`prta`.ParticipantAccID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'prta\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'70\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prta`.AccountabilityTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `acc` AS acc2 
    ON (`prta`.ParticipantAccID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = \'prta\'
     AND `acc2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`acc2`.AccountabilityStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prta._Deleted = 0
AND `prta`.RelatedModuleID = \'jan\'
AND `prta`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantAccID";s:3:"int";s:17:"PersonAccountable";N;s:18:"AccountabilityType";N;s:20:"AccountabilityStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantAccID";s:5:"right";s:17:"PersonAccountable";s:4:"left";s:18:"AccountabilityType";s:7:"justify";s:20:"AccountabilityStatus";s:4:"left";}}');
   $grids[7] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"prti";s:6:"phrase";s:11:"Involvement";s:6:"number";i:7;s:6:"Fields";a:4:{s:16:"ParticipantInvID";O:14:"invisiblefield":11:{s:4:"name";s:16:"ParticipantInvID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:103:"Participant ID|An automatically assigned number used to track risk control participant accountabilities";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"PersonInvolved";O:9:"viewfield":16:{s:4:"name";s:14:"PersonInvolved";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Person Involved|The name of the person involved";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"InvolvementType";O:9:"viewfield":16:{s:4:"name";s:15:"InvolvementType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Involvement Type|The participant\'s specific type of involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"InvolvementStatus";O:9:"viewfield":16:{s:4:"name";s:17:"InvolvementStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Involvement Status|The present status of this participant\'s involvement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"prti";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `prti`
   
WHERE prti._Deleted = 0
   AND `prti`.RelatedModuleID = \'jan\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1151:"SELECT 
   `prti`.ParticipantInvID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`ppl1`.DisplayName AS PersonInvolved,
NULLIF(CONCAT(IFNULL(`prtt1`.ParticipationTitle,\'\')),\'\') AS InvolvementType,
`cod1`.Description AS InvolvementStatus
FROM `prti`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`prti`.RelatedRecordID = rdc1.RecordID AND `prti`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `inv` AS inv1 
    ON (`prti`.ParticipantInvID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'prti\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'78\')
   LEFT OUTER JOIN `prtt` AS prtt1 
   ON (`prti`.InvolvementTypeID = `prtt1`.ParticipationTypeID )
   LEFT OUTER JOIN `inv` AS inv2 
    ON (`prti`.ParticipantInvID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = \'prti\'
     AND `inv2`._Deleted = 0)
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`inv2`.InvolvementStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'199\')
WHERE prti._Deleted = 0
AND `prti`.RelatedModuleID = \'jan\'
AND `prti`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:16:"ParticipantInvID";s:3:"int";s:14:"PersonInvolved";N;s:15:"InvolvementType";N;s:17:"InvolvementStatus";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:16:"ParticipantInvID";s:5:"right";s:14:"PersonInvolved";s:4:"left";s:15:"InvolvementType";s:7:"justify";s:17:"InvolvementStatus";s:4:"left";}}');
   $grids[8] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:4:"filr";s:6:"phrase";s:14:"Physical Files";s:6:"number";i:8;s:6:"Fields";a:6:{s:12:"FileRecordID";O:14:"invisiblefield":11:{s:4:"name";s:12:"FileRecordID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Record ID|An automatically assigned number used to associate records with physical files";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:18:"FilingOrganization";O:9:"viewfield":16:{s:4:"name";s:18:"FilingOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:94:"Filing Organization|The name of the organization where the  where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"File Location|Specific area within the facility where the physical file is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"FileName";O:9:"viewfield":16:{s:4:"name";s:8:"FileName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:68:"File Name|A short title or phrase used to identify the physical file";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"FileNumber";O:9:"viewfield":16:{s:4:"name";s:10:"FileNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"File Number|A number manually assigned to a file for tracking purposes";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"SystemNumber";O:9:"viewfield":16:{s:4:"name";s:12:"SystemNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:262:"System Number|A unique number assigned to the phisical file based on a combination of fields from within the file retention module. The system number is comprised of the filing organization ID, the filing location ID, the file type ID and the record retention ID";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"filr";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `filr`
   
WHERE filr._Deleted = 0
   AND `filr`.RelatedModuleID = \'jan\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1267:"SELECT 
   `filr`.FileRecordID,
`filph1`.FilingOrganizationID AS FilingOrganizationID,
`org1`.Name AS FilingOrganization,
NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\') AS Location,
`filph1`.FileName AS FileName,
`filph1`.FileNumber AS FileNumber,
NULLIF(CONCAT(IFNULL(`filph1`.FilingOrganizationID,\'\'),IFNULL(`orgla1`.LocationID,\'\'),IFNULL(`fil1`.FileTypeID,\'\'),IFNULL(`filph1`.FileRetentionID,\'\')),\'\') AS SystemNumber
FROM `filr`

   LEFT OUTER JOIN `filph` AS filph1 
   ON (`filr`.FileRetentionID = `filph1`.FileRetentionID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`filph1`.FilingOrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`filph1`.FileRetentionID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'filph\'
     AND `orgla1`._Deleted = 0)
   LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
   LEFT OUTER JOIN `fil` AS fil1 
   ON (`filph1`.FileReqID = `fil1`.FileReqID )
   LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
   LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE filr._Deleted = 0
AND `filr`.RelatedModuleID = \'jan\'
AND `filr`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:6:{s:12:"FileRecordID";s:3:"int";s:18:"FilingOrganization";N;s:8:"Location";N;s:8:"FileName";N;s:10:"FileNumber";N;s:12:"SystemNumber";N;}s:4:"name";N;s:10:"fieldAlign";a:6:{s:12:"FileRecordID";s:5:"right";s:18:"FilingOrganization";s:4:"left";s:8:"Location";s:7:"justify";s:8:"FileName";s:4:"left";s:10:"FileNumber";s:4:"left";s:12:"SystemNumber";s:7:"justify";}}');
   $grids[9] = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:0:{}s:6:"isInfo";b:0;s:10:"isGuidance";b:0;s:10:"isVertical";b:0;s:15:"verticalFormats";a:0:{}s:8:"moduleID";s:3:"bpc";s:6:"phrase";s:14:"Best Practices";s:6:"number";i:9;s:6:"Fields";a:4:{s:14:"BestPracticeID";O:14:"invisiblefield":11:{s:4:"name";s:14:"BestPracticeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Record ID|An automatically assigned number used to track best practices";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:20:"BestPracticeCategory";O:9:"viewfield":16:{s:4:"name";s:20:"BestPracticeCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Best Practice Category|A method of categorizing best practices of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"BestPracticeTitle";O:9:"viewfield":16:{s:4:"name";s:17:"BestPracticeTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:71:"Best Practice Title|A descriptive title of the best practice identified";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Evaluator|The individual evaluating and awarding the best practice";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"bpc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:142:"SELECT 
    count(*) 
FROM `bpc`
   
WHERE bpc._Deleted = 0
   AND `bpc`.RelatedModuleID = \'jan\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:676:"SELECT 
   `bpc`.BestPracticeID,
`cod1`.Description AS BestPracticeCategory,
`bpc`.BestPracticeTitle,
`ppl1`.DisplayName AS PersonAccountable
FROM `bpc`

   LEFT OUTER JOIN `cod` AS cod1 
   ON (`bpc`.BestPracticeCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'108\')
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`bpc`.BestPracticeID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'bpc\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'142\')
   LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE bpc._Deleted = 0
AND `bpc`.RelatedModuleID = \'jan\'
AND `bpc`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:4:{s:14:"BestPracticeID";s:3:"int";s:20:"BestPracticeCategory";N;s:17:"BestPracticeTitle";s:12:"varchar(128)";s:17:"PersonAccountable";N;}s:4:"name";N;s:10:"fieldAlign";a:4:{s:14:"BestPracticeID";s:5:"right";s:20:"BestPracticeCategory";s:4:"left";s:17:"BestPracticeTitle";s:4:"left";s:17:"PersonAccountable";s:4:"left";}}');
$content .= renderViewScreenSection($fields, $phrases, $SQL, $grids);

?>
