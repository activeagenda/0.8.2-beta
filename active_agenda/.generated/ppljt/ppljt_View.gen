<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:11:{s:16:"PeopleJobTitleID";O:9:"viewfield":16:{s:4:"name";s:16:"PeopleJobTitleID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Job Title ID|A unique number assigned to each job title occupied by each employee for a stated period of time";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"LastName";O:9:"viewfield":16:{s:4:"name";s:8:"LastName";s:10:"parentName";N;s:6:"Fields";a:1:{s:9:"FirstName";O:9:"viewfield":16:{s:4:"name";s:9:"FirstName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:38:"First Name|Given Name of an individual";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:38:"Last Name|Family Name of an individual";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"EmployeeNo";O:9:"viewfield":16:{s:4:"name";s:10:"EmployeeNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Employee Number|A uniques number assigned by the organization to each employee for tracking purposes";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Organization|The organization the employee reports to";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"OrgJobTitle";O:9:"viewfield":16:{s:4:"name";s:11:"OrgJobTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Job Title|A combined field used to describe this job title when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Function";O:9:"viewfield":16:{s:4:"name";s:8:"Function";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:46:"Function|The business purpose of the job title";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"LocalLevel";O:9:"viewfield":16:{s:4:"name";s:10:"LocalLevel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:111:"Organization Level|A hierarchical level of an organization to which individuals of an organization are assigned";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"JobTitleCategory";O:9:"viewfield":16:{s:4:"name";s:16:"JobTitleCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Job Title Category|A broad categoy used to group job titles of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"JobTitleType";O:9:"viewfield":16:{s:4:"name";s:12:"JobTitleType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Job Title Type|A combined field used to describe this job title type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"JobTitleTypeDesc";O:9:"viewfield":16:{s:4:"name";s:16:"JobTitleTypeDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Type Description|A brief but thorough description of the specific type of job title";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Service";O:9:"viewfield":16:{s:4:"name";s:7:"Service";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Service|The automatically calculated amount of time the employee has worked for the company";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'PeopleJobTitleID' => gettext("Job Title ID|A unique number assigned to each job title occupied by each employee for a stated period of time"),
   'LastName' => gettext("Last Name|Family Name of an individual"),
   'EmployeeNo' => gettext("Employee Number|A uniques number assigned by the organization to each employee for tracking purposes"),
   'Organization' => gettext("Organization|The organization the employee reports to"),
   'OrgJobTitle' => gettext("Job Title|A combined field used to describe this job title when associating it with other records"),
   'Function' => gettext("Function|The business purpose of the job title"),
   'LocalLevel' => gettext("Organization Level|A hierarchical level of an organization to which individuals of an organization are assigned"),
   'JobTitleCategory' => gettext("Job Title Category|A broad categoy used to group job titles of similar types"),
   'JobTitleType' => gettext("Job Title Type|A combined field used to describe this job title type when associating it with other records"),
   'JobTitleTypeDesc' => gettext("Type Description|A brief but thorough description of the specific type of job title"),
   'Service' => gettext("Service|The automatically calculated amount of time the employee has worked for the company")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `ppljt`.PeopleJobTitleID,
   `ppl1`.FirstName AS FirstName,
   `ppl1`.LastName AS LastName,
   `pple1`.EmployeeNo AS EmployeeNo,
   `org1`.Name AS Organization,
   NULLIF(CONCAT(IFNULL(`orgjt1`.JobTitleName,'')),'') AS OrgJobTitle,
   `cod1`.Description AS Function,
   `cod2`.Description AS LocalLevel,
   `cod3`.Description AS JobTitleCategory,
   NULLIF(CONCAT(IFNULL(`orgtt2`.JobTitleTypeTitle,'')),'') AS JobTitleType,
   `orgtt2`.JobTitleTypeDesc AS JobTitleTypeDesc,
   CONCAT(FLOOR(DATEDIFF(IFNULL(`dat2`.RelatedDate, now()), `dat1`.RelatedDate)/365.24), ' years, ', ROUND(MOD(DATEDIFF(IFNULL(`dat2`.RelatedDate, now()), `dat1`.RelatedDate), 365.24)/30.44), ' months') AS Service,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`orgjt1`.JobTitleName,'')),''),''),' | ',IFNULL(`ppl1`.FirstName,''),' ',IFNULL(`ppl1`.LastName,''),' | ',IFNULL(CONCAT(FLOOR(DATEDIFF(IFNULL(`dat2`.RelatedDate, now()), `dat1`.RelatedDate)/365.24), ' years, ', ROUND(MOD(DATEDIFF(IFNULL(`dat2`.RelatedDate, now()), `dat1`.RelatedDate), 365.24)/30.44), ' months'),'')),' |   | ') AS RecordLabel,
   `ppl1`.OrganizationID AS OrganizationID
FROM `ppljt`
   
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ppljt`.PersonID = `ppl1`.PersonID )
     LEFT OUTER JOIN `pple` AS pple1 
   ON (`ppljt`.PersonID = `pple1`.PersonID )
     LEFT OUTER JOIN `orgjt` AS orgjt1 
   ON (`ppljt`.OrgJobTitleID = `orgjt1`.OrgJobTitleID )
     LEFT OUTER JOIN `orgtt` AS orgtt1 
   ON (`ppljt`.OrgJobTitleID = `orgtt1`.JobTitleTypeID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`ppljt`.PeopleJobTitleID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'ppljt'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '28')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`ppljt`.PeopleJobTitleID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'ppljt'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '36')
     LEFT OUTER JOIN `org` AS org1 
   ON (`ppl1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`orgjt1`.FunctionID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '4')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`orgjt1`.LocalLevelID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '22')
     LEFT OUTER JOIN `orgtt` AS orgtt2 
   ON (`orgtt1`.JobTitleTypeID = `orgtt2`.JobTitleTypeID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`orgtt2`.JobTitleCategoryID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '20')
WHERE
   ppljt.PeopleJobTitleID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Job Title Assignments"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Title Assignment") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about an employee job title during a stated period") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Title Assignment") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Job Title Assignment") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Job Title Assignment");
    $screenPhrase = gettext("View|View summary information about an employee job title during a stated period");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
