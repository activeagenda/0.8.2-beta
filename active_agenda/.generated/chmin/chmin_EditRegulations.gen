<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:14:{s:19:"ChemicalInventoryID";O:9:"viewfield":16:{s:4:"name";s:19:"ChemicalInventoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Record ID|An automatically assigned number used to track chemical inventory and storage practices";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"ChemicalID";O:9:"viewfield":16:{s:4:"name";s:10:"ChemicalID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Chemical ID|An automatically assigned number used to track material safety data sheets for chemicals used by the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Chemical";O:9:"viewfield":16:{s:4:"name";s:8:"Chemical";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Chemical Name|The common name of the chemical stored at this location";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:176:"Organization|The organization with primary responsibility for this record. Access to this record can be restricted to those users directly associated with the same organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"Person Accountable|The person with primary accountability for managing the chemical inventory item";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Department";O:9:"viewfield":16:{s:4:"name";s:10:"Department";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:116:"Department Responsible|Department responsible for the management of the chemical at the specific location identified";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Location|Specific location within the facility where the chemical is stored or used";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"ChemicalStorageMethod";O:9:"viewfield":16:{s:4:"name";s:21:"ChemicalStorageMethod";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:69:"Storage Method|The specific method used to store the chemical on site";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"TrackingNumber";O:9:"viewfield":16:{s:4:"name";s:14:"TrackingNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"Container Number|A unique tracking number fixed to the storage container/s";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"StorageDesc";O:9:"viewfield":16:{s:4:"name";s:11:"StorageDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:96:"Storage Description|A detailed description of the method and manner of storage for this chemical";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"AmountPerYear";O:9:"viewfield":16:{s:4:"name";s:13:"AmountPerYear";s:10:"parentName";N;s:6:"Fields";a:1:{s:11:"AmtPerYrUoM";O:9:"viewfield":16:{s:4:"name";s:11:"AmtPerYrUoM";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:76:"Amount Per Year|Amount of chemical stored at this specific location per year";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"AmountPerDay";O:9:"viewfield":16:{s:4:"name";s:12:"AmountPerDay";s:10:"parentName";N;s:6:"Fields";a:1:{s:12:"AmtPerDayUoM";O:9:"viewfield":16:{s:4:"name";s:12:"AmtPerDayUoM";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:74:"Amount Per Day|Amount of chemical stored at this specific location per day";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"MaxAmountAllowed";O:9:"viewfield":16:{s:4:"name";s:16:"MaxAmountAllowed";s:10:"parentName";N;s:6:"Fields";a:1:{s:9:"MaxAmtUoM";O:9:"viewfield":16:{s:4:"name";s:9:"MaxAmtUoM";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:112:"Maximum Amount Allowed|Maximum amount of chemical allowed to be stored at this specific location at any one time";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"DaysOnSite";O:9:"viewfield":16:{s:4:"name";s:10:"DaysOnSite";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:95:"Days On Site Per Year|Number of days this chemical is stored at this specific location per year";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Chemical Inventory");

//field value array
$data = array(
        'ChemicalInventoryID' => '',
         'ChemicalID' => '',
         'Chemical' => '',
         'Organization' => '',
         'PersonAccountable' => '',
         'Department' => '',
         'Location' => '',
         'ChemicalStorageMethod' => '',
         'TrackingNumber' => '',
         'StorageDesc' => '',
         'AmtPerYrUoM' => '',
         'AmountPerYear' => '',
         'AmtPerDayUoM' => '',
         'AmountPerDay' => '',
         'MaxAmtUoM' => '',
         'MaxAmountAllowed' => '',
         'DaysOnSite' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[2] = unserialize('O:8:"editgrid":32:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:1580:"SELECT 
   `rega`.RegulationAssocID,
   `cod1`.Description AS AgencyLevel,
   `reg1`.AgencyLevelID AS AgencyLevelID,
   `org1`.Name AS Agency,
   `reg1`.AgencyID AS AgencyID,
   NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation,
   `rega`.RegulationID,
   `reg1`.RegScope AS RegScope,
   `reg1`.RegDescription AS RegDescription,
   `reg1`.RegURL AS RegURL,
   `rega`.MannerAffected,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `cod2`.Description AS ComplianceStatus,
   `rega`.ComplianceStatusID,
   `rdc1`.OrganizationID AS OwnerOrganizationID
FROM `rega`
   
     LEFT OUTER JOIN `reg` AS reg1 
   ON (`rega`.RegulationID = `reg1`.RegulationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`rega`.RegulationAssocID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'rega\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'77\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`rega`.ComplianceStatusID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'94\')
     LEFT OUTER JOIN `rdc` AS rdc1 ON (`rega`.RelatedRecordID = rdc1.RecordID AND `rega`.RelatedModuleID = rdc1.ModuleID)
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`reg1`.AgencyLevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'7\')
     LEFT OUTER JOIN `org` AS org1 
   ON (`reg1`.AgencyID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   rega.RegulationAssocID=\'/**RowID**/\'";s:9:"getRowSQL";s:603:"SELECT 
   `rega`.RegulationAssocID,
   `org1`.Name AS Agency,
   NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation,
   `rdc1`.OrganizationID AS OwnerOrganizationID
FROM `rega`
   
     LEFT OUTER JOIN `reg` AS reg1 
   ON (`rega`.RegulationID = `reg1`.RegulationID )
     LEFT OUTER JOIN `rdc` AS rdc1 ON (`rega`.RelatedRecordID = rdc1.RecordID AND `rega`.RelatedModuleID = rdc1.ModuleID)
     LEFT OUTER JOIN `org` AS org1 
   ON (`reg1`.AgencyID = `org1`.OrganizationID )
WHERE
   rega.RegulationAssocID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:10:{s:17:"RegulationAssocID";O:14:"invisiblefield":11:{s:4:"name";s:17:"RegulationAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Record ID|An automatically assigned number used to associate governmental regulations with related records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:13:"AgencyLevelID";O:14:"codecombofield":27:{s:4:"name";s:13:"AgencyLevelID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:82:"Agency Level|The heirarchial level of the agency from an international perspective";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:16:"CodeTypeID = \'7\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:140:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'7\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:8:"AgencyID";a:1:{s:4:"name";s:8:"AgencyID";}}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:1:"7";}s:8:"AgencyID";O:13:"orgcombofield":26:{s:4:"name";s:8:"AgencyID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Agency|Name of the government agency or internal entity";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name, `org`.AgencyLevelID AS ParentID FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:143:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name, `org`.AgencyLevelID AS ParentID FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";s:13:"AgencyLevelID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:12:"RegulationID";a:1:{s:4:"name";s:12:"RegulationID";}}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:12:"RegulationID";O:10:"combofield":26:{s:4:"name";s:12:"RegulationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Regulation|A description of the regulation based on a combination of field values assigned from within the Regulations module";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"reg";s:10:"foreignKey";s:12:"RegulationID";s:12:"foreignField";s:10:"Regulation";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:239:"SELECT 
`reg`.RegulationID AS ID, NULLIF(CONCAT(IFNULL(`reg`.RegTitle,\'\'),\' | \',IFNULL(`reg`.RegCode,\'\'),\' | \',IFNULL(`reg`.RegSection,\'\')),\' |  | \') AS Name, `reg`.AgencyID AS ParentID FROM `reg`
WHERE reg._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:239:"SELECT 
`reg`.RegulationID AS ID, NULLIF(CONCAT(IFNULL(`reg`.RegTitle,\'\'),\' | \',IFNULL(`reg`.RegCode,\'\'),\' | \',IFNULL(`reg`.RegSection,\'\')),\' |  | \') AS Name, `reg`.AgencyID AS ParentID FROM `reg`

WHERE `reg`.RegulationID = \'/*recordID*/\'";s:11:"parentField";s:8:"AgencyID";s:21:"parentListModuleField";N;s:11:"childFields";a:3:{s:8:"RegScope";a:1:{s:4:"name";s:8:"RegScope";}s:14:"RegDescription";a:1:{s:4:"name";s:14:"RegDescription";}s:6:"RegURL";a:1:{s:4:"name";s:6:"RegURL";}}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:8:"RegScope";O:9:"viewfield":16:{s:4:"name";s:8:"RegScope";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:138:"Scope|The scope of the regulation. The scope should include a broad statement regarding the types of facilities affected by the regulation";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:12:"RegulationID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:14:"RegDescription";O:9:"viewfield":16:{s:4:"name";s:14:"RegDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:63:"Description|A simple but detailed description of the regulation";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:12:"RegulationID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:6:"RegURL";O:9:"viewfield":16:{s:4:"name";s:6:"RegURL";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Uniform Resource Locator|The internet address of the respective regulation\'";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:6:"RegURL";s:11:"parentField";s:12:"RegulationID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:14:"MannerAffected";O:9:"memofield":15:{s:4:"name";s:14:"MannerAffected";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Manner Affected|A detailed description of the manner in which the related record is affected by the regulation";s:8:"dataType";s:4:"text";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Person Accountable|The individual assigned primary accountability for the specific regulatory requirement";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:18:"ComplianceStatusID";O:14:"codecombofield":27:{s:4:"name";s:18:"ComplianceStatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:54:"Compliance Status|Current regulatory compliance status";s:8:"dataType";s:3:"int";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'94\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'94\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"rega";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"94";}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:17:"RegulationAssocID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"rega";s:6:"phrase";s:11:"Regulations";s:6:"number";i:2;s:6:"Fields";a:3:{s:17:"RegulationAssocID";O:14:"invisiblefield":11:{s:4:"name";s:17:"RegulationAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:106:"Record ID|An automatically assigned number used to associate governmental regulations with related records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:6:"Agency";O:9:"viewfield":16:{s:4:"name";s:6:"Agency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:55:"Agency|Name of the government agency or internal entity";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Regulation";O:9:"viewfield":16:{s:4:"name";s:10:"Regulation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Regulation|A description of the regulation based on a combination of field values assigned from within the Regulations module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"rega";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:148:"SELECT 
    count(*) 
FROM `rega`
   
WHERE rega._Deleted = 0
   AND `rega`.RelatedModuleID = \'chmin\'
AND `rega`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:648:"SELECT 
   `rega`.RegulationAssocID,
`rdc1`.OrganizationID AS OwnerOrganizationID,
`org1`.Name AS Agency,
NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation
FROM `rega`

   LEFT OUTER JOIN `rdc` AS rdc1 ON (`rega`.RelatedRecordID = rdc1.RecordID AND `rega`.RelatedModuleID = rdc1.ModuleID)
   LEFT OUTER JOIN `reg` AS reg1 
   ON (`rega`.RegulationID = `reg1`.RegulationID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`reg1`.AgencyID = `org1`.OrganizationID )
WHERE rega._Deleted = 0
AND `rega`.RelatedModuleID = \'chmin\'
AND `rega`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";s:19:"ChemicalInventoryID";s:8:"PKFields";a:1:{i:0;s:17:"RegulationAssocID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:10:"conditions";a:1:{s:15:"RelatedModuleID";s:5:"chmin";}}');


    $guidanceGrid = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:1:{s:20:"GuidanceOrganization";N;}s:6:"isInfo";b:0;s:10:"isGuidance";b:1;s:10:"isVertical";b:1;s:15:"verticalFormats";a:3:{s:16:"OrganizationLogo";s:9:"LogoField";s:28:"RegulatoryConsiderationTitle";s:10:"TitleField";s:34:"RegulatoryConsiderationDescription";s:12:"FeatureField";}s:8:"moduleID";s:4:"regc";s:6:"phrase";s:19:"Regulatory Guidance";s:6:"number";N;s:6:"Fields";a:7:{s:25:"RegulatoryConsiderationID";O:14:"invisiblefield":11:{s:4:"name";s:25:"RegulatoryConsiderationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:141:"Record ID|An automatically assigned number used to track the association of regulatory considerations with records throughout the application";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:16:"OrganizationLogo";O:9:"viewfield":16:{s:4:"name";s:16:"OrganizationLogo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Organization Logo|Displays the logo of the guidance organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:28:"RegulatoryConsiderationTitle";O:9:"viewfield":16:{s:4:"name";s:28:"RegulatoryConsiderationTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:75:"Title|A short title or phrase used to describe the regulatory consideration";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:34:"RegulatoryConsiderationDescription";O:9:"viewfield":16:{s:4:"name";s:34:"RegulatoryConsiderationDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:174:"Consideration|A detailed description of the regulatory consideration and the manner in which the activity associated with the related record may be impacted by the regulation";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Regulation";O:9:"viewfield":16:{s:4:"name";s:10:"Regulation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Regulation|A description of the regulation based on a combination of field values assigned from within the Regulations module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"GuidanceOrganization";O:9:"viewfield":16:{s:4:"name";s:20:"GuidanceOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Guidance Provided By|A combined field used to describe the guidance organization when associating it with guidance types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"GuidancePerson";O:9:"viewfield":16:{s:4:"name";s:14:"GuidancePerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Guidance Person|The individual providing guidance for consideration";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"regc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:337:"SELECT 
    count(*) 
FROM `regc`
   
   LEFT OUTER JOIN `gui` AS gui1 
   ON (`regc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
 INNER JOIN `chmin` AS `parent` ON `gui1`.RelatedRecordID = `parent`.ChemicalID
WHERE regc._Deleted = 0
   AND `gui1`.RelatedModuleID = \'chm\'
AND `parent`.ChemicalInventoryID = \'/**RecordID**/\'
";s:7:"listSQL";s:1451:"SELECT 
   `regc`.RegulatoryConsiderationID,
`regc`.GuidanceOrganizationID,
NULLIF(CONCAT(\'<img src=\\"org/\',IFNULL(IFNULL(`org1`.GuidanceLogoName, \'transparent.gif\'),\'\'),\'\\" alt=\\"logo\\" />\'),\'<img src=\\\\\\"org/\\\\\\" alt=\\\\\\"logo\\\\\\" />\') AS OrganizationLogo,
`regc`.RegulatoryConsiderationTitle,
`regc`.RegulatoryConsiderationDescription,
NULLIF(CONCAT(IFNULL(`reg1`.RegTitle,\'\'),\' | \',IFNULL(`reg1`.RegCode,\'\'),\' | \',IFNULL(`reg1`.RegSection,\'\')),\' |  | \') AS Regulation,
NULLIF(CONCAT(IFNULL(`org2`.Name,\'\')),\'\') AS GuidanceOrganization,
`ppl1`.DisplayName AS GuidancePerson
FROM `regc`

   LEFT OUTER JOIN `gui` AS gui1 
   ON (`regc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
   LEFT OUTER JOIN `reg` AS reg1 
   ON (`regc`.RegulationID = `reg1`.RegulationID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`gui1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `org` AS org2 
   ON (`gui1`.OrganizationID = `org2`.OrganizationID )
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`gui1`.GuidanceOrganizationID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'gui\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'184\')
   LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
 INNER JOIN `chmin` AS `parent` ON `gui1`.RelatedRecordID = `parent`.ChemicalID
WHERE regc._Deleted = 0
AND `gui1`.RelatedModuleID = \'chm\'
AND `parent`.ChemicalInventoryID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:2:{s:13:"suppressTitle";b:1;s:19:"suppressRecordIcons";b:1;}s:10:"fieldTypes";a:7:{s:25:"RegulatoryConsiderationID";s:3:"int";s:16:"OrganizationLogo";N;s:28:"RegulatoryConsiderationTitle";s:12:"varchar(128)";s:34:"RegulatoryConsiderationDescription";s:4:"text";s:10:"Regulation";N;s:20:"GuidanceOrganization";N;s:14:"GuidancePerson";N;}s:4:"name";N;s:10:"fieldAlign";a:7:{s:25:"RegulatoryConsiderationID";s:5:"right";s:16:"OrganizationLogo";s:7:"justify";s:28:"RegulatoryConsiderationTitle";s:4:"left";s:34:"RegulatoryConsiderationDescription";s:7:"justify";s:10:"Regulation";s:7:"justify";s:20:"GuidanceOrganization";s:7:"justify";s:14:"GuidancePerson";s:4:"left";}}');


    $PKField = 'ChemicalInventoryID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[2]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Suppliers";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `chmin`.ChemicalInventoryID,
   `chmin`.ChemicalID,
   `chm1`.CommonName AS Chemical,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   NULLIF(CONCAT(IFNULL(`orgdp1`.DepartmentName,'')),'') AS Department,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS Location,
   `cod1`.Description AS ChemicalStorageMethod,
   `chmin`.TrackingNumber,
   `chmin`.StorageDesc,
   NULLIF(CONCAT(IFNULL(`uts10`.UnitName,'')),'') AS AmtPerYrUoM,
   `chmin`.AmountPerYear,
   NULLIF(CONCAT(IFNULL(`uts11`.UnitName,'')),'') AS AmtPerDayUoM,
   `chmin`.AmountPerDay,
   NULLIF(CONCAT(IFNULL(`uts9`.UnitName,'')),'') AS MaxAmtUoM,
   `chmin`.MaxAmountAllowed,
   `chmin`.DaysOnSite,
   NULLIF(CONCAT(IFNULL(`chm1`.CommonName,''),' | ',IFNULL(`org1`.Name,''),' | ',IFNULL(NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),''),'')),' |  | ') AS RecordLabel,
   `chmin`.OrganizationID
FROM `chmin`
   
     LEFT OUTER JOIN `chm` AS chm1 
   ON (`chmin`.ChemicalID = `chm1`.ChemicalID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`chmin`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`chmin`.ChemicalInventoryID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'chmin'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '15')
     LEFT OUTER JOIN `orgda` AS orgda1 
    ON (`chmin`.ChemicalInventoryID = `orgda1`.RelatedRecordID 
     AND `orgda1`.RelatedModuleID = 'chmin'
     AND `orgda1`._Deleted = 0)
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`chmin`.ChemicalInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'chmin'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`chmin`.ChemicalStorageMethodID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '115')
     LEFT OUTER JOIN `uts` AS uts10 
   ON (`chmin`.AmtPerYrUoMID = `uts10`.UnitID )
     LEFT OUTER JOIN `uts` AS uts11 
   ON (`chmin`.AmtPerDayUoMID = `uts11`.UnitID )
     LEFT OUTER JOIN `uts` AS uts9 
   ON (`chmin`.MaxAmtUoMID = `uts9`.UnitID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `orgdp` AS orgdp1 
   ON (`orgda1`.DepartmentID = `orgdp1`.DepartmentID )
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   chmin.ChemicalInventoryID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Chemical Inventory");
        $screenPhrase = gettext("Regulations|Associate regulations with the chemical inventory");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Chemical Inventory");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'ChemicalInventoryID' => gettext("Record ID|An automatically assigned number used to track chemical inventory and storage practices"),
   'ChemicalID' => gettext("Chemical ID|An automatically assigned number used to track material safety data sheets for chemicals used by the organization"),
   'Chemical' => gettext("Chemical Name|The common name of the chemical stored at this location"),
   'Organization' => gettext("Organization|The organization with primary responsibility for this record. Access to this record can be restricted to those users directly associated with the same organization"),
   'PersonAccountable' => gettext("Person Accountable|The person with primary accountability for managing the chemical inventory item"),
   'Department' => gettext("Department Responsible|Department responsible for the management of the chemical at the specific location identified"),
   'Location' => gettext("Location|Specific location within the facility where the chemical is stored or used"),
   'ChemicalStorageMethod' => gettext("Storage Method|The specific method used to store the chemical on site"),
   'TrackingNumber' => gettext("Container Number|A unique tracking number fixed to the storage container/s"),
   'StorageDesc' => gettext("Storage Description|A detailed description of the method and manner of storage for this chemical"),
   'AmountPerYear' => gettext("Amount Per Year|Amount of chemical stored at this specific location per year"),
   'AmountPerDay' => gettext("Amount Per Day|Amount of chemical stored at this specific location per day"),
   'MaxAmountAllowed' => gettext("Maximum Amount Allowed|Maximum amount of chemical allowed to be stored at this specific location at any one time"),
   'DaysOnSite' => gettext("Days On Site Per Year|Number of days this chemical is stored at this specific location per year")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Chemical Inventories"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Chemical Inventory") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a chemical inventory item") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate asset protection methods and criteria with the chemical inventory") );
      $tempTabs['BusinessContinuation'] = array( "edit.php?scr=BusinessContinuation&$tabsQS", gettext("Continuity|Associate business continuation requirements with the chemical inventory") );
      $tempTabs['Departments'] = array( "edit.php?scr=Departments&$tabsQS", gettext("Departments|Associate departments with the chemical inventory") );
      $tempTabs['Equipment'] = array( "edit.php?scr=Equipment&$tabsQS", gettext("Equipment|Associate equipment with the agreement") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the chemical inventory") );
      $tempTabs['JobTitles'] = array( "edit.php?scr=JobTitles&$tabsQS", gettext("Job Titles|Associate job titles with with the chemical inventory") );
      $tempTabs['Permits'] = array( "edit.php?scr=Permits&$tabsQS", gettext("Permits|Associate operating permits with the chemical inventory") );
      $tempTabs['Regulations'] = array( "", gettext("Regulations|Associate regulations with the chemical inventory") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the chemical inventory") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate compliance or consensus standards with the chemical inventory") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the chemical inventory") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the chemical inventory") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with the chemical inventory") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the chemical inventory") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Regulations'] = array( "", gettext("New Chemical Inventory") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>