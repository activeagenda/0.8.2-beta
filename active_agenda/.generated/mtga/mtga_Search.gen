<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */


    //list of objects containing the field information
    $fields = unserialize('a:7:{s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"mtga";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:13:"MeetingTypeID";O:10:"combofield":26:{s:4:"name";s:13:"MeetingTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"mtg";s:10:"foreignKey";s:9:"MeetingID";s:12:"foreignField";s:11:"MeetingType";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:224:"SELECT 
`mtg`.MeetingID AS ID, `cod1`.Description AS Name FROM `mtg`
 
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`mtg`.MeetingTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'72\')
WHERE mtg._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:221:"SELECT 
`mtg`.MeetingID AS ID, `cod1`.Description AS Name FROM `mtg`
 
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`mtg`.MeetingTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'72\')

WHERE `mtg`.MeetingID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"mtga";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`mtg`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:9:"MeetingID";O:10:"combofield":26:{s:4:"name";s:9:"MeetingID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"mtg";s:10:"foreignKey";s:9:"MeetingID";s:12:"foreignField";s:7:"Meeting";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:454:"SELECT 
`mtg`.MeetingID AS ID, NULLIF(CONCAT(IFNULL(`cod1`.Description,\'\'),\' | \',IFNULL(`mtg`.MeetingTitle,\'\'),\' | \',IFNULL(`org1`.Name,\'\'),\' | \',IFNULL(`mtg`.MeetingStartTime,\'\')),\' |  |  | \') AS Name FROM `mtg`
 
 LEFT OUTER JOIN `org` AS org1 
   ON (`mtg`.OrganizationID = `org1`.OrganizationID )
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`mtg`.MeetingTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'72\')
WHERE mtg._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:451:"SELECT 
`mtg`.MeetingID AS ID, NULLIF(CONCAT(IFNULL(`cod1`.Description,\'\'),\' | \',IFNULL(`mtg`.MeetingTitle,\'\'),\' | \',IFNULL(`org1`.Name,\'\'),\' | \',IFNULL(`mtg`.MeetingStartTime,\'\')),\' |  |  | \') AS Name FROM `mtg`
 
 LEFT OUTER JOIN `org` AS org1 
   ON (`mtg`.OrganizationID = `org1`.OrganizationID )
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`mtg`.MeetingTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'72\')

WHERE `mtg`.MeetingID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"mtga";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`mtg`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:13:"MtgAttendeeID";O:16:"personcombofield":29:{s:4:"name";s:13:"MtgAttendeeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:264:"SELECT 
`ppl`.PersonID AS ID, NULLIF(CONCAT(IFNULL(`ppl`.DisplayName,\'\'),\' - \',IFNULL(`org1`.ShortName,\'\')),\' - \') AS Name FROM `ppl`
 
 LEFT OUTER JOIN `org` AS org1 
   ON (`ppl`.OrganizationID = `org1`.OrganizationID )
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:260:"SELECT 
`ppl`.PersonID AS ID, NULLIF(CONCAT(IFNULL(`ppl`.DisplayName,\'\'),\' - \',IFNULL(`org1`.ShortName,\'\')),\' - \') AS Name FROM `ppl`
 
 LEFT OUTER JOIN `org` AS org1 
   ON (`ppl`.OrganizationID = `org1`.OrganizationID )

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"mtga";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:17:"MtgAttendeeID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"AttendanceID";O:14:"coderadiofield":29:{s:4:"name";s:12:"AttendanceID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'104\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'104\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"mtga";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:2:"#1";s:15:"suppressItemAdd";b:0;s:11:"orientation";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"PunctualnessID";O:14:"coderadiofield":29:{s:4:"name";s:14:"PunctualnessID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'216\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'216\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"mtga";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:2:"#1";s:15:"suppressItemAdd";b:0;s:11:"orientation";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"AttentivenessID";O:14:"coderadiofield":29:{s:4:"name";s:15:"AttentivenessID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'105\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'105\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"mtga";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:2:"#1";s:15:"suppressItemAdd";b:0;s:11:"orientation";N;s:14:"conditionField";N;s:14:"conditionValue";N;}}');


    /**ownerField**/
    
    //phrases for field names, in field order (note: phrases are used in search filter)
    $phrases = array(
   'OrganizationID' => gettext("Organization|The name of the organization responsible for generating the meeting requirement"),
   'MeetingTypeID' => gettext("Meeting Type|The type of meeting conducted"),
   'MeetingID' => gettext("Meeting|A combined field used to describe this meeting when associating it with other records"),
   'MtgAttendeeID' => gettext("Meeting Attendee|The person attending the meeting"),
   'AttendanceID' => gettext("Attendance|The Attendance type of this scheduled attendee"),
   'PunctualnessID' => gettext("Punctualness|The punctualness of this scheduled attendee"),
   'AttentivenessID' => gettext("Attentiveness|The attentiveness of this scheduled attendee")
   );


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);


    $pageTitle = gettext("Meetings Attendees");
    $screenPhrase = gettext("Search");
    global $SQLBaseModuleID;
    $SQLBaseModuleID = $ModuleID;

    $search = $_SESSION['Search_'.$ModuleID];
    
    if(empty($_POST['Search']) && empty($_POST['Chart'])){
        $values = $search->searchValues;
    } else {
        $values = $_POST;
    }
    
    //populate data array with posted values
    foreach($fields as $fieldName=>$value){
        $data[$fieldName] = $values[$fieldName];
    }



    //if the form was posted
    if((!empty($_POST['Search'])) || (!empty($_POST['Chart']))){


        //List fields (used for generating the complete SQL search statement):
        $listFields = unserialize('a:7:{i:0;s:10:"AttendeeID";i:1;s:11:"MeetingType";i:2;s:16:"MeetingStartTime";i:3;s:8:"LastName";i:4;s:9:"FirstName";i:5;s:10:"Department";i:6;s:10:"Attendance";}');



        //link fields (fields that provide a URL, and not necessarily displayed
        //as a separate column in the list screen
        $linkFields = array(

      );



        //create a Search definition object
        $search = new Search(
            $ModuleID,
            $listFields,
            $fields,
            $_POST
        );


        //then post it to the Search session object.
        $_SESSION['Search_'.$ModuleID] = $search;


        //redirect depending on what submit buton was pressed by the user.
        if(!empty($_POST['Search'])){

            $RedirectTo = "list.php?mdl=$ModuleID";
            header("Location:" . $RedirectTo);
            exit;
            

        } else {

            //handle "Chart" (TO DO)
            $RedirectTo = "charts.php?mdl=$ModuleID";
            header("Location:" . $RedirectTo);
            exit;

        }

    }

    //moved down from above
    $qs = MakeQS($qsArgs);

    //links for rendering the form
    $targetlink = "search.php?$qs";
    $cancellink = "list.php?$qs";

    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Meeting Attendees"));
    $tabs['Search'] = Array("", gettext("Search"));
    $tabs['Charts'] = Array("charts.php?$tabsQS", gettext("Charts|View charts"));



    ob_start();
    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->searchRender(&$data, &$phrases);
        }
    }
    ob_end_clean();
    
    $content = renderSearchForm($content, $targetlink, $chartLink, $ModuleID);

    //insert code to enable calendar controls
    /**dateFields**/
    
   // $content .= debug_r($search->searchValues, "searchValues");

?>
