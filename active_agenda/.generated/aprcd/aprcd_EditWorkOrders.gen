<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:10:{s:21:"ChecklistDeficiencyID";O:9:"viewfield":16:{s:4:"name";s:21:"ChecklistDeficiencyID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Record ID|An automatically assigned number used to track checklist review deficiencies and remediation activities";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ChecklistHistory";O:9:"viewfield":16:{s:4:"name";s:16:"ChecklistHistory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Checklist History|A combined field used to describe this checklist history when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"ReviewOrganization";O:9:"viewfield":16:{s:4:"name";s:18:"ReviewOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Review Organization|The organization where this item is located and can be reviewed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ReviewLocation";O:9:"viewfield":16:{s:4:"name";s:14:"ReviewLocation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Review Location|Specific location within the facility where the item is located and can be reviewed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"AssetProtect";O:9:"viewfield":16:{s:4:"name";s:12:"AssetProtect";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Item|A combined field used to describe this checklist item when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"DeficiencyTitle";O:9:"viewfield":16:{s:4:"name";s:15:"DeficiencyTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Deficiency Title|A short phrase or title used to identify the deficiency identified";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Deficiency";O:9:"viewfield":16:{s:4:"name";s:10:"Deficiency";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Deficiency|A detailed description of the deficiency identified";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"Remediation";O:9:"viewfield":16:{s:4:"name";s:11:"Remediation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Remedy|A detailed description of the remediation steps taken and/or suggested";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:122:"Person Accountable|The name of the individual assigned primary accountability for mitigating the checklist item deficiency";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"DeficiencyStatus";O:9:"viewfield":16:{s:4:"name";s:16:"DeficiencyStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Deficiency Status|Mitigation status of the identified deficiency";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Checklist Deficiency");

//field value array
$data = array(
        'ChecklistDeficiencyID' => '',
         'ChecklistHistory' => '',
         'ReviewOrganization' => '',
         'ReviewLocation' => '',
         'AssetProtect' => '',
         'DeficiencyTitle' => '',
         'Deficiency' => '',
         'Remediation' => '',
         'PersonAccountable' => '',
         'DeficiencyStatus' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":32:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:2685:"SELECT 
   `wrk`.WorkOrderID,
   `wrk`.WorkOrderTitle,
   `wrk`.WorkOrderDesc,
   `org1`.Name AS Organization,
   `wrk`.OrganizationID,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   NULLIF(CONCAT(\'WO: \',IFNULL(`wrk`.OrganizationID,\'\'),\' - \',IFNULL(`wrk`.WorkOrderID,\'\')),\'WO:  - \') AS SystemWorkOrderNumber,
   `wrk`.WorkOrderNo,
   `cod1`.Description AS WorkOrderType,
   `wrk`.WorkOrderTypeID,
   `dat1`.RelatedDate AS IssuedDate,
   `dat2`.RelatedDate AS AssignedDate,
   `ppl2`.DisplayName AS PersonAssigned,
   `inv1`.PersonInvolvedID AS PersonAssignedID,
   `dat3`.RelatedDate AS AssignedDueDate,
   `dat4`.RelatedDate AS CompletionDate,
   `cod2`.Description AS Priority,
   `wrk`.PriorityID,
   `cod3`.Description AS WorkOrderStatus,
   `wrk`.WorkOrderStatusID
FROM `wrk`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`wrk`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`wrk`.WorkOrderID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'wrk\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'96\')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`wrk`.WorkOrderTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'259\')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`wrk`.WorkOrderID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'wrk\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'47\')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`wrk`.WorkOrderID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = \'wrk\'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = \'2\')
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`wrk`.WorkOrderID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = \'wrk\'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = \'75\')
     LEFT OUTER JOIN `dat` AS dat3 
    ON (`wrk`.WorkOrderID = `dat3`.SourceRecordID 
     AND `dat3`.SourceModuleID = \'wrk\'
     AND `dat3`._Deleted = 0
     AND `dat3`.DateDescriptorID = \'1\')
     LEFT OUTER JOIN `dat` AS dat4 
    ON (`wrk`.WorkOrderID = `dat4`.SourceRecordID 
     AND `dat4`.SourceModuleID = \'wrk\'
     AND `dat4`._Deleted = 0
     AND `dat4`.DateDescriptorID = \'3\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`wrk`.PriorityID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'214\')
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`wrk`.WorkOrderStatusID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = \'258\')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv1`.PersonInvolvedID = `ppl2`.PersonID )
WHERE
   wrk.WorkOrderID=\'/**RowID**/\'";s:9:"getRowSQL";s:1084:"SELECT 
   `org1`.Name AS Organization,
   `wrk`.WorkOrderTitle,
   NULLIF(CONCAT(\'WO: \',IFNULL(`wrk`.OrganizationID,\'\'),\' - \',IFNULL(`wrk`.WorkOrderID,\'\')),\'WO:  - \') AS SystemWorkOrderNumber,
   `wrk`.WorkOrderNo,
   `cod1`.Description AS WorkOrderType,
   `dat1`.RelatedDate AS IssuedDate,
   `cod2`.Description AS Priority,
   `cod3`.Description AS WorkOrderStatus,
   `wrk`.OrganizationID
FROM `wrk`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`wrk`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`wrk`.WorkOrderTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'259\')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`wrk`.WorkOrderID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'wrk\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'47\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`wrk`.PriorityID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'214\')
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`wrk`.WorkOrderStatusID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = \'258\')
WHERE
   wrk.WorkOrderID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:15:{s:11:"WorkOrderID";O:14:"invisiblefield":11:{s:4:"name";s:11:"WorkOrderID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:56:"Record ID|Numerical ID to identify and track work orders";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:14:"WorkOrderTitle";O:9:"editfield":14:{s:4:"name";s:14:"WorkOrderTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:78:"Work Order Title|A short and descriptive title used to describe the work order";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:13:"WorkOrderDesc";O:9:"memofield":15:{s:4:"name";s:13:"WorkOrderDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:73:"Work Order Description|A detailed description of the work being requested";s:8:"dataType";s:4:"text";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Organization|The organization with primary responsibility for this work order";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"wrk";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Person Accountable|The individual assigned primary accountability for tracking and managing this work order";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"wrk";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:21:"SystemWorkOrderNumber";O:9:"viewfield":16:{s:4:"name";s:21:"SystemWorkOrderNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"System Work Order Number|A combined field used to describe assign a work order number from the system automatically";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"WorkOrderNo";O:9:"editfield":14:{s:4:"name";s:11:"WorkOrderNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:176:"Work Order Number|A unique number assigned to the work order. This number is usually assigned by a maintenance and engineering department and is pre-printed on work order forms";s:8:"dataType";s:11:"varchar(30)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"30";s:9:"maxLength";s:2:"30";s:5:"align";s:4:"left";}s:15:"WorkOrderTypeID";O:14:"codecombofield":27:{s:4:"name";s:15:"WorkOrderTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Work Order Type|A general category used to group work orders of similar types";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'259\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'259\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"wrk";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"259";}s:10:"IssuedDate";O:9:"datefield":15:{s:4:"name";s:10:"IssuedDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:42:"Issued Date|Date the work order was issued";s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"AssignedDate";O:9:"datefield":15:{s:4:"name";s:12:"AssignedDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Assigned Date|Date the work order was generated";s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:16:"PersonAssignedID";O:16:"personcombofield":29:{s:4:"name";s:16:"PersonAssignedID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:88:"Person Assigned|The individual assigned responsibility for performing the work requested";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"wrk";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:20:"PersonAssignedID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"AssignedDueDate";O:9:"datefield":15:{s:4:"name";s:15:"AssignedDueDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:60:"Assigned Due Date|Date the work order should be completed by";s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"CompletionDate";O:9:"datefield":15:{s:4:"name";s:14:"CompletionDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:49:"Completion Date|Date the work order was completed";s:8:"dataType";s:8:"datetime";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:10:"PriorityID";O:14:"codecombofield":27:{s:4:"name";s:10:"PriorityID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Priority|The level of priority associated with this work order";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'214\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'214\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"wrk";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"214";}s:17:"WorkOrderStatusID";O:14:"codecombofield":27:{s:4:"name";s:17:"WorkOrderStatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Status|The present status of the work order";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'258\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'258\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"wrk";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"258";}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:11:"WorkOrderID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:3:"wrk";s:6:"phrase";s:11:"Work Orders";s:6:"number";i:1;s:6:"Fields";a:8:{s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Organization|The organization with primary responsibility for this work order";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"WorkOrderTitle";O:9:"viewfield":16:{s:4:"name";s:14:"WorkOrderTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:78:"Work Order Title|A short and descriptive title used to describe the work order";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"SystemWorkOrderNumber";O:9:"viewfield":16:{s:4:"name";s:21:"SystemWorkOrderNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"System Work Order Number|A combined field used to describe assign a work order number from the system automatically";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"WorkOrderNo";O:9:"viewfield":16:{s:4:"name";s:11:"WorkOrderNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:176:"Work Order Number|A unique number assigned to the work order. This number is usually assigned by a maintenance and engineering department and is pre-printed on work order forms";s:8:"dataType";s:11:"varchar(30)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"WorkOrderType";O:9:"viewfield":16:{s:4:"name";s:13:"WorkOrderType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"Work Order Type|A general category used to group work orders of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"IssuedDate";O:9:"viewfield":16:{s:4:"name";s:10:"IssuedDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:42:"Issued Date|Date the work order was issued";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Priority";O:9:"viewfield":16:{s:4:"name";s:8:"Priority";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Priority|The level of priority associated with this work order";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"WorkOrderStatus";O:9:"viewfield":16:{s:4:"name";s:15:"WorkOrderStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Status|The present status of the work order";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"wrk";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:144:"SELECT 
    count(*) 
FROM `wrk`
   
WHERE wrk._Deleted = 0
   AND `wrk`.RelatedModuleID = \'aprcd\'
AND `wrk`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:1133:"SELECT 
   `wrk`.WorkOrderID,
`wrk`.OrganizationID,
`org1`.Name AS Organization,
`wrk`.WorkOrderTitle,
NULLIF(CONCAT(\'WO: \',IFNULL(`wrk`.OrganizationID,\'\'),\' - \',IFNULL(`wrk`.WorkOrderID,\'\')),\'WO:  - \') AS SystemWorkOrderNumber,
`wrk`.WorkOrderNo,
`cod1`.Description AS WorkOrderType,
`dat1`.RelatedDate AS IssuedDate,
`cod2`.Description AS Priority,
`cod3`.Description AS WorkOrderStatus
FROM `wrk`

   LEFT OUTER JOIN `org` AS org1 
   ON (`wrk`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`wrk`.WorkOrderTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'259\')
   LEFT OUTER JOIN `dat` AS dat1 
    ON (`wrk`.WorkOrderID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = \'wrk\'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = \'47\')
   LEFT OUTER JOIN `cod` AS cod2 
   ON (`wrk`.PriorityID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'214\')
   LEFT OUTER JOIN `cod` AS cod3 
   ON (`wrk`.WorkOrderStatusID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = \'258\')
WHERE wrk._Deleted = 0
AND `wrk`.RelatedModuleID = \'aprcd\'
AND `wrk`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";s:21:"ChecklistDeficiencyID";s:8:"PKFields";a:1:{i:0;s:11:"WorkOrderID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:10:"conditions";a:1:{s:15:"RelatedModuleID";s:5:"aprcd";}}');


    /**guidanceGrid**/

    $PKField = 'ChecklistDeficiencyID';

    $ownerField = 'ReviewOrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `aprcd`.ChecklistDeficiencyID,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`aprc1`.ChecklistTitle,'')),''),'')),'') AS ChecklistHistory,
   `org1`.Name AS ReviewOrganization,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS ReviewLocation,
   NULLIF(CONCAT(IFNULL(`apr1`.AssetProtectTitle,'')),'') AS AssetProtect,
   `aprcd`.DeficiencyTitle,
   `aprcd`.Deficiency,
   `aprcd`.Remediation,
   `ppl1`.DisplayName AS PersonAccountable,
   `cod1`.Description AS DeficiencyStatus,
   NULLIF(CONCAT(IFNULL(`dat1`.RelatedDate,''),' | ',IFNULL(NULLIF(CONCAT(IFNULL(`apr1`.AssetProtectTitle,'')),''),''),' | ',IFNULL(`cod1`.Description,'')),' |  | ') AS RecordLabel,
   `apr1`.ReviewOrganizationID AS ReviewOrganizationID
FROM `aprcd`
   
     LEFT OUTER JOIN `aprch` AS aprch1 
   ON (`aprcd`.ChecklistHistoryID = `aprch1`.ChecklistHistoryID )
     LEFT OUTER JOIN `apr` AS apr1 
   ON (`aprcd`.AssetProtectID = `apr1`.AssetProtectID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`aprcd`.ChecklistDeficiencyID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'aprcd'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '12')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`aprcd`.DeficiencyStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '131')
     LEFT OUTER JOIN `aprc` AS aprc1 
   ON (`aprch1`.ChecklistID = `aprc1`.ChecklistID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`aprch1`.ChecklistHistoryID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'aprch'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '9')
     LEFT OUTER JOIN `org` AS org1 
   ON (`apr1`.ReviewOrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`apr1`.AssetProtectID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'apr'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   aprcd.ChecklistDeficiencyID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Checklist Deficiency");
        $screenPhrase = gettext("Orders|Associate work orders with a checklist deficiency");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Asset Protection Checklist Deficiencies");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'ChecklistDeficiencyID' => gettext("Record ID|An automatically assigned number used to track checklist review deficiencies and remediation activities"),
   'ChecklistHistory' => gettext("Checklist History|A combined field used to describe this checklist history when associating it with other records"),
   'ReviewOrganization' => gettext("Review Organization|The organization where this item is located and can be reviewed"),
   'ReviewLocation' => gettext("Review Location|Specific location within the facility where the item is located and can be reviewed"),
   'AssetProtect' => gettext("Item|A combined field used to describe this checklist item when associating it with other records"),
   'DeficiencyTitle' => gettext("Deficiency Title|A short phrase or title used to identify the deficiency identified"),
   'Deficiency' => gettext("Deficiency|A detailed description of the deficiency identified"),
   'Remediation' => gettext("Remedy|A detailed description of the remediation steps taken and/or suggested"),
   'PersonAccountable' => gettext("Person Accountable|The name of the individual assigned primary accountability for mitigating the checklist item deficiency"),
   'DeficiencyStatus' => gettext("Deficiency Status|Mitigation status of the identified deficiency")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Checklist Deficiencies"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Checklist Deficiency") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Associate checklist deficiencies with checklist reviews") );
      $tempTabs['WorkOrders'] = array( "", gettext("Orders|Associate work orders with a checklist deficiency") );
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['WorkOrders'] = array( "", gettext("New Checklist Deficiency") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>