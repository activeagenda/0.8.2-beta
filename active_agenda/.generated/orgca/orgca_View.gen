<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:15:{s:19:"AdditionalInsuredID";O:9:"viewfield":16:{s:4:"name";s:19:"AdditionalInsuredID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:132:"Record ID|A unique number that is automatically assigned and is used to associate additional insureds with certificates of insurance";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"CertificateID";O:9:"viewfield":16:{s:4:"name";s:13:"CertificateID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Certificate|A combined field used to describe this certificate when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"CertificateNo";O:9:"viewfield":16:{s:4:"name";s:13:"CertificateNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:123:"Certificate Number|The number assigned to the certificate of insurance by the insurance carrier or issuing insurance broker";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"NamedOrg";O:9:"viewfield":16:{s:4:"name";s:8:"NamedOrg";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:315:"Policy Holder|The organization which is identified on the policy Declarations page as the Named Insured of the insurance policy. The Named Insured is required to provide and maintain currency of the policy and provide updated certificates of insurance to the Additional Insured prior to ANY lapse of policy coverage";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"PolicyType";O:9:"viewfield":16:{s:4:"name";s:10:"PolicyType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Policy Type|The type of insurance coverage provided by the carrier to the contractor and evidenced by the certificate of insurance";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"CoverageAmount";O:9:"viewfield":16:{s:4:"name";s:14:"CoverageAmount";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:197:"Coverage Amount|Amount of insurance coverage provided by the insurance carrier and evidenced by the certificate of insurance and stated in the currency assigned to this installation of the software";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Carrier";O:9:"viewfield":16:{s:4:"name";s:7:"Carrier";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Carrier|Name of the insurance carrier providing the certificate of insurance";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"EffectiveDate";O:9:"viewfield":16:{s:4:"name";s:13:"EffectiveDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:105:"Effective Date|The date the insurance policy referred to in the certificate of insurance went into effect";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ExpirationDate";O:9:"viewfield":16:{s:4:"name";s:14:"ExpirationDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:117:"Expiration Date|The date the insurance policy referred to in the certificate of insurance will no longer be in effect";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"DaysRemaining";O:9:"viewfield":16:{s:4:"name";s:13:"DaysRemaining";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:93:"Days Remaining|The total number of days remaining before the certificate of insurance expires";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"CertificateAttached";O:9:"viewfield":16:{s:4:"name";s:19:"CertificateAttached";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Certificate Attached|Whether the certificate of insurance has been attached to this record";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:232:"Person Accountable|The individual with primary responsibility for managing the adequacy and frequency of the certificate of insurance and the risk financing relationship between the insured organization and the \'named\' organizations";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"Additional Insured|The organization named as an additional insured on the certificate of insurance";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:22:"LocalPersonAccountable";O:9:"viewfield":16:{s:4:"name";s:22:"LocalPersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:262:"Local Person Accountable|The individual with primary responsibility for managing the adequacy and frequency of the certificate of insurance and the risk financing relationship between the insured organization and the organization \'named\' as an additional insured";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"Circumstances";O:9:"viewfield":16:{s:4:"name";s:13:"Circumstances";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:156:"Circumstances|A detailed description of the circumstances which led to organization being named as an additional insured on the policy of the \'named insured";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'AdditionalInsuredID' => gettext("Record ID|A unique number that is automatically assigned and is used to associate additional insureds with certificates of insurance"),
   'CertificateID' => gettext("Certificate|A combined field used to describe this certificate when associating it with other records"),
   'CertificateNo' => gettext("Certificate Number|The number assigned to the certificate of insurance by the insurance carrier or issuing insurance broker"),
   'NamedOrg' => gettext("Policy Holder|The organization which is identified on the policy Declarations page as the Named Insured of the insurance policy. The Named Insured is required to provide and maintain currency of the policy and provide updated certificates of insurance to the Additional Insured prior to ANY lapse of policy coverage"),
   'PolicyType' => gettext("Policy Type|The type of insurance coverage provided by the carrier to the contractor and evidenced by the certificate of insurance"),
   'CoverageAmount' => gettext("Coverage Amount|Amount of insurance coverage provided by the insurance carrier and evidenced by the certificate of insurance and stated in the currency assigned to this installation of the software"),
   'Carrier' => gettext("Carrier|Name of the insurance carrier providing the certificate of insurance"),
   'EffectiveDate' => gettext("Effective Date|The date the insurance policy referred to in the certificate of insurance went into effect"),
   'ExpirationDate' => gettext("Expiration Date|The date the insurance policy referred to in the certificate of insurance will no longer be in effect"),
   'DaysRemaining' => gettext("Days Remaining|The total number of days remaining before the certificate of insurance expires"),
   'CertificateAttached' => gettext("Certificate Attached|Whether the certificate of insurance has been attached to this record"),
   'PersonAccountable' => gettext("Person Accountable|The individual with primary responsibility for managing the adequacy and frequency of the certificate of insurance and the risk financing relationship between the insured organization and the 'named' organizations"),
   'Organization' => gettext("Additional Insured|The organization named as an additional insured on the certificate of insurance"),
   'LocalPersonAccountable' => gettext("Local Person Accountable|The individual with primary responsibility for managing the adequacy and frequency of the certificate of insurance and the risk financing relationship between the insured organization and the organization 'named' as an additional insured"),
   'Circumstances' => gettext("Circumstances|A detailed description of the circumstances which led to organization being named as an additional insured on the policy of the 'named insured")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `orgca`.AdditionalInsuredID,
   `orgca`.CertificateID,
   `orgci1`.CertificateNo AS CertificateNo,
   `org1`.Name AS NamedOrg,
   `cod1`.Description AS PolicyType,
   `orgci1`.CoverageAmount AS CoverageAmount,
   `org2`.Name AS Carrier,
   `dat1`.RelatedDate AS EffectiveDate,
   `dat2`.RelatedDate AS ExpirationDate,
   CASE WHEN DATEDIFF(`dat2`.RelatedDate, NOW()) > 0 THEN DATEDIFF(`dat2`.RelatedDate, NOW()) ELSE 0 END AS DaysRemaining,
   `orgci1`.CertificateAttached AS CertificateAttached,
   `ppl1`.DisplayName AS PersonAccountable,
   `org3`.Name AS Organization,
   `ppl2`.DisplayName AS LocalPersonAccountable,
   `orgca`.Circumstances,
   NULLIF(CONCAT('Insured ',IFNULL(`org1`.Name,''),' Policy Type: ',IFNULL(`cod1`.Description,''),' No: ',IFNULL(`orgci1`.CertificateNo,''),' Named: ',IFNULL(`org3`.Name,''),' Expires: ',IFNULL(`dat2`.RelatedDate,'')),'Insured  Policy Type:  No:  Named:  Expires: ') AS RecordLabel,
   `orgca`.OrganizationID
FROM `orgca`
   
     LEFT OUTER JOIN `orgci` AS orgci1 
   ON (`orgca`.CertificateID = `orgci1`.CertificateID )
     LEFT OUTER JOIN `org` AS org3 
   ON (`orgca`.OrganizationID = `org3`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc2 
    ON (`orgca`.AdditionalInsuredID = `acc2`.SourceRecordID 
     AND `acc2`.SourceModuleID = 'orgca'
     AND `acc2`._Deleted = 0
     AND `acc2`.AccountabilityDescriptorID = '145')
     LEFT OUTER JOIN `org` AS org1 
   ON (`orgci1`.NamedOrgID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`orgci1`.PolicyTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '3')
     LEFT OUTER JOIN `org` AS org2 
   ON (`orgci1`.CarrierID = `org2`.OrganizationID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`orgci1`.CertificateID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'orgci'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '17')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`orgci1`.CertificateID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'orgci'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '10')
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`orgci1`.CertificateID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'orgci'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '11')
     LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`acc2`.PersonAccountableID = `ppl2`.PersonID )
WHERE
   orgca.AdditionalInsuredID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Additional Insureds"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Additional Insured") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about organizations named as additional insureds on certificates of insurance") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Additional Insured") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Additional Insured") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Additional Insured");
    $screenPhrase = gettext("View|View summary information about organizations named as additional insureds on certificates of insurance");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
