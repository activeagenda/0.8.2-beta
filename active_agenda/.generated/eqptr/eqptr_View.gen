<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:18:{s:22:"EquipmentTransactionID";O:9:"viewfield":16:{s:4:"name";s:22:"EquipmentTransactionID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"Transaction ID|An automatically assigned number used to track inventory transactions";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"EquipmentInventoryID";O:9:"viewfield":16:{s:4:"name";s:20:"EquipmentInventoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Inventory ID|An automatically assigned number used to track equipment inventory";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Organization|The name of the organization where the equipment is located";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Location";O:9:"viewfield":16:{s:4:"name";s:8:"Location";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:219:"Location|A description of the specific location within the facility where the equipment is located. Specific locations are based on a combination of field values assigned from within the Organizations - Locations module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"EquipmentID";O:9:"viewfield":16:{s:4:"name";s:11:"EquipmentID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"Equipment ID|An automatically assigned number used to track equipment utilized by the organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"EquipmentType";O:9:"viewfield":16:{s:4:"name";s:13:"EquipmentType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:146:"Equipment Type|A method of grouping equipment of similar types so that asset protection measures can be assigned to all equipment of the same type";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"Equipment";O:9:"viewfield":16:{s:4:"name";s:9:"Equipment";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:121:"Equipment|A description of the equipment based on a combination of field values assigned from within the equipment module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"TransactionType";O:9:"viewfield":16:{s:4:"name";s:15:"TransactionType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:95:"Transaction Type|The type of inventory transaction which occurred on this date at this location";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"TransactionAmount";O:9:"viewfield":16:{s:4:"name";s:17:"TransactionAmount";s:10:"parentName";N;s:6:"Fields";a:1:{s:14:"TransAmountUoM";O:9:"viewfield":16:{s:4:"name";s:14:"TransAmountUoM";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:65:"Amount|The number of inventory items involved in this transaction";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:140:"Person Accountable|The name of the individual issuing the inventory item, accepting the returning item OR adding the new item into inventory";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"TransactionSubject";O:9:"viewfield":16:{s:4:"name";s:18:"TransactionSubject";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:196:"Transaction Subject|The name of the individual the equipment was issued to, OR the name of the individual returning the inventory item, OR the name of the person entering a new item into inventory";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"TransactionDate";O:9:"viewfield":16:{s:4:"name";s:15:"TransactionDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Transaction Date|The date this equipment transaction occurred";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"TransactionTime";O:9:"viewfield":16:{s:4:"name";s:15:"TransactionTime";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Transaction Time|The time this equipment transaction occurred";s:8:"dataType";s:4:"time";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"EstimatedReturnDate";O:9:"viewfield":16:{s:4:"name";s:19:"EstimatedReturnDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Estimated Return Date|The date the equipment is estimated to be returned";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"EstimatedReturnTime";O:9:"viewfield":16:{s:4:"name";s:19:"EstimatedReturnTime";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Estimated Return Time|The time the equipment is estimated to be returned";s:8:"dataType";s:4:"time";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ActualReturnDate";O:9:"viewfield":16:{s:4:"name";s:16:"ActualReturnDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Actual Return Date|The date the equipment is actually returned to inventory at this specific location";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"ActualReturnTime";O:9:"viewfield":16:{s:4:"name";s:16:"ActualReturnTime";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Actual Return Time|The time the equipment is actually returned to inventory at this specific location";s:8:"dataType";s:4:"time";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"IssueDesc";O:9:"viewfield":16:{s:4:"name";s:9:"IssueDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:141:"Issue Description|A brief description of any issues related to the equipment which were identified by the person returning the inventory item";s:8:"dataType";s:12:"varchar(255)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'EquipmentTransactionID' => gettext("Transaction ID|An automatically assigned number used to track inventory transactions"),
   'EquipmentInventoryID' => gettext("Inventory ID|An automatically assigned number used to track equipment inventory"),
   'Organization' => gettext("Organization|The name of the organization where the equipment is located"),
   'Location' => gettext("Location|A description of the specific location within the facility where the equipment is located. Specific locations are based on a combination of field values assigned from within the Organizations - Locations module"),
   'EquipmentID' => gettext("Equipment ID|An automatically assigned number used to track equipment utilized by the organization"),
   'EquipmentType' => gettext("Equipment Type|A method of grouping equipment of similar types so that asset protection measures can be assigned to all equipment of the same type"),
   'Equipment' => gettext("Equipment|A description of the equipment based on a combination of field values assigned from within the equipment module"),
   'TransactionType' => gettext("Transaction Type|The type of inventory transaction which occurred on this date at this location"),
   'TransactionAmount' => gettext("Amount|The number of inventory items involved in this transaction"),
   'PersonAccountable' => gettext("Person Accountable|The name of the individual issuing the inventory item, accepting the returning item OR adding the new item into inventory"),
   'TransactionSubject' => gettext("Transaction Subject|The name of the individual the equipment was issued to, OR the name of the individual returning the inventory item, OR the name of the person entering a new item into inventory"),
   'TransactionDate' => gettext("Transaction Date|The date this equipment transaction occurred"),
   'TransactionTime' => gettext("Transaction Time|The time this equipment transaction occurred"),
   'EstimatedReturnDate' => gettext("Estimated Return Date|The date the equipment is estimated to be returned"),
   'EstimatedReturnTime' => gettext("Estimated Return Time|The time the equipment is estimated to be returned"),
   'ActualReturnDate' => gettext("Actual Return Date|The date the equipment is actually returned to inventory at this specific location"),
   'ActualReturnTime' => gettext("Actual Return Time|The time the equipment is actually returned to inventory at this specific location"),
   'IssueDesc' => gettext("Issue Description|A brief description of any issues related to the equipment which were identified by the person returning the inventory item")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `eqptr`.EquipmentTransactionID,
   `eqptr`.EquipmentInventoryID,
   `org1`.Name AS Organization,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS Location,
   `eqpin1`.EquipmentID AS EquipmentID,
   NULLIF(CONCAT(IFNULL(`eqpt1`.EquipmentTypeTitle,'')),'') AS EquipmentType,
   `eqp1`.EquipmentName AS Equipment,
   `cod1`.Description AS TransactionType,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS TransAmountUoM,
   `eqptr`.TransactionAmount,
   `ppl1`.DisplayName AS PersonAccountable,
   `ppl2`.DisplayName AS TransactionSubject,
   `dat1`.RelatedDate AS TransactionDate,
   `eqptr`.TransactionTime,
   `eqptr`.EstimatedReturnDate,
   `eqptr`.EstimatedReturnTime,
   `eqptr`.ActualReturnDate,
   `eqptr`.ActualReturnTime,
   `eqptr`.IssueDesc,
   NULLIF(CONCAT(IFNULL(`org1`.Name,''),' | ',IFNULL(`eqp1`.EquipmentName,''),' | ',IFNULL(`dat1`.RelatedDate,'')),' |  | ') AS RecordLabel,
   `eqpin1`.OrganizationID AS OrganizationID
FROM `eqptr`
   
     LEFT OUTER JOIN `eqpin` AS eqpin1 
   ON (`eqptr`.EquipmentInventoryID = `eqpin1`.EquipmentInventoryID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`eqptr`.TransactionTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '46')
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`eqptr`.TransAmountUoMID = `uts1`.UnitID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`eqptr`.EquipmentTransactionID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'eqptr'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '30')
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`eqptr`.EquipmentTransactionID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'eqptr'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '26')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`eqptr`.EquipmentTransactionID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'eqptr'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '14')
     LEFT OUTER JOIN `org` AS org1 
   ON (`eqpin1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`eqpin1`.EquipmentInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'eqpin'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `eqp` AS eqp1 
   ON (`eqpin1`.EquipmentID = `eqp1`.EquipmentID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv1`.PersonInvolvedID = `ppl2`.PersonID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `eqpt` AS eqpt1 
   ON (`eqp1`.EquipmentTypeID = `eqpt1`.EquipmentTypeID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   eqptr.EquipmentTransactionID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Equipment Transactions"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Equipment Transaction") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about an equipment inventory transaction") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Equipment Transaction") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Equipment Transaction") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Equipment Transaction");
    $screenPhrase = gettext("View|View summary information about an equipment inventory transaction");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
