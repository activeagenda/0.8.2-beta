<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:13:{s:15:"ChecklistItemID";O:9:"viewfield":16:{s:4:"name";s:15:"ChecklistItemID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Checklist Item ID|An automatically assigned number used to associate checklist items with checklists";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"ChecklistOrganization";O:9:"viewfield":16:{s:4:"name";s:21:"ChecklistOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Checklist Organization|The name of the organization associated with the checklist";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"Checklist";O:9:"viewfield":16:{s:4:"name";s:9:"Checklist";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Checklist|A combined field used to describe this checklist when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"ChecklistDesc";O:9:"viewfield":16:{s:4:"name";s:13:"ChecklistDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Description|A detailed description of the checklist, its scope, purpose and objective";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:126:"Person Accountable|The individual assigned accountability for the creation, modification, update and currency of the checklist";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"ReviewOrganization";O:9:"viewfield":16:{s:4:"name";s:18:"ReviewOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Review Organization|The organization where this item is located and can be reviewed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ReviewLocation";O:9:"viewfield":16:{s:4:"name";s:14:"ReviewLocation";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Review Location|Specific location within the facility where the item is located and can be reviewed";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"AssetProtect";O:9:"viewfield":16:{s:4:"name";s:12:"AssetProtect";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:97:"Item|A combined field used to describe this checklist item when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"AssetProtectCategory";O:9:"viewfield":16:{s:4:"name";s:20:"AssetProtectCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Category|A general category used to catgorize asset protection measures for greater flexibility in developing checklists";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"AssetProtectPurpose";O:9:"viewfield":16:{s:4:"name";s:19:"AssetProtectPurpose";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:61:"Purpose|The purpose of the asset protection method or measure";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"SchedFreq";O:9:"viewfield":16:{s:4:"name";s:9:"SchedFreq";s:10:"parentName";N;s:6:"Fields";a:1:{s:14:"SchedFreqUnits";O:9:"viewfield":16:{s:4:"name";s:14:"SchedFreqUnits";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:72:"Frequency|The frequency at which the protective measure shall be applied";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"AssetProtectInstruct";O:9:"viewfield":16:{s:4:"name";s:20:"AssetProtectInstruct";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Instructions|Brief instructions for the person performing the asset protection activity";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"AcceptableCriteria";O:9:"viewfield":16:{s:4:"name";s:18:"AcceptableCriteria";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Acceptable Criteria|A brief description of the acceptable criteria for this asset";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'ChecklistItemID' => gettext("Checklist Item ID|An automatically assigned number used to associate checklist items with checklists"),
   'ChecklistOrganization' => gettext("Checklist Organization|The name of the organization associated with the checklist"),
   'Checklist' => gettext("Checklist|A combined field used to describe this checklist when associating it with other records"),
   'ChecklistDesc' => gettext("Description|A detailed description of the checklist, its scope, purpose and objective"),
   'PersonAccountable' => gettext("Person Accountable|The individual assigned accountability for the creation, modification, update and currency of the checklist"),
   'ReviewOrganization' => gettext("Review Organization|The organization where this item is located and can be reviewed"),
   'ReviewLocation' => gettext("Review Location|Specific location within the facility where the item is located and can be reviewed"),
   'AssetProtect' => gettext("Item|A combined field used to describe this checklist item when associating it with other records"),
   'AssetProtectCategory' => gettext("Category|A general category used to catgorize asset protection measures for greater flexibility in developing checklists"),
   'AssetProtectPurpose' => gettext("Purpose|The purpose of the asset protection method or measure"),
   'SchedFreq' => gettext("Frequency|The frequency at which the protective measure shall be applied"),
   'AssetProtectInstruct' => gettext("Instructions|Brief instructions for the person performing the asset protection activity"),
   'AcceptableCriteria' => gettext("Acceptable Criteria|A brief description of the acceptable criteria for this asset")
   );


    $ownerField = 'ChecklistOrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `aprci`.ChecklistItemID,
   NULLIF(CONCAT(IFNULL(`org1`.Name,'')),'') AS ChecklistOrganization,
   NULLIF(CONCAT(IFNULL(`aprc1`.ChecklistTitle,'')),'') AS Checklist,
   `aprc1`.ChecklistDesc AS ChecklistDesc,
   `ppl1`.DisplayName AS PersonAccountable,
   `org2`.Name AS ReviewOrganization,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS ReviewLocation,
   NULLIF(CONCAT(IFNULL(`apr1`.AssetProtectTitle,'')),'') AS AssetProtect,
   `cod1`.Description AS AssetProtectCategory,
   `cod2`.Description AS AssetProtectPurpose,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS SchedFreqUnits,
   `apr1`.SchedFreq AS SchedFreq,
   `apr1`.AssetProtectInstruct AS AssetProtectInstruct,
   `apr1`.AcceptableCriteria AS AcceptableCriteria,
   NULLIF(CONCAT(IFNULL(`aprc1`.ChecklistTitle,''),' | ',IFNULL(`cod2`.Description,''),' of ',IFNULL(NULLIF(CONCAT(IFNULL(`apr1`.AssetProtectTitle,'')),''),'')),' |  of ') AS RecordLabel,
   `aprc1`.OrganizationID AS ChecklistOrganizationID
FROM `aprci`
   
     LEFT OUTER JOIN `aprc` AS aprc1 
   ON (`aprci`.ChecklistID = `aprc1`.ChecklistID )
     LEFT OUTER JOIN `apr` AS apr1 
   ON (`aprci`.AssetProtectID = `apr1`.AssetProtectID )
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`aprci`.SchedFreqUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`aprc1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`aprc1`.ChecklistID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'aprc'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '13')
     LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`apr1`.ReviewOrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`apr1`.AssetProtectID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'apr'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`apr1`.AssetProtectCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '50')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`apr1`.AssetProtectPurposeID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '101')
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   aprci.ChecklistItemID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Checklist Items"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Checklist Item") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Edit|Edit summary information about checklist items") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Checklist Item") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Checklist Item") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Checklist Item");
    $screenPhrase = gettext("View|View summary information about checklist items");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
