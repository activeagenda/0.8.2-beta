<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:23:{s:10:"SupplierID";O:9:"viewfield":16:{s:4:"name";s:10:"SupplierID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Record ID|An automatically assigned number used to track organizations which supply goods and/or services to the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"RelatedModuleRecord";O:9:"viewfield":16:{s:4:"name";s:19:"RelatedModuleRecord";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Related Record|A combined field used to display the related module name and record ID";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:17:"RelatedRecordLink";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:24:"RelatedRecordDescription";O:9:"viewfield":16:{s:4:"name";s:24:"RelatedRecordDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:141:"Related Record Description|A description of the related record based on a combination of field values assigned from within the related module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"SupplierCategoryID";O:14:"codecombofield":27:{s:4:"name";s:18:"SupplierCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'243\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'243\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:14:"SupplierTypeID";a:2:{s:4:"name";s:14:"SupplierTypeID";s:15:"listParentField";s:18:"SupplierCategoryID";}}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"243";}s:14:"SupplierTypeID";O:10:"combofield":26:{s:4:"name";s:14:"SupplierTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"supt";s:10:"foreignKey";s:14:"SupplierTypeID";s:12:"foreignField";s:12:"SupplierType";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:194:"SELECT 
`supt`.SupplierTypeID AS ID, NULLIF(CONCAT(IFNULL(`supt`.SupplierTypeTitle,\'\')),\'\') AS Name, `supt`.SupplierCategoryID AS ParentID FROM `supt`
WHERE supt._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:196:"SELECT 
`supt`.SupplierTypeID AS ID, NULLIF(CONCAT(IFNULL(`supt`.SupplierTypeTitle,\'\')),\'\') AS Name, `supt`.SupplierCategoryID AS ParentID FROM `supt`

WHERE `supt`.SupplierTypeID = \'/*recordID*/\'";s:11:"parentField";s:18:"SupplierCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:16:"SupplierTypeDesc";a:1:{s:4:"name";s:16:"SupplierTypeDesc";}}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:13:"SupplierTitle";O:9:"editfield":14:{s:4:"name";s:13:"SupplierTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:16:"SupplierTypeDesc";O:9:"viewfield":16:{s:4:"name";s:16:"SupplierTypeDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Description|A brief but thorough description of the specific type of supplier exposure";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";s:14:"SupplierTypeID";s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:15:"ItemDescription";O:9:"memofield":15:{s:4:"name";s:15:"ItemDescription";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:13:"SupplierOrgID";O:13:"orgcombofield":26:{s:4:"name";s:13:"SupplierOrgID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:14:"RelationshipID";O:14:"coderadiofield":29:{s:4:"name";s:14:"RelationshipID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'251\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'251\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:11:"orientation";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:17:"SupplierContactID";O:16:"personcombofield":29:{s:4:"name";s:17:"SupplierContactID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:21:"SupplierContactID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"PrimarySupplier";O:13:"checkboxfield":14:{s:4:"name";s:15:"PrimarySupplier";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:27:"ProductLiabilityCertificate";O:13:"checkboxfield":14:{s:4:"name";s:27:"ProductLiabilityCertificate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"LiabilityExpiration";O:9:"datefield":15:{s:4:"name";s:19:"LiabilityExpiration";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"date";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";s:0:"";s:14:"conditionField";N;s:14:"conditionValue";N;}s:13:"CatalogTypeID";O:14:"codecombofield":27:{s:4:"name";s:13:"CatalogTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'55\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'55\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:9:"CatalogID";a:1:{s:4:"name";s:9:"CatalogID";}}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"55";}s:9:"CatalogID";O:10:"combofield":26:{s:4:"name";s:9:"CatalogID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cat";s:10:"foreignKey";s:9:"CatalogID";s:12:"foreignField";s:7:"Catalog";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:174:"SELECT 
`cat`.CatalogID AS ID, NULLIF(CONCAT(IFNULL(`cat`.CatalogTitle,\'\')),\'\') AS Name, `cat`.CatalogTypeID AS ParentID FROM `cat`
WHERE cat._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:171:"SELECT 
`cat`.CatalogID AS ID, NULLIF(CONCAT(IFNULL(`cat`.CatalogTitle,\'\')),\'\') AS Name, `cat`.CatalogTypeID AS ParentID FROM `cat`

WHERE `cat`.CatalogID = \'/*recordID*/\'";s:11:"parentField";s:13:"CatalogTypeID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`cat`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:11:"CatalogPgNo";O:9:"editfield":14:{s:4:"name";s:11:"CatalogPgNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(10)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"10";s:9:"maxLength";s:2:"10";s:5:"align";s:4:"left";}s:6:"PartNo";O:9:"editfield":14:{s:4:"name";s:6:"PartNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(30)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"30";s:9:"maxLength";s:2:"30";s:5:"align";s:4:"left";}s:7:"ItemURL";O:9:"editfield":14:{s:4:"name";s:7:"ItemURL";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:8:"UnitCost";O:9:"editfield":14:{s:4:"name";s:8:"UnitCost";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:18:"BaseUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:18:"BaseUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"BaseUnitID";a:1:{s:4:"name";s:10:"BaseUnitID";}}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:10:"BaseUnitID";O:10:"combofield":26:{s:4:"name";s:10:"BaseUnitID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:18:"BaseUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"money";s:8:"validate";s:17:"Money notNegative";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"15";s:9:"maxLength";s:2:"15";s:5:"align";s:4:"left";}s:16:"MinimumUnitOrder";O:9:"editfield":14:{s:4:"name";s:16:"MinimumUnitOrder";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:22:"MinimumOrderCategoryID";O:10:"combofield":26:{s:4:"name";s:22:"MinimumOrderCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:17:"MinimumOrderUoMID";a:1:{s:4:"name";s:17:"MinimumOrderUoMID";}}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:17:"MinimumOrderUoMID";O:10:"combofield":26:{s:4:"name";s:17:"MinimumOrderUoMID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:22:"MinimumOrderCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"sup";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"15";s:9:"maxLength";s:2:"15";s:5:"align";s:4:"left";}}');

$hasEditableFields = true;


$singularRecordName = gettext("Supplier");

//field value array
$data = array(
        'SupplierID' => '',
         'RelatedModuleRecord' => '',
         'RelatedRecordDescription' => '',
         'SupplierCategoryID' => '',
         'SupplierTypeID' => '',
         'SupplierTitle' => '',
         'SupplierTypeDesc' => '',
         'ItemDescription' => '',
         'OrganizationID' => '',
         'PersonAccountableID' => '',
         'SupplierOrgID' => '',
         'RelationshipID' => '',
         'SupplierContactID' => '',
         'PrimarySupplier' => '',
         'ProductLiabilityCertificate' => '',
         'LiabilityExpiration' => '',
         'CatalogTypeID' => '',
         'CatalogID' => '',
         'CatalogPgNo' => '',
         'PartNo' => '',
         'ItemURL' => '',
         'BaseUnitCategoryID' => '',
         'BaseUnitID' => '',
         'UnitCost' => '',
         'MinimumOrderCategoryID' => '',
         'MinimumOrderUoMID' => '',
         'MinimumUnitOrder' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'SupplierID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "AssetProtection";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `sup`.SupplierID,
   CONCAT('internal:view.php?mdl=',`sup`.RelatedModuleID,'&rid=',`sup`.RelatedRecordID) AS RelatedRecordLink,
   NULLIF(CONCAT(IFNULL(`mod1`.Name,''),' Module (Record ID: ',IFNULL(`sup`.RelatedRecordID,''),')'),' Module (Record ID: )') AS RelatedModuleRecord,
   `rdc1`.Value AS RelatedRecordDescription,
   `cod1`.Description AS SupplierCategory,
   `supt1`.SupplierCategoryID AS SupplierCategoryID,
   NULLIF(CONCAT(IFNULL(`supt1`.SupplierTypeTitle,'')),'') AS SupplierType,
   `sup`.SupplierTypeID,
   `sup`.SupplierTitle,
   `supt1`.SupplierTypeDesc AS SupplierTypeDesc,
   `sup`.ItemDescription,
   `org2`.Name AS Organization,
   `sup`.OrganizationID,
   `ppl2`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `org1`.Name AS SupplierOrg,
   `sup`.SupplierOrgID,
   `cod2`.Description AS Relationship,
   `sup`.RelationshipID,
   `ppl1`.DisplayName AS SupplierContact,
   `inv1`.PersonInvolvedID AS SupplierContactID,
   `sup`.PrimarySupplier,
   `sup`.ProductLiabilityCertificate,
   `sup`.LiabilityExpiration,
   `cod3`.Description AS CatalogType,
   `cat1`.CatalogTypeID AS CatalogTypeID,
   NULLIF(CONCAT(IFNULL(`cat1`.CatalogTitle,'')),'') AS Catalog,
   `sup`.CatalogID,
   `sup`.CatalogPgNo,
   `sup`.PartNo,
   `sup`.ItemURL,
   `cod4`.Description AS BaseUnitCategory,
   `uts1`.UnitCategoryID AS BaseUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS BaseUnit,
   `sup`.BaseUnitID,
   `sup`.UnitCost,
   `cod5`.Description AS MinimumOrderCategory,
   `uts2`.UnitCategoryID AS MinimumOrderCategoryID,
   NULLIF(CONCAT(IFNULL(`uts2`.UnitName,'')),'') AS MinimumOrderUoM,
   `sup`.MinimumOrderUoMID,
   `sup`.MinimumUnitOrder,
   NULLIF(CONCAT(IFNULL(`org2`.Name,''),' | ',IFNULL(`org1`.Name,''),' | ',IFNULL(`mod1`.Name,''),' | ',IFNULL(`rdc1`.Value,'')),' |  |  | ') AS RecordLabel
FROM `sup`
   
     LEFT OUTER JOIN `mod` AS mod1 
   ON (`sup`.RelatedModuleID = `mod1`.ModuleID )
     LEFT OUTER JOIN `rdc` AS rdc1 ON (`sup`.RelatedRecordID = rdc1.RecordID AND `sup`.RelatedModuleID = rdc1.ModuleID)
     LEFT OUTER JOIN `supt` AS supt1 
   ON (`sup`.SupplierTypeID = `supt1`.SupplierTypeID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`sup`.OrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`sup`.SupplierID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'sup'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '82')
     LEFT OUTER JOIN `org` AS org1 
   ON (`sup`.SupplierOrgID = `org1`.OrganizationID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`sup`.RelationshipID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '251')
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`sup`.SupplierID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'sup'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '73')
     LEFT OUTER JOIN `cat` AS cat1 
   ON (`sup`.CatalogID = `cat1`.CatalogID )
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`sup`.BaseUnitID = `uts1`.UnitID )
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`sup`.MinimumOrderUoMID = `uts2`.UnitID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`supt1`.SupplierCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '243')
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`acc1`.PersonAccountableID = `ppl2`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`cat1`.CatalogTypeID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '55')
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`uts1`.UnitCategoryID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '37')
     LEFT OUTER JOIN `cod` AS cod5 
   ON (`uts2`.UnitCategoryID = `cod5`.CodeID 
     AND `cod5`.CodeTypeID = '37')
WHERE
   sup.SupplierID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Supplier");
        $screenPhrase = gettext("Form|Edit summary information about a supplier associated with a related record");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Suppliers");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'SupplierID' => gettext("Record ID|An automatically assigned number used to track organizations which supply goods and/or services to the organization"),
   'RelatedModuleRecord' => gettext("Related Record|A combined field used to display the related module name and record ID"),
   'RelatedRecordDescription' => gettext("Related Record Description|A description of the related record based on a combination of field values assigned from within the related module"),
   'SupplierCategoryID' => gettext("Category|A method for grouping suppliers of similar characteristics"),
   'SupplierTypeID' => gettext("Supplier Type|A combined field used to describe this supplier type when associating it with other records"),
   'SupplierTitle' => gettext("Supplier Title|A word or short phrase used to identify the supplier and/or the supplier relationship with the organization"),
   'SupplierTypeDesc' => gettext("Description|A brief but thorough description of the specific type of supplier exposure"),
   'ItemDescription' => gettext("Item Description|A brief but thorough description of the item supplied by the supplier"),
   'OrganizationID' => gettext("Organization|The name of the organization which utilzes the supplier to purchase the related item"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for managing the supplier relationship between the specified organization and the specified supplier"),
   'SupplierOrgID' => gettext("Supplier|The name of the supplier"),
   'RelationshipID' => gettext("Category|A method for grouping suppliers of similar characteristics"),
   'SupplierContactID' => gettext("Supplier Contact|The name of the individual working for the supplier which is responsible for maintaining the customer relationship with the specified organization"),
   'PrimarySupplier' => gettext("Primary Supplier|Whether this supplier is the primary supplier of the goods and/or services"),
   'ProductLiabilityCertificate' => gettext("Liability Certificate|Whether this supplier is required to furnish a Certificate of Product Liability"),
   'LiabilityExpiration' => gettext("Certificate Expiration|Date the Product Liability Certificate will expire"),
   'CatalogTypeID' => gettext("Catalog Type|The type of catalog used by the organization for the purchase of goods and/or services"),
   'CatalogID' => gettext("Catalog|A description of the catalog based on a combination of field values assigned from within the Catalogs module"),
   'CatalogPgNo' => gettext("Catalog Page Number|The page number of the supplier's current catalog where the equipment can be found"),
   'PartNo' => gettext("Part Number|The part number assigned to the equipment by the equipment supplier"),
   'ItemURL' => gettext("Internet Link|A link to the supplier's website where the item can be reviewed"),
   'UnitCost' => gettext("Unit Cost|The price charged by the supplier for the equipment based on the supplier's price per base unit"),
   'MinimumUnitOrder' => gettext("Minimum Unit Order|The minimum number of equipment units required to be purchased to receive the unit cost")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['SupplierTitle'], ShortPhrase($phrases['SupplierTitle']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SupplierTitle']->invalid = TRUE;
            }
$vMsg = Validate($data['ItemDescription'], ShortPhrase($phrases['ItemDescription']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ItemDescription']->invalid = TRUE;
            }
$vMsg = Validate($data['OrganizationID'], ShortPhrase($phrases['OrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['OrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['SupplierOrgID'], ShortPhrase($phrases['SupplierOrgID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SupplierOrgID']->invalid = TRUE;
            }
$vMsg = Validate($data['RelationshipID'], ShortPhrase($phrases['RelationshipID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['RelationshipID']->invalid = TRUE;
            }
$vMsg = Validate($data['SupplierContactID'], ShortPhrase($phrases['SupplierContactID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['SupplierContactID']->invalid = TRUE;
            }
$vMsg = Validate($data['PrimarySupplier'], ShortPhrase($phrases['PrimarySupplier']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PrimarySupplier']->invalid = TRUE;
            }
$vMsg = Validate($data['ProductLiabilityCertificate'], ShortPhrase($phrases['ProductLiabilityCertificate']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ProductLiabilityCertificate']->invalid = TRUE;
            }
$vMsg = Validate($data['LiabilityExpiration'], ShortPhrase($phrases['LiabilityExpiration']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['LiabilityExpiration']->invalid = TRUE;
            }
$vMsg = Validate($data['CatalogID'], ShortPhrase($phrases['CatalogID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['CatalogID']->invalid = TRUE;
            }
$vMsg = Validate($data['CatalogPgNo'], ShortPhrase($phrases['CatalogPgNo']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['CatalogPgNo']->invalid = TRUE;
            }
$vMsg = Validate($data['PartNo'], ShortPhrase($phrases['PartNo']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PartNo']->invalid = TRUE;
            }
$vMsg = Validate($data['ItemURL'], ShortPhrase($phrases['ItemURL']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ItemURL']->invalid = TRUE;
            }
$vMsg = Validate($data['UnitCost'], ShortPhrase($phrases['UnitCost']), 'Money notNegative');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['UnitCost']->invalid = TRUE;
            }
$vMsg = Validate($data['MinimumUnitOrder'], ShortPhrase($phrases['MinimumUnitOrder']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MinimumUnitOrder']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Suppliers"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Supplier") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about a supplier associated with a related record") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate audit items with the supplier") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate business agreements and/or contracts with the supplier") );
      $tempTabs['Culture'] = array( "edit.php?scr=Culture&$tabsQS", gettext("Culture|Associate values with the supplier") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the supplier") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the supplier") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the supplier") );
      $tempTabs['Exposures'] = array( "edit.php?scr=Exposures&$tabsQS", gettext("Exposures|Associate cost exposures with the supplier") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the supplier") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the supplier") );
      $tempTabs['PackagingEquivalents'] = array( "edit.php?scr=PackagingEquivalents&$tabsQS", gettext("Equivalents|Associate a supplier with equivalent packaging units") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the supplier") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the supplier") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with the supplier") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the supplier") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Supplier") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"LiabilityExpiration\",
".$User->getCalFormat(false)."
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_LiabilityExpiration\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>