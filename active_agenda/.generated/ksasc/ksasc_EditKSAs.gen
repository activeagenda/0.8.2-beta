<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:6:{s:12:"CapabilityID";O:9:"viewfield":16:{s:4:"name";s:12:"CapabilityID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Record ID|An automatically assigned number used to track strategic capabilities";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:4:"Area";O:9:"viewfield":16:{s:4:"name";s:4:"Area";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:101:"Area|A combined field used to describe this area of excellence when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"AreaDesc";O:9:"viewfield":16:{s:4:"name";s:8:"AreaDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:73:"Area Description|A brief phrase used to describe the strategic capability";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"Capability";O:9:"viewfield":16:{s:4:"name";s:10:"Capability";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Capability|A combined field used to describe this strategic capability when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"CapabilityDesc";O:9:"viewfield":16:{s:4:"name";s:14:"CapabilityDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Capability Description|A brief phrase used to describe the strategic capability";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"GroupAbbr";O:9:"viewfield":16:{s:4:"name";s:9:"GroupAbbr";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Abbreviation|A grouping of area and capability abbreviations for reporting purposes";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Strategic Capability");

//field value array
$data = array(
        'CapabilityID' => '',
         'Area' => '',
         'AreaDesc' => '',
         'Capability' => '',
         'CapabilityDesc' => '',
         'GroupAbbr' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:548:"SELECT 
   `ksa`.KSAID,
   `ksa`.KSATitle,
   `ksa`.KSADesc,
   `ksa`.KSAAbbr,
   `cod1`.Description AS QualificationMethod,
   `ksa`.QualificationMethodID,
   `ksaae1`.OrganizationID AS OrganizationID
FROM `ksa`
   
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksa`.QualificationMethodID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'257\')
     LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa`.CapabilityID = `ksasc1`.CapabilityID )
     LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc1`.AreaID = `ksaae1`.AreaID )
WHERE
   ksa.KSAID=\'/**RowID**/\'";s:9:"getRowSQL";s:823:"SELECT 
   `ksa`.KSAID,
   NULLIF(CONCAT(IFNULL(`ksa`.KSATitle,\'\'),\' (\',IFNULL(`ksa`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,
   `ksa`.KSADesc,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ksaae2`.AreaAbbr,\'\'),\':\',IFNULL(`ksasc1`.CapabilityAbbr,\'\')),\':\'),\'\'),\':\',IFNULL(`ksa`.KSAAbbr,\'\')),\':\') AS KSAGroupAbbr,
   `cod1`.Description AS QualificationMethod,
   `ksaae1`.OrganizationID AS OrganizationID
FROM `ksa`
   
     LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa`.CapabilityID = `ksasc1`.CapabilityID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksa`.QualificationMethodID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'257\')
     LEFT OUTER JOIN `ksaae` AS ksaae2 
   ON (`ksasc1`.AreaID = `ksaae2`.AreaID )
     LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc1`.AreaID = `ksaae1`.AreaID )
WHERE
   ksa.KSAID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:5:{s:5:"KSAID";O:14:"invisiblefield":11:{s:4:"name";s:5:"KSAID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Record ID|An automatically assigned number used to track knowledge, skill, and ability";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"ksa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:8:"KSATitle";O:9:"editfield":14:{s:4:"name";s:8:"KSATitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:77:"KSA Title|A short title used to describe the knowldege, skill, and or ability";s:8:"dataType";s:11:"varchar(30)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:3:"ksa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"25";s:9:"maxLength";s:2:"30";s:5:"align";s:4:"left";}s:7:"KSADesc";O:9:"memofield":15:{s:4:"name";s:7:"KSADesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:84:"KSA Description|A brief phrase used to describe the knowldege, skill, and or ability";s:8:"dataType";s:4:"text";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:7:"KSAAbbr";O:9:"editfield":14:{s:4:"name";s:7:"KSAAbbr";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"KSA Abbreviation|An abbreviation used to describe the knowldege, skill, and or ability";s:8:"dataType";s:10:"varchar(5)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:3:"ksa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:21:"QualificationMethodID";O:14:"codecombofield":27:{s:4:"name";s:21:"QualificationMethodID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Qualification Method|The method used to achieve knowledge, skill, or ability qualification";s:8:"dataType";s:3:"int";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:3:"ksa";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'257\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'257\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ksa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"257";}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:5:"KSAID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:3:"ksa";s:6:"phrase";s:28:"Knoweldge, Skills, Abilities";s:6:"number";i:1;s:6:"Fields";a:5:{s:5:"KSAID";O:14:"invisiblefield":11:{s:4:"name";s:5:"KSAID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Record ID|An automatically assigned number used to track knowledge, skill, and ability";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"ksa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:3:"KSA";O:9:"viewfield":16:{s:4:"name";s:3:"KSA";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"KSA|A combined field used to describe this KSA when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"ksa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"KSADesc";O:9:"viewfield":16:{s:4:"name";s:7:"KSADesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"KSA Description|A brief phrase used to describe the knowldege, skill, and or ability";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"ksa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"KSAGroupAbbr";O:9:"viewfield":16:{s:4:"name";s:12:"KSAGroupAbbr";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:89:"Abbreviation|A grouping of area, capability, and KSA abbreviations for reporting purposes";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"ksa";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"QualificationMethod";O:9:"viewfield":16:{s:4:"name";s:19:"QualificationMethod";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Qualification Method|The method used to achieve knowledge, skill, or ability qualification";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:3:"ksa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:105:"SELECT 
    count(*) 
FROM `ksa`
   
WHERE ksa._Deleted = 0
   AND `ksa`.CapabilityID = \'/**RecordID**/\'
";s:7:"listSQL";s:831:"SELECT 
   `ksa`.KSAID,
`ksaae1`.OrganizationID AS OrganizationID,
NULLIF(CONCAT(IFNULL(`ksa`.KSATitle,\'\'),\' (\',IFNULL(`ksa`.KSAAbbr,\'\'),\')\'),\' ()\') AS KSA,
`ksa`.KSADesc,
NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ksaae2`.AreaAbbr,\'\'),\':\',IFNULL(`ksasc1`.CapabilityAbbr,\'\')),\':\'),\'\'),\':\',IFNULL(`ksa`.KSAAbbr,\'\')),\':\') AS KSAGroupAbbr,
`cod1`.Description AS QualificationMethod
FROM `ksa`

   LEFT OUTER JOIN `ksasc` AS ksasc1 
   ON (`ksa`.CapabilityID = `ksasc1`.CapabilityID )
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksa`.QualificationMethodID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'257\')
   LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc1`.AreaID = `ksaae1`.AreaID )
   LEFT OUTER JOIN `ksaae` AS ksaae2 
   ON (`ksasc1`.AreaID = `ksaae2`.AreaID )
WHERE ksa._Deleted = 0
AND `ksa`.CapabilityID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:12:"CapabilityID";s:9:"parentKey";s:12:"CapabilityID";s:8:"PKFields";a:1:{i:0;s:5:"KSAID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');


    /**guidanceGrid**/

    $PKField = 'CapabilityID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Accountability";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `ksasc`.CapabilityID,
   NULLIF(CONCAT(IFNULL(`cod1`.Description,''),': ',IFNULL(`ksaae1`.AreaTitle,''),' (',IFNULL(`ksaae1`.AreaAbbr,''),')'),':  ()') AS Area,
   `ksaae1`.AreaDesc AS AreaDesc,
   NULLIF(CONCAT(IFNULL(`ksasc`.CapabilityTitle,''),' (',IFNULL(`ksasc`.CapabilityAbbr,''),')'),' ()') AS Capability,
   `ksasc`.CapabilityDesc,
   NULLIF(CONCAT(IFNULL(`ksaae1`.AreaAbbr,''),':',IFNULL(`ksasc`.CapabilityAbbr,'')),':') AS GroupAbbr,
   NULLIF(CONCAT(IFNULL(`ksasc`.CapabilityTitle,''),' | ',IFNULL(`ksasc`.CapabilityDesc,'')),' | ') AS RecordLabel,
   `ksaae1`.OrganizationID AS OrganizationID
FROM `ksasc`
   
     LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc`.AreaID = `ksaae1`.AreaID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksaae1`.KSAAreaID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '198')
WHERE
   ksasc.CapabilityID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Strategic Capability");
        $screenPhrase = gettext("KSAs|Associate knowledge, skills, and abilities with the strategic capability");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Strategic Capabilities");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'CapabilityID' => gettext("Record ID|An automatically assigned number used to track strategic capabilities"),
   'Area' => gettext("Area|A combined field used to describe this area of excellence when associating it with other records"),
   'AreaDesc' => gettext("Area Description|A brief phrase used to describe the strategic capability"),
   'Capability' => gettext("Capability|A combined field used to describe this strategic capability when associating it with other records"),
   'CapabilityDesc' => gettext("Capability Description|A brief phrase used to describe the strategic capability"),
   'GroupAbbr' => gettext("Abbreviation|A grouping of area and capability abbreviations for reporting purposes")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Strategic Capabilities"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Strategic Capability") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about the strategic capability") );
      $tempTabs['KSAs'] = array( "", gettext("KSAs|Associate knowledge, skills, and abilities with the strategic capability") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with the strategic capability") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the strategic capability") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with the strategic capability") );
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['KSAs'] = array( "", gettext("New Capability") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>