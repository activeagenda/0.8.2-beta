<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */


    //list of objects containing the field information
    $fields = unserialize('a:4:{s:14:"SourceModuleID";O:10:"combofield":26:{s:4:"name";s:14:"SourceModuleID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"mod";s:10:"foreignKey";s:8:"ModuleID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:102:"SELECT 
`mod`.ModuleID AS ID, `mod`.Name AS Name FROM `mod`
WHERE mod._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:98:"SELECT 
`mod`.ModuleID AS ID, `mod`.Name AS Name FROM `mod`

WHERE `mod`.ModuleID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"orgla";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:24:"RelatedRecordDescription";O:9:"editfield":14:{s:4:"name";s:24:"RelatedRecordDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:14:"OrganizationID";O:10:"combofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"LocationID";a:1:{s:4:"name";s:10:"LocationID";}}s:8:"moduleID";s:5:"orgla";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:10:"LocationID";O:10:"combofield":26:{s:4:"name";s:10:"LocationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgl";s:10:"foreignKey";s:10:"LocationID";s:12:"foreignField";s:8:"Location";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:371:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE orgl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:369:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `orgl`.LocationID = \'/*recordID*/\'";s:11:"parentField";s:14:"OrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"orgla";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`orgl`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}');


    /**ownerField**/
    
    //phrases for field names, in field order (note: phrases are used in search filter)
    $phrases = array(
   'SourceModuleID' => gettext("Source Module|The name of the module which is the source of the assigned involvement"),
   'RelatedRecordDescription' => gettext("Record Description|A group of fields used to describe the source record"),
   'OrganizationID' => gettext("Organization|The organization associated with this specific location"),
   'LocationID' => gettext("Location|Specific location within the facility where the other asset is located")
   );


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);


    $pageTitle = gettext("Location Associations");
    $screenPhrase = gettext("Search");
    global $SQLBaseModuleID;
    $SQLBaseModuleID = $ModuleID;

    $search = $_SESSION['Search_'.$ModuleID];
    
    if(empty($_POST['Search']) && empty($_POST['Chart'])){
        $values = $search->searchValues;
    } else {
        $values = $_POST;
    }
    
    //populate data array with posted values
    foreach($fields as $fieldName=>$value){
        $data[$fieldName] = $values[$fieldName];
    }



    //if the form was posted
    if((!empty($_POST['Search'])) || (!empty($_POST['Chart']))){


        //List fields (used for generating the complete SQL search statement):
        $listFields = unserialize('a:4:{i:0;s:15:"LocationAssocID";i:1;s:12:"SourceModule";i:2;s:24:"RelatedRecordDescription";i:3;s:8:"Location";}');



        //link fields (fields that provide a URL, and not necessarily displayed
        //as a separate column in the list screen
        $linkFields = array(

      );



        //create a Search definition object
        $search = new Search(
            $ModuleID,
            $listFields,
            $fields,
            $_POST
        );


        //then post it to the Search session object.
        $_SESSION['Search_'.$ModuleID] = $search;


        //redirect depending on what submit buton was pressed by the user.
        if(!empty($_POST['Search'])){

            $RedirectTo = "list.php?mdl=$ModuleID";
            header("Location:" . $RedirectTo);
            exit;
            

        } else {

            //handle "Chart" (TO DO)
            $RedirectTo = "charts.php?mdl=$ModuleID";
            header("Location:" . $RedirectTo);
            exit;

        }

    }

    //moved down from above
    $qs = MakeQS($qsArgs);

    //links for rendering the form
    $targetlink = "search.php?$qs";
    $cancellink = "list.php?$qs";

    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Location Associations"));
    $tabs['Search'] = Array("", gettext("Search"));
    $tabs['Charts'] = Array("charts.php?$tabsQS", gettext("Charts|View charts"));



    ob_start();
    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->searchRender(&$data, &$phrases);
        }
    }
    ob_end_clean();
    
    $content = renderSearchForm($content, $targetlink, $chartLink, $ModuleID);

    //insert code to enable calendar controls
    /**dateFields**/
    
   // $content .= debug_r($search->searchValues, "searchValues");

?>
