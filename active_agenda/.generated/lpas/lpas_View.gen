<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:8:{s:9:"SubjectID";O:9:"viewfield":16:{s:4:"name";s:9:"SubjectID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:144:"Subject ID|An automatically assigned number used to associate persons accused of employment practice violations with claims which result in loss";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"LossEmpPracticeID";O:9:"viewfield":16:{s:4:"name";s:17:"LossEmpPracticeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:166:"Loss ID|A description of the alledged employment practice violation based on a combination of field values assigned from within the Loss - Employment Practices module";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"IncidentReportID";O:9:"viewfield":16:{s:4:"name";s:16:"IncidentReportID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:142:"Incident Report|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IncidentReport";O:9:"viewfield":16:{s:4:"name";s:14:"IncidentReport";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:144:"Incident Reported|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"PracticeType";O:9:"viewfield":16:{s:4:"name";s:12:"PracticeType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:99:"Practice Type|The specific type of employment practice violation asserted within this claim of loss";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:122:"Organization|The name of the organization associated with the person accused of an employment practice resulting in a loss";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"SubjectPerson";O:9:"viewfield":16:{s:4:"name";s:13:"SubjectPerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:76:"Subject|The individual accused of an employment practice resulting in a loss";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"ComplaintDesc";O:9:"viewfield":16:{s:4:"name";s:13:"ComplaintDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Complaint|A detailed description of the employment practice complaint or complaints against the subject of the complaint";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'SubjectID' => gettext("Subject ID|An automatically assigned number used to associate persons accused of employment practice violations with claims which result in loss"),
   'LossEmpPracticeID' => gettext("Loss ID|A description of the alledged employment practice violation based on a combination of field values assigned from within the Loss - Employment Practices module"),
   'IncidentReportID' => gettext("Incident Report|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module"),
   'IncidentReport' => gettext("Incident Reported|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module"),
   'PracticeType' => gettext("Practice Type|The specific type of employment practice violation asserted within this claim of loss"),
   'Organization' => gettext("Organization|The name of the organization associated with the person accused of an employment practice resulting in a loss"),
   'SubjectPerson' => gettext("Subject|The individual accused of an employment practice resulting in a loss"),
   'ComplaintDesc' => gettext("Complaint|A detailed description of the employment practice complaint or complaints against the subject of the complaint")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `lpas`.SubjectID,
   `lpas`.LossEmpPracticeID,
   `clm1`.IncidentReportID AS IncidentReportID,
   NULLIF(CONCAT(IFNULL(`ire1`.IncidentName,'')),'') AS IncidentReport,
   `cod1`.Description AS PracticeType,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS SubjectPerson,
   `lpas`.ComplaintDesc,
   NULLIF(CONCAT(IFNULL(`cod1`.Description,''),' | ',IFNULL(`org1`.Name,''),' | ',IFNULL(`ppl1`.DisplayName,'')),' |  | ') AS RecordLabel,
   `lpas`.OrganizationID
FROM `lpas`
   
     LEFT OUTER JOIN `lpa` AS lpa1 
   ON (`lpas`.LossEmpPracticeID = `lpa1`.LossEmpPracticeID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`lpas`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`lpas`.SubjectID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'lpas'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '24')
     LEFT OUTER JOIN `clm` AS clm1 
    ON (`lpa1`.LossEmpPracticeID = `clm1`.RelatedRecordID 
     AND `clm1`.RelatedModuleID = 'lpa'
     AND `clm1`._Deleted = 0)
     LEFT OUTER JOIN `ire` AS ire1 
ON (`clm1`.IncidentReportID = `ire1`.IncidentReportID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`lpa1`.PracticeTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '77')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`inv1`.PersonInvolvedID = `ppl1`.PersonID )
WHERE
   lpas.SubjectID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Employment Practice Loss Subjects"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Employment Practice Loss Subject") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about the subject of an employment practice complaint") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Employment Practice Loss Subject") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("an Employment Practice Loss Subject") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Employment Practice Loss Subject");
    $screenPhrase = gettext("View|View summary information about the subject of an employment practice complaint");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
