<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:17:{s:16:"LossOtherAssetID";O:9:"viewfield":16:{s:4:"name";s:16:"LossOtherAssetID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Record ID|An automatically assigned number used to track property losses";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"IncidentReportID";O:9:"viewfield":16:{s:4:"name";s:16:"IncidentReportID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:142:"Incident Report|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"IncidentReport";O:9:"viewfield":16:{s:4:"name";s:14:"IncidentReport";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:144:"Incident Reported|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"EventDate";O:9:"viewfield":16:{s:4:"name";s:9:"EventDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:50:"Event Date|Date the situation or incident occurred";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"TimeDeterminable";O:13:"checkboxfield":14:{s:4:"name";s:16:"TimeDeterminable";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"IncurredTime";O:9:"datefield":15:{s:4:"name";s:12:"IncurredTime";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:10:"ReportDate";O:9:"datefield":15:{s:4:"name";s:10:"ReportDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:9:"EntryDate";O:9:"viewfield":16:{s:4:"name";s:9:"EntryDate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:58:"Entry Date|Date the loss was first entered into the system";s:8:"dataType";s:8:"datetime";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"lppo";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:19:"AssetOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:19:"AssetOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:16:"OtherAssetTypeID";a:1:{s:4:"name";s:16:"OtherAssetTypeID";}}s:8:"moduleID";s:4:"lppo";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:16:"OtherAssetTypeID";O:14:"codecombofield":27:{s:4:"name";s:16:"OtherAssetTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'23\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'23\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:12:"OtherAssetID";a:1:{s:4:"name";s:12:"OtherAssetID";}}s:8:"moduleID";s:4:"lppo";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"23";}s:12:"OtherAssetID";O:10:"combofield":26:{s:4:"name";s:12:"OtherAssetID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"oas";s:10:"foreignKey";s:12:"OtherAssetID";s:12:"foreignField";s:10:"OtherAsset";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:183:"SELECT 
`oas`.OtherAssetID AS ID, NULLIF(CONCAT(IFNULL(`oas`.OtherAssetTitle,\'\')),\'\') AS Name, `oas`.OtherAssetTypeID AS ParentID FROM `oas`
WHERE oas._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:183:"SELECT 
`oas`.OtherAssetID AS ID, NULLIF(CONCAT(IFNULL(`oas`.OtherAssetTitle,\'\')),\'\') AS Name, `oas`.OtherAssetTypeID AS ParentID FROM `oas`

WHERE `oas`.OtherAssetID = \'/*recordID*/\'";s:11:"parentField";s:16:"OtherAssetTypeID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:21:"OtherAssetInventoryID";a:1:{s:4:"name";s:21:"OtherAssetInventoryID";}}s:8:"moduleID";s:4:"lppo";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`oas`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:21:"OtherAssetInventoryID";O:10:"combofield":26:{s:4:"name";s:21:"OtherAssetInventoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"oasin";s:10:"foreignKey";s:21:"OtherAssetInventoryID";s:12:"foreignField";s:19:"OtherAssetInventory";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:876:"SELECT 
`oasin`.OtherAssetInventoryID AS ID, NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`oas1`.OtherAssetTitle,\'\')),\'\'),\'\'),\' | \',IFNULL(NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\'),\'\'),\' | \',IFNULL(`oasin`.TrackingNumber,\'\')),\' |  | \') AS Name, `oasin`.OtherAssetID AS ParentID FROM `oasin`
 
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`oasin`.OtherAssetInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'oasin\'
     AND `orgla1`._Deleted = 0)
 LEFT OUTER JOIN `oas` AS oas1 
   ON (`oasin`.OtherAssetID = `oas1`.OtherAssetID )
 LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE oasin._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:885:"SELECT 
`oasin`.OtherAssetInventoryID AS ID, NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`oas1`.OtherAssetTitle,\'\')),\'\'),\'\'),\' | \',IFNULL(NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\'),\'\'),\' | \',IFNULL(`oasin`.TrackingNumber,\'\')),\' |  | \') AS Name, `oasin`.OtherAssetID AS ParentID FROM `oasin`
 
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`oasin`.OtherAssetInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'oasin\'
     AND `orgla1`._Deleted = 0)
 LEFT OUTER JOIN `oas` AS oas1 
   ON (`oasin`.OtherAssetID = `oas1`.OtherAssetID )
 LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `oasin`.OtherAssetInventoryID = \'/*recordID*/\'";s:11:"parentField";s:12:"OtherAssetID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"lppo";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:30:"`oasin`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:14:"TrackingNumber";O:9:"viewfield":16:{s:4:"name";s:14:"TrackingNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Tracking Number|A unique number used by the organization to track specific assets";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"PropOwnershipID";O:14:"coderadiofield":29:{s:4:"name";s:15:"PropOwnershipID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'24\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'24\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"lppo";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:11:"orientation";s:8:"vertical";s:14:"conditionField";N;s:14:"conditionValue";N;}s:18:"PropertyLossTypeID";O:14:"codecombofield":27:{s:4:"name";s:18:"PropertyLossTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'40\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'40\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"lppo";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"40";}s:16:"PropertyLossDesc";O:9:"memofield":15:{s:4:"name";s:16:"PropertyLossDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Other Asset Loss");

//field value array
$data = array(
        'LossOtherAssetID' => '',
         'IncidentReportID' => '',
         'IncidentReport' => '',
         'EventDate' => '',
         'TimeDeterminable' => '',
         'IncurredTime' => '',
         'ReportDate' => '',
         'EntryDate' => '',
         'PersonAccountableID' => '',
         'AssetOrganizationID' => '',
         'OtherAssetTypeID' => '',
         'OtherAssetID' => '',
         'OtherAssetInventoryID' => '',
         'TrackingNumber' => '',
         'PropOwnershipID' => '',
         'PropertyLossTypeID' => '',
         'PropertyLossDesc' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'LossOtherAssetID';

    $ownerField = 'AssetOrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "AssetReview";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `lppo`.LossOtherAssetID,
   `clm1`.IncidentReportID AS IncidentReportID,
   NULLIF(CONCAT(IFNULL(`ire1`.IncidentName,'')),'') AS IncidentReport,
   `dat1`.RelatedDate AS EventDate,
   `clm1`.TimeDeterminable AS TimeDeterminable,
   `dat5`.RelatedDate AS IncurredTime,
   `dat2`.RelatedDate AS ReportDate,
   `clm_l`.createDate AS EntryDate,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `org2`.Name AS AssetOrganization,
   `oasin1`.OrganizationID AS AssetOrganizationID,
   `cod1`.Description AS OtherAssetType,
   `oas2`.OtherAssetTypeID AS OtherAssetTypeID,
   NULLIF(CONCAT(IFNULL(`oas2`.OtherAssetTitle,'')),'') AS OtherAsset,
   `oasin1`.OtherAssetID AS OtherAssetID,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`oas1`.OtherAssetTitle,'')),''),''),' | ',IFNULL(NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),''),''),' | ',IFNULL(`oasin1`.TrackingNumber,'')),' |  | ') AS OtherAssetInventory,
   `lppo`.OtherAssetInventoryID,
   `oasin1`.TrackingNumber AS TrackingNumber,
   `cod2`.Description AS PropOwnership,
   `lppo`.PropOwnershipID,
   `cod3`.Description AS PropertyLossType,
   `lppo`.PropertyLossTypeID,
   `lppo`.PropertyLossDesc,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`oas2`.OtherAssetTitle,'')),''),''),' incurred a loss at ',IFNULL(`org1`.Name,''),' on ',IFNULL(`dat5`.RelatedDate,'')),' incurred a loss at  on ') AS RecordLabel
FROM `lppo`
   
     LEFT OUTER JOIN `clm` AS clm1 
    ON (`lppo`.LossOtherAssetID = `clm1`.RelatedRecordID 
     AND `clm1`.RelatedModuleID = 'lppo'
     AND `clm1`._Deleted = 0)
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`lppo`.LossOtherAssetID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'lppo'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '29')
     LEFT OUTER JOIN `oasin` AS oasin1 
   ON (`lppo`.OtherAssetInventoryID = `oasin1`.OtherAssetInventoryID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`lppo`.PropOwnershipID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '24')
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`lppo`.PropertyLossTypeID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '40')
     LEFT OUTER JOIN `org` AS org1 
   ON (`lppo`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ire` AS ire1 
   ON (`clm1`.IncidentReportID = `ire1`.IncidentReportID )
     LEFT OUTER JOIN `dat` AS dat5 
    ON (`clm1`.ClaimID = `dat5`.SourceRecordID 
     AND `dat5`.SourceModuleID = 'clm'
     AND `dat5`._Deleted = 0
     AND `dat5`.DateDescriptorID = '34')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`clm1`.ClaimID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'clm'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '32')
     LEFT OUTER JOIN (
                SELECT
                    `clm_l`.ClaimID,
                    `clm_l`._ModDate AS createDate,
                    `clm_l`._ModBy AS createBy
                FROM `clm_l`
                INNER JOIN (
                    SELECT
                        ClaimID,
                        MIN(_RecordID) AS MinRecordID
                    FROM `clm_l`
                    GROUP BY ClaimID) as `clm_min`
                ON `clm_l`._RecordID = `clm_min`.MinRecordID
                ) AS clm_l
                ON (`clm1`.ClaimID = clm_l.ClaimID)
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`oasin1`.OrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `oas` AS oas2 
   ON (`oasin1`.OtherAssetID = `oas2`.OtherAssetID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`oasin1`.OtherAssetInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'oasin'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `oas` AS oas1 
   ON (`oasin1`.OtherAssetID = `oas1`.OtherAssetID )
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`ire1`.IncidentReportID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'ire'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '16')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`oas2`.OtherAssetTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '23')
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   lppo.LossOtherAssetID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Other Asset Loss");
        $screenPhrase = gettext("Form|Edit summary information about an asset loss");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Other Asset Loss");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'LossOtherAssetID' => gettext("Record ID|An automatically assigned number used to track property losses"),
   'IncidentReportID' => gettext("Incident Report|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module"),
   'IncidentReport' => gettext("Incident Reported|A description of the incident reported based on a combination of field values assigned from within the Incident Reports module"),
   'EventDate' => gettext("Event Date|Date the situation or incident occurred"),
   'TimeDeterminable' => gettext("Time Determinable?|Whether the time the loss occurred is determinable"),
   'IncurredTime' => gettext("Incurred Date|Date the asset loss was incurred"),
   'ReportDate' => gettext("Report Date|Date the loss was reported"),
   'EntryDate' => gettext("Entry Date|Date the loss was first entered into the system"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for managing this incident and mitigating the associated loss"),
   'AssetOrganizationID' => gettext("Asset Organization|The name of the organization responsible for the asset"),
   'OtherAssetTypeID' => gettext("Asset Type|A method of classifying and tracking assets of different types. Asset types are assigned by the parent organization"),
   'OtherAssetID' => gettext("Asset|The name of the asset to be protected"),
   'OtherAssetInventoryID' => gettext("Asset Inventory Item|The name of the asset inventory item that was involved in the loss"),
   'TrackingNumber' => gettext("Tracking Number|A unique number used by the organization to track specific assets"),
   'PropOwnershipID' => gettext("Ownership|Whether the property associated with the loss is owned by the company, a private entity or both the company and a private entity"),
   'PropertyLossTypeID' => gettext("Property Loss Type|A general category of loss which applies to this property loss event"),
   'PropertyLossDesc' => gettext("Loss Description|A detailed description of the property loss")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['TimeDeterminable'], ShortPhrase($phrases['TimeDeterminable']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['TimeDeterminable']->invalid = TRUE;
            }
$vMsg = Validate($data['IncurredTime'], ShortPhrase($phrases['IncurredTime']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['IncurredTime']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['OtherAssetInventoryID'], ShortPhrase($phrases['OtherAssetInventoryID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['OtherAssetInventoryID']->invalid = TRUE;
            }
$vMsg = Validate($data['PropOwnershipID'], ShortPhrase($phrases['PropOwnershipID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PropOwnershipID']->invalid = TRUE;
            }
$vMsg = Validate($data['PropertyLossTypeID'], ShortPhrase($phrases['PropertyLossTypeID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PropertyLossTypeID']->invalid = TRUE;
            }
$vMsg = Validate($data['PropertyLossDesc'], ShortPhrase($phrases['PropertyLossDesc']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PropertyLossDesc']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Other Asset Losses"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("an Other Asset Loss") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about an asset loss") );
      $tempTabs['AssetReview'] = array( "edit.php?scr=AssetReview&$tabsQS", gettext("Review|Edit asset review details associated with the asset loss") );
      $tempTabs['Claim'] = array( "edit.php?scr=Claim&$tabsQS", gettext("Claim|Edit summary information about the asset loss") );
      $tempTabs['LossLocation'] = array( "edit.php?scr=LossLocation&$tabsQS", gettext("Location|Edit summary information about the location of the asset loss") );
      $tempTabs['LossStatus'] = array( "edit.php?scr=LossStatus&$tabsQS", gettext("Status|Edit summary information about the status of the asset loss") );
      $tempTabs['LossLegitimacy'] = array( "edit.php?scr=LossLegitimacy&$tabsQS", gettext("Legitimacy|Edit summary information about the legitimacy of the asset loss") );
      $tempTabs['RiskMatrix'] = array( "edit.php?scr=RiskMatrix&$tabsQS", gettext("Risk Matrix|Edit risk matrix values associated with the asset loss") );
      $tempTabs['EventLog'] = array( "edit.php?scr=EventLog&$tabsQS", gettext("Events|Associate ongoing events with the asset loss") );
      $tempTabs['Documentation'] = array( "edit.php?scr=Documentation&$tabsQS", gettext("Documentation|Track the status of documentation delivery requirements associated with the asset loss") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the asset loss") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the asset loss") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with the asset loss") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the asset loss") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Other Asset Loss") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"IncurredTime\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_IncurredTime\"
});
Calendar.setup({
   inputField : \"ReportDate\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_ReportDate\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>