<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:14:{s:10:"DocumentID";O:9:"viewfield":16:{s:4:"name";s:10:"DocumentID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Record ID|An automatically assigned number used to track documents and forms used by an organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"DocumentTypeID";O:14:"invisiblefield":11:{s:4:"name";s:14:"DocumentTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:92:"Organization|The organization with primary responsibility for this documentation requirement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Person Accountable|The individual assigned primary accountability for managing this document\'s format, use and compliance currency";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"DocumentCategory";O:9:"viewfield":16:{s:4:"name";s:16:"DocumentCategory";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Category|A broad category used to group documentation of similar types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"DocumentType";O:9:"viewfield":16:{s:4:"name";s:12:"DocumentType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:111:"Document Type|A combined field used to describe this docte disposal type when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"DocumentTitle";O:9:"viewfield":16:{s:4:"name";s:13:"DocumentTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Document Title|The name of the document or form";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"DocumentVersion";O:9:"viewfield":16:{s:4:"name";s:15:"DocumentVersion";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:125:"Current Version|A unique number or version title used by the document creator to track revisions and currency of the document";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"DocumentDesc";O:9:"viewfield":16:{s:4:"name";s:12:"DocumentDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:58:"Description|A detailed description of the document or form";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"CompletionImmediacy";O:9:"viewfield":16:{s:4:"name";s:19:"CompletionImmediacy";s:10:"parentName";N;s:6:"Fields";a:1:{s:14:"ImmediacyUnits";O:9:"viewfield":16:{s:4:"name";s:14:"ImmediacyUnits";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:162:"Complete Within|The amount of time which can pass before the document or form shall be completed following the occurrence of an event which requires documentation";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"ReviewFrequency";O:9:"viewfield":16:{s:4:"name";s:15:"ReviewFrequency";s:10:"parentName";N;s:6:"Fields";a:1:{s:14:"FrequencyUnits";O:9:"viewfield":16:{s:4:"name";s:14:"FrequencyUnits";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:87:"Unit|A combined field used to describe this unit when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:6:"phrase";s:93:"Review Frequency|The amount of time which can pass before a document or form must be reviewed";s:8:"dataType";s:5:"float";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"DocumentStatus";O:9:"viewfield":16:{s:4:"name";s:14:"DocumentStatus";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:45:"Status|Current status of the document or form";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Attached";O:9:"viewfield":16:{s:4:"name";s:8:"Attached";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Attached|Whether a digital example of the document has been attached to this record";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"RegulatoryRequired";O:9:"viewfield":16:{s:4:"name";s:18:"RegulatoryRequired";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:74:"RegulatoryRequired|Whether the document is required by a regulatory agency";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Documentation");

//field value array
$data = array(
        'DocumentID' => '',
         'DocumentTypeID' => '',
         'Organization' => '',
         'PersonAccountable' => '',
         'DocumentCategory' => '',
         'DocumentType' => '',
         'DocumentTitle' => '',
         'DocumentVersion' => '',
         'DocumentDesc' => '',
         'ImmediacyUnits' => '',
         'CompletionImmediacy' => '',
         'FrequencyUnits' => '',
         'ReviewFrequency' => '',
         'DocumentStatus' => '',
         'Attached' => '',
         'RegulatoryRequired' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[2] = unserialize('O:8:"editgrid":32:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:2210:"SELECT 
   `busa`.BusinessContID,
   `cod1`.Description AS BusinessProcessType,
   `bus1`.BusinessProcessTypeID AS BusinessProcessTypeID,
   NULLIF(CONCAT(IFNULL(`bus1`.BusinessContinuationTitle,\'\')),\'\') AS BusinessContinuation,
   `busa`.BusinessContinuationID,
   `org1`.Name AS Organization,
   `busa`.OrganizationID,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `busa`.BusRecoveryTitle,
   `busa`.BusRecoveryRespon,
   `cod2`.Description AS Criticality,
   `busa`.CriticalityID,
   `cod3`.Description AS ImmediacyUnitCategory,
   `uts1`.UnitCategoryID AS ImmediacyUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,\'\')),\'\') AS ImmediacyUnits,
   `busa`.ImmediacyUnitsID,
   `busa`.TakeActionImmediacy,
   `cod4`.Description AS AcquireWithinUnitCategory,
   `uts2`.UnitCategoryID AS AcquireWithinUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts2`.UnitName,\'\')),\'\') AS AcquireWithinUnits,
   `busa`.AcquireWithinUnitsID,
   `busa`.AcquireWithin
FROM `busa`
   
     LEFT OUTER JOIN `bus` AS bus1 
   ON (`busa`.BusinessContinuationID = `bus1`.BusinessContinuationID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`busa`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`busa`.BusinessContID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'busa\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'8\')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`busa`.CriticalityID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'130\')
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`busa`.ImmediacyUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`busa`.AcquireWithinUnitsID = `uts2`.UnitID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`bus1`.BusinessProcessTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'283\')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`uts1`.UnitCategoryID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = \'37\')
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`uts2`.UnitCategoryID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = \'37\')
WHERE
   busa.BusinessContID=\'/**RowID**/\'";s:9:"getRowSQL";s:675:"SELECT 
   `org1`.Name AS Organization,
   `busa`.BusRecoveryTitle,
   `cod1`.Description AS BusinessProcessType,
   `cod2`.Description AS Criticality,
   `busa`.OrganizationID
FROM `busa`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`busa`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `bus` AS bus1 
   ON (`busa`.BusinessContinuationID = `bus1`.BusinessContinuationID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`busa`.CriticalityID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'130\')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`bus1`.BusinessProcessTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'283\')
WHERE
   busa.BusinessContID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:10:{s:14:"BusinessContID";O:14:"invisiblefield":11:{s:4:"name";s:14:"BusinessContID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:142:"Record ID|An automatically assigned number used to associate people, equipment and others assets with business continuation or recovery events";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:21:"BusinessProcessTypeID";O:14:"codecombofield":27:{s:4:"name";s:21:"BusinessProcessTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"Process Type|The specific type of business process to be protected against a business interruption";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'283\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'283\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:22:"BusinessContinuationID";a:2:{s:4:"name";s:22:"BusinessContinuationID";s:15:"listParentField";s:21:"BusinessProcessTypeID";}}s:8:"moduleID";s:4:"busa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"283";}s:22:"BusinessContinuationID";O:10:"combofield":26:{s:4:"name";s:22:"BusinessContinuationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:147:"Business Continuation Issue|A combined field used to describe this business continuation requirement or item when associating it with other records";s:8:"dataType";s:3:"int";s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"bus";s:10:"foreignKey";s:22:"BusinessContinuationID";s:12:"foreignField";s:20:"BusinessContinuation";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:208:"SELECT 
`bus`.BusinessContinuationID AS ID, NULLIF(CONCAT(IFNULL(`bus`.BusinessContinuationTitle,\'\')),\'\') AS Name, `bus`.BusinessProcessTypeID AS ParentID FROM `bus`
WHERE bus._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:218:"SELECT 
`bus`.BusinessContinuationID AS ID, NULLIF(CONCAT(IFNULL(`bus`.BusinessContinuationTitle,\'\')),\'\') AS Name, `bus`.BusinessProcessTypeID AS ParentID FROM `bus`

WHERE `bus`.BusinessContinuationID = \'/*recordID*/\'";s:11:"parentField";s:21:"BusinessProcessTypeID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"busa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Organization|The organization with primary responsibility for enforcing this business continuation requirement";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"busa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Person Accountable|The individual assigned primary accountability for this business continuation assignment";s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"busa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:16:"BusRecoveryTitle";O:9:"editfield":14:{s:4:"name";s:16:"BusRecoveryTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Recovery Title|A short title used to describe the business recovery business continuation responsibility of the person accountable";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:17:"BusRecoveryRespon";O:9:"memofield":15:{s:4:"name";s:17:"BusRecoveryRespon";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:111:"Responsibilities|A detailed description of the business continuation responsibilities of the person accountable";s:8:"dataType";s:4:"text";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:13:"CriticalityID";O:14:"codecombofield":27:{s:4:"name";s:13:"CriticalityID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:123:"Criticality|A way of categorizing the critical nature of securing a resource and prioritizing business continuation efforts";s:8:"dataType";s:3:"int";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'130\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'130\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"busa";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"130";}s:19:"TakeActionImmediacy";O:9:"editfield":14:{s:4:"name";s:19:"TakeActionImmediacy";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:23:"ImmediacyUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:23:"ImmediacyUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:16:"ImmediacyUnitsID";a:1:{s:4:"name";s:16:"ImmediacyUnitsID";}}s:8:"moduleID";s:4:"busa";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:16:"ImmediacyUnitsID";O:10:"combofield":26:{s:4:"name";s:16:"ImmediacyUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:23:"ImmediacyUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"busa";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";s:140:"Take Action Within|The amount of time which can pass before the person accountable must take action to secure the business continuation item";s:8:"dataType";s:5:"float";s:8:"validate";s:35:"Number notEmpty notZero notNegative";s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"10";s:9:"maxLength";s:2:"10";s:5:"align";s:4:"left";}s:13:"AcquireWithin";O:9:"editfield":14:{s:4:"name";s:13:"AcquireWithin";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:27:"AcquireWithinUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:27:"AcquireWithinUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:20:"AcquireWithinUnitsID";a:1:{s:4:"name";s:20:"AcquireWithinUnitsID";}}s:8:"moduleID";s:4:"busa";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:20:"AcquireWithinUnitsID";O:10:"combofield":26:{s:4:"name";s:20:"AcquireWithinUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:27:"AcquireWithinUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"busa";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";s:93:"Acquire Within|The number of days within which the business continuation item must be secured";s:8:"dataType";s:11:"varchar(10)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"10";s:9:"maxLength";s:2:"10";s:5:"align";s:4:"left";}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:14:"BusinessContID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:4:"busa";s:6:"phrase";s:23:"Continuity Requirements";s:6:"number";i:2;s:6:"Fields";a:4:{s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Organization|The organization with primary responsibility for enforcing this business continuation requirement";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:16:"BusRecoveryTitle";O:9:"viewfield":16:{s:4:"name";s:16:"BusRecoveryTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:130:"Recovery Title|A short title used to describe the business recovery business continuation responsibility of the person accountable";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"BusinessProcessType";O:9:"viewfield":16:{s:4:"name";s:19:"BusinessProcessType";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:98:"Process Type|The specific type of business process to be protected against a business interruption";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"Criticality";O:9:"viewfield":16:{s:4:"name";s:11:"Criticality";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:123:"Criticality|A way of categorizing the critical nature of securing a resource and prioritizing business continuation efforts";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busa";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:146:"SELECT 
    count(*) 
FROM `busa`
   
WHERE busa._Deleted = 0
   AND `busa`.RelatedModuleID = \'doc\'
AND `busa`.RelatedRecordID = \'/**RecordID**/\'
";s:7:"listSQL";s:739:"SELECT 
   `busa`.BusinessContID,
`busa`.OrganizationID,
`org1`.Name AS Organization,
`busa`.BusRecoveryTitle,
`cod1`.Description AS BusinessProcessType,
`cod2`.Description AS Criticality
FROM `busa`

   LEFT OUTER JOIN `org` AS org1 
   ON (`busa`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `bus` AS bus1 
   ON (`busa`.BusinessContinuationID = `bus1`.BusinessContinuationID )
   LEFT OUTER JOIN `cod` AS cod2 
   ON (`busa`.CriticalityID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = \'130\')
   LEFT OUTER JOIN `cod` AS cod1 
   ON (`bus1`.BusinessProcessTypeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'283\')
WHERE busa._Deleted = 0
AND `busa`.RelatedModuleID = \'doc\'
AND `busa`.RelatedRecordID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";s:10:"DocumentID";s:8:"PKFields";a:1:{i:0;s:14:"BusinessContID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;s:10:"conditions";a:1:{s:15:"RelatedModuleID";s:3:"doc";}}');


    $guidanceGrid = unserialize('O:8:"viewgrid":20:{s:13:"orderByFields";a:1:{s:20:"GuidanceOrganization";N;}s:6:"isInfo";b:0;s:10:"isGuidance";b:1;s:10:"isVertical";b:1;s:15:"verticalFormats";a:3:{s:16:"OrganizationLogo";s:9:"LogoField";s:20:"BusContConsiderTitle";s:10:"TitleField";s:26:"BusContConsiderDescription";s:12:"FeatureField";}s:8:"moduleID";s:4:"busc";s:6:"phrase";s:19:"Continuity Guidance";s:6:"number";N;s:6:"Fields";a:6:{s:17:"BusContConsiderID";O:14:"invisiblefield":11:{s:4:"name";s:17:"BusContConsiderID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:150:"Record ID|An automatically assigned number used to track the association of business continuity considerations with records throughout the application";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:16:"OrganizationLogo";O:9:"viewfield":16:{s:4:"name";s:16:"OrganizationLogo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Organization Logo|Displays the logo of the guidance organization";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"BusContConsiderTitle";O:9:"viewfield":16:{s:4:"name";s:20:"BusContConsiderTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:84:"Title|A short title or phrase used to describe the business continuity consideration";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:26:"BusContConsiderDescription";O:9:"viewfield":16:{s:4:"name";s:26:"BusContConsiderDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:196:"Consideration|A detailed description of the business continuity consideration and the manner in which the activity associated with the related record may be impacted by a business disruption event";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:20:"GuidanceOrganization";O:9:"viewfield":16:{s:4:"name";s:20:"GuidanceOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:120:"Guidance Provided By|A combined field used to describe the guidance organization when associating it with guidance types";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"GuidancePerson";O:9:"viewfield":16:{s:4:"name";s:14:"GuidancePerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Guidance Person|The individual providing guidance for consideration";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:4:"busc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:331:"SELECT 
    count(*) 
FROM `busc`
   
   LEFT OUTER JOIN `gui` AS gui1 
   ON (`busc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
 INNER JOIN `doc` AS `parent` ON `gui1`.RelatedRecordID = `parent`.DocumentTypeID
WHERE busc._Deleted = 0
   AND `gui1`.RelatedModuleID = \'doct\'
AND `parent`.DocumentID = \'/**RecordID**/\'
";s:7:"listSQL";s:1202:"SELECT 
   `busc`.BusContConsiderID,
`busc`.GuidanceOrganizationID,
NULLIF(CONCAT(\'<img src=\\"org/\',IFNULL(IFNULL(`org1`.GuidanceLogoName, \'transparent.gif\'),\'\'),\'\\" alt=\\"logo\\" />\'),\'<img src=\\\\\\"org/\\\\\\" alt=\\\\\\"logo\\\\\\" />\') AS OrganizationLogo,
`busc`.BusContConsiderTitle,
`busc`.BusContConsiderDescription,
NULLIF(CONCAT(IFNULL(`org2`.Name,\'\')),\'\') AS GuidanceOrganization,
`ppl1`.DisplayName AS GuidancePerson
FROM `busc`

   LEFT OUTER JOIN `gui` AS gui1 
   ON (`busc`.GuidanceOrganizationID = `gui1`.GuidanceOrganizationID )
   LEFT OUTER JOIN `org` AS org1 
   ON (`gui1`.OrganizationID = `org1`.OrganizationID )
   LEFT OUTER JOIN `org` AS org2 
   ON (`gui1`.OrganizationID = `org2`.OrganizationID )
   LEFT OUTER JOIN `acc` AS acc1 
    ON (`gui1`.GuidanceOrganizationID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = \'gui\'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = \'184\')
   LEFT OUTER JOIN `ppl` AS ppl1 
ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
 INNER JOIN `doc` AS `parent` ON `gui1`.RelatedRecordID = `parent`.DocumentTypeID
WHERE busc._Deleted = 0
AND `gui1`.RelatedModuleID = \'doct\'
AND `parent`.DocumentID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:15:"RelatedRecordID";s:9:"parentKey";N;s:8:"PKFields";N;s:13:"formatOptions";a:2:{s:13:"suppressTitle";b:1;s:19:"suppressRecordIcons";b:1;}s:10:"fieldTypes";a:6:{s:17:"BusContConsiderID";s:3:"int";s:16:"OrganizationLogo";N;s:20:"BusContConsiderTitle";s:12:"varchar(128)";s:26:"BusContConsiderDescription";s:4:"text";s:20:"GuidanceOrganization";N;s:14:"GuidancePerson";N;}s:4:"name";N;s:10:"fieldAlign";a:6:{s:17:"BusContConsiderID";s:5:"right";s:16:"OrganizationLogo";s:7:"justify";s:20:"BusContConsiderTitle";s:4:"left";s:26:"BusContConsiderDescription";s:7:"justify";s:20:"GuidanceOrganization";s:7:"justify";s:14:"GuidancePerson";s:4:"left";}}');


    $PKField = 'DocumentID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[2]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "AssetProtection";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `doc`.DocumentID,
   `doc`.DocumentTypeID,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   `cod1`.Description AS DocumentCategory,
   NULLIF(CONCAT(IFNULL(`doct1`.DocumentTypeName,'')),'') AS DocumentType,
   `doc`.DocumentTitle,
   `doc`.DocumentVersion,
   `doc`.DocumentDesc,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS ImmediacyUnits,
   `doc`.CompletionImmediacy,
   NULLIF(CONCAT(IFNULL(`uts2`.UnitName,'')),'') AS FrequencyUnits,
   `doc`.ReviewFrequency,
   `cod4`.Description AS DocumentStatus,
   `doc`.Attached,
   `doc`.RegulatoryRequired,
   NULLIF(CONCAT(IFNULL(`doc`.DocumentTitle,''),' | ',IFNULL(`org1`.Name,''),' | ',IFNULL(`ppl1`.DisplayName,'')),' |  | ') AS RecordLabel,
   `doc`.OrganizationID
FROM `doc`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`doc`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`doc`.DocumentID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'doc'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '25')
     LEFT OUTER JOIN `doct` AS doct1 
   ON (`doc`.DocumentTypeID = `doct1`.DocumentTypeID )
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`doc`.ImmediacyUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`doc`.FrequencyUnitsID = `uts2`.UnitID )
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`doc`.DocumentStatusID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '134')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`doct1`.DocumentCategoryID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '18')
WHERE
   doc.DocumentID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Documentation");
        $screenPhrase = gettext("Continuity|Associate business continuation requirements with the document");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Documentation");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'DocumentID' => gettext("Record ID|An automatically assigned number used to track documents and forms used by an organization"),
   'DocumentTypeID' => gettext("Document Type|A combined field used to describe this docte disposal type when associating it with other records"),
   'Organization' => gettext("Organization|The organization with primary responsibility for this documentation requirement"),
   'PersonAccountable' => gettext("Person Accountable|The individual assigned primary accountability for managing this document's format, use and compliance currency"),
   'DocumentCategory' => gettext("Category|A broad category used to group documentation of similar types"),
   'DocumentType' => gettext("Document Type|A combined field used to describe this docte disposal type when associating it with other records"),
   'DocumentTitle' => gettext("Document Title|The name of the document or form"),
   'DocumentVersion' => gettext("Current Version|A unique number or version title used by the document creator to track revisions and currency of the document"),
   'DocumentDesc' => gettext("Description|A detailed description of the document or form"),
   'CompletionImmediacy' => gettext("Complete Within|The amount of time which can pass before the document or form shall be completed following the occurrence of an event which requires documentation"),
   'ReviewFrequency' => gettext("Review Frequency|The amount of time which can pass before a document or form must be reviewed"),
   'DocumentStatus' => gettext("Status|Current status of the document or form"),
   'Attached' => gettext("Attached|Whether a digital example of the document has been attached to this record"),
   'RegulatoryRequired' => gettext("RegulatoryRequired|Whether the document is required by a regulatory agency")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Documentation"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Documentation") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about a form or document") );
      $tempTabs['Situations'] = array( "edit.php?scr=Situations&$tabsQS", gettext("Situations|Associate a form or document with situations requiring the document") );
      $tempTabs['Modules'] = array( "edit.php?scr=Modules&$tabsQS", gettext("Modules|Associate modules that are dependent upon the document") );
      $tempTabs['Recipients'] = array( "edit.php?scr=Recipients&$tabsQS", gettext("Recipients|Associate recipients with the document") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate general hazards with the document") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the document") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate consensus and compliance standards with the document") );
      $tempTabs['BusinessContinuation'] = array( "", gettext("Continuity|Associate business continuation requirements with the document") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate asset protection methods and criteria with the document") );
      $tempTabs['BusinessConsequences'] = array( "edit.php?scr=BusinessConsequences&$tabsQS", gettext("Consequences|Associate business consequences with the document") );
      $tempTabs['Suppliers'] = array( "edit.php?scr=Suppliers&$tabsQS", gettext("Suppliers|Associate suppliers with the document") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the document") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the document") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with the document") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with the document") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the document") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['BusinessContinuation'] = array( "", gettext("New Document") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>