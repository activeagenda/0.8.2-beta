<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:13:{s:16:"SystemChemicalID";O:9:"viewfield":16:{s:4:"name";s:16:"SystemChemicalID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"System Chemical ID|An automatically assigned number used to track chemicals associated with systems and processes";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"System Organization|The name of the organization where the system or process exists";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"System";O:9:"viewfield":16:{s:4:"name";s:6:"System";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"System|A combined field used to describe this system when associating it with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"SystemDesc";O:9:"viewfield":16:{s:4:"name";s:10:"SystemDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"System Decsription|A detailed description of the system or process";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:22:"ChemicalOrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:22:"ChemicalOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"LocationID";a:1:{s:4:"name";s:10:"LocationID";}}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:10:"LocationID";O:10:"combofield":26:{s:4:"name";s:10:"LocationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgl";s:10:"foreignKey";s:10:"LocationID";s:12:"foreignField";s:8:"Location";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:371:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE orgl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:369:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `orgl`.LocationID = \'/*recordID*/\'";s:11:"parentField";s:22:"ChemicalOrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:19:"ChemicalInventoryID";a:1:{s:4:"name";s:19:"ChemicalInventoryID";}}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`orgl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:19:"ChemicalInventoryID";O:10:"combofield":26:{s:4:"name";s:19:"ChemicalInventoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"chmin";s:10:"foreignKey";s:19:"ChemicalInventoryID";s:12:"foreignField";s:17:"ChemicalInventory";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:789:"SELECT 
`chmin`.ChemicalInventoryID AS ID, NULLIF(CONCAT(IFNULL(`chm1`.CommonName,\'\'),\' | \',IFNULL(NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\'),\'\')),\' | \') AS Name, `orgla1`.LocationID AS ParentID FROM `chmin`
 
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`chmin`.ChemicalInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'chmin\'
     AND `orgla1`._Deleted = 0)
 LEFT OUTER JOIN `chm` AS chm1 
   ON (`chmin`.ChemicalID = `chm1`.ChemicalID )
 LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE chmin._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:796:"SELECT 
`chmin`.ChemicalInventoryID AS ID, NULLIF(CONCAT(IFNULL(`chm1`.CommonName,\'\'),\' | \',IFNULL(NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),\'\'),\'\')),\' | \') AS Name, `orgla1`.LocationID AS ParentID FROM `chmin`
 
 LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`chmin`.ChemicalInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = \'chmin\'
     AND `orgla1`._Deleted = 0)
 LEFT OUTER JOIN `chm` AS chm1 
   ON (`chmin`.ChemicalID = `chm1`.ChemicalID )
 LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `chmin`.ChemicalInventoryID = \'/*recordID*/\'";s:11:"parentField";s:10:"LocationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:30:"`chmin`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:10:"MatClassID";O:14:"codecombofield":27:{s:4:"name";s:10:"MatClassID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'189\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'189\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"189";}s:14:"EmissionTypeID";O:14:"codecombofield":27:{s:4:"name";s:14:"EmissionTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'144\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'144\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"144";}s:11:"DailyVolume";O:9:"editfield":14:{s:4:"name";s:11:"DailyVolume";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:25:"DVWeightVolUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:25:"DVWeightVolUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:18:"DVWeightVolUnitsID";a:1:{s:4:"name";s:18:"DVWeightVolUnitsID";}}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:18:"DVWeightVolUnitsID";O:10:"combofield":26:{s:4:"name";s:18:"DVWeightVolUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:25:"DVWeightVolUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:6:"Number";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:12:"EmissionConc";O:9:"editfield":14:{s:4:"name";s:12:"EmissionConc";s:10:"parentName";N;s:6:"Fields";a:1:{s:20:"ConcentrationUnitsID";O:14:"codecombofield":27:{s:4:"name";s:20:"ConcentrationUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'34\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'34\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"34";}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:6:"Number";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"10";s:9:"maxLength";s:2:"10";s:5:"align";s:4:"left";}s:17:"EmissionsEstimate";O:9:"editfield":14:{s:4:"name";s:17:"EmissionsEstimate";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:25:"EEWeightVolUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:25:"EEWeightVolUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:18:"EEWeightVolUnitsID";a:1:{s:4:"name";s:18:"EEWeightVolUnitsID";}}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:18:"EEWeightVolUnitsID";O:10:"combofield":26:{s:4:"name";s:18:"EEWeightVolUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:25:"EEWeightVolUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:6:"Number";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:13:"ReleasePeriod";O:9:"editfield":14:{s:4:"name";s:13:"ReleasePeriod";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:23:"RelPeriodUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:23:"RelPeriodUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:16:"RelPeriodUnitsID";a:1:{s:4:"name";s:16:"RelPeriodUnitsID";}}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:16:"RelPeriodUnitsID";O:10:"combofield":26:{s:4:"name";s:16:"RelPeriodUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:23:"RelPeriodUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:5:"sysch";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:6:"Number";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}}');

$hasEditableFields = true;


$singularRecordName = gettext("System Chemical");

//field value array
$data = array(
        'SystemChemicalID' => '',
         'Organization' => '',
         'System' => '',
         'SystemDesc' => '',
         'ChemicalOrganizationID' => '',
         'LocationID' => '',
         'ChemicalInventoryID' => '',
         'MatClassID' => '',
         'EmissionTypeID' => '',
         'DVWeightVolUnitCategoryID' => '',
         'DVWeightVolUnitsID' => '',
         'DailyVolume' => '',
         'ConcentrationUnitsID' => '',
         'EmissionConc' => '',
         'EEWeightVolUnitCategoryID' => '',
         'EEWeightVolUnitsID' => '',
         'EmissionsEstimate' => '',
         'RelPeriodUnitCategoryID' => '',
         'RelPeriodUnitsID' => '',
         'ReleasePeriod' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'SystemChemicalID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `sysch`.SystemChemicalID,
   `org1`.Name AS Organization,
   `sys1`.SystemName AS System,
   `sys1`.SystemDesc AS SystemDesc,
   `org2`.Name AS ChemicalOrganization,
   `chmin1`.OrganizationID AS ChemicalOrganizationID,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS Location,
   `orgla1`.LocationID AS LocationID,
   NULLIF(CONCAT(IFNULL(`chm1`.CommonName,''),' | ',IFNULL(NULLIF(CONCAT_WS(', ',`bui2`.BuildingName,`buir2`.RoomName,`orgl2`.LocationName),''),'')),' | ') AS ChemicalInventory,
   `sysch`.ChemicalInventoryID,
   `cod1`.Description AS MatClass,
   `sysch`.MatClassID,
   `cod3`.Description AS EmissionType,
   `sysch`.EmissionTypeID,
   `cod2`.Description AS DVWeightVolUnitCategory,
   `uts1`.UnitCategoryID AS DVWeightVolUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS DVWeightVolUnits,
   `sysch`.DVWeightVolUnitsID,
   `sysch`.DailyVolume,
   `cod4`.Description AS ConcentrationUnits,
   `sysch`.ConcentrationUnitsID,
   `sysch`.EmissionConc,
   `cod5`.Description AS EEWeightVolUnitCategory,
   `uts2`.UnitCategoryID AS EEWeightVolUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts2`.UnitName,'')),'') AS EEWeightVolUnits,
   `sysch`.EEWeightVolUnitsID,
   `sysch`.EmissionsEstimate,
   `cod6`.Description AS RelPeriodUnitCategory,
   `uts3`.UnitCategoryID AS RelPeriodUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts3`.UnitName,'')),'') AS RelPeriodUnits,
   `sysch`.RelPeriodUnitsID,
   `sysch`.ReleasePeriod,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`chm1`.CommonName,''),' | ',IFNULL(NULLIF(CONCAT_WS(', ',`bui2`.BuildingName,`buir2`.RoomName,`orgl2`.LocationName),''),'')),' | '),''),' | ',IFNULL(`sys1`.SystemName,''),' | ',IFNULL(`org1`.Name,'')),' |  | ') AS RecordLabel,
   `sys1`.OrganizationID AS OrganizationID
FROM `sysch`
   
     LEFT OUTER JOIN `sys` AS sys1 
   ON (`sysch`.SystemID = `sys1`.SystemID )
     LEFT OUTER JOIN `chmin` AS chmin1 
   ON (`sysch`.ChemicalInventoryID = `chmin1`.ChemicalInventoryID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`sysch`.MatClassID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '189')
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`sysch`.EmissionTypeID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '144')
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`sysch`.DVWeightVolUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`sysch`.ConcentrationUnitsID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '34')
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`sysch`.EEWeightVolUnitsID = `uts2`.UnitID )
     LEFT OUTER JOIN `uts` AS uts3 
   ON (`sysch`.RelPeriodUnitsID = `uts3`.UnitID )
     LEFT OUTER JOIN `org` AS org1 
   ON (`sys1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `org` AS org2 
   ON (`chmin1`.OrganizationID = `org2`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`chmin1`.ChemicalInventoryID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'chmin'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `orgl` AS orgl1 
ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `chm` AS chm1 
   ON (`chmin1`.ChemicalID = `chm1`.ChemicalID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`uts1`.UnitCategoryID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '37')
     LEFT OUTER JOIN `cod` AS cod5 
   ON (`uts2`.UnitCategoryID = `cod5`.CodeID 
     AND `cod5`.CodeTypeID = '37')
     LEFT OUTER JOIN `cod` AS cod6 
   ON (`uts3`.UnitCategoryID = `cod6`.CodeID 
     AND `cod6`.CodeTypeID = '37')
     LEFT OUTER JOIN `orgl` AS orgl2 
   ON (`orgla1`.LocationID = `orgl2`.LocationID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `buir` AS buir2 
   ON (`orgl2`.RoomID = `buir2`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
     LEFT OUTER JOIN `bui` AS bui2 
   ON (`buir2`.BuildingID = `bui2`.BuildingID )
WHERE
   sysch.SystemChemicalID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("System Chemical");
        $screenPhrase = gettext("Form|Edit summary information about a chemical, chemical amount, and emission estimate, associated with a system or process");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("System Chemicals");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'SystemChemicalID' => gettext("System Chemical ID|An automatically assigned number used to track chemicals associated with systems and processes"),
   'Organization' => gettext("System Organization|The name of the organization where the system or process exists"),
   'System' => gettext("System|A combined field used to describe this system when associating it with other records"),
   'SystemDesc' => gettext("System Decsription|A detailed description of the system or process"),
   'ChemicalOrganizationID' => gettext("Chemical Organization|The organization with primary responsibility for this record. Access to this record can be restricted to those users directly associated with the same organization"),
   'LocationID' => gettext("Location|Specific location within the facility where the chemical is present or the emissions occur"),
   'ChemicalInventoryID' => gettext("Chemical|A combined field used to describe this chemical when associating it with other records"),
   'MatClassID' => gettext("Material Classification|The classification associated with releases of this type of material. Material classifications are typically assigned by regulatory agencies"),
   'EmissionTypeID' => gettext("Emission Type|The potential type of emission from the system or process"),
   'DailyVolume' => gettext("Daily Process Volume|The estimated daily chemical use volume associated with this equipment system or process"),
   'EmissionConc' => gettext("Concentration|The concentration of material potentially emitted from this system or process"),
   'EmissionsEstimate' => gettext("Emissions Estimate|The volume of material potentially emitted from this system or process"),
   'ReleasePeriod' => gettext("Release Period|The period of time used to quantify potential emission rates")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['ChemicalInventoryID'], ShortPhrase($phrases['ChemicalInventoryID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ChemicalInventoryID']->invalid = TRUE;
            }
$vMsg = Validate($data['MatClassID'], ShortPhrase($phrases['MatClassID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MatClassID']->invalid = TRUE;
            }
$vMsg = Validate($data['EmissionTypeID'], ShortPhrase($phrases['EmissionTypeID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['EmissionTypeID']->invalid = TRUE;
            }
$vMsg = Validate($data['DailyVolume'], ShortPhrase($phrases['DailyVolume']), 'Number');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['DailyVolume']->invalid = TRUE;
            }
$vMsg = Validate($data['EmissionConc'], ShortPhrase($phrases['EmissionConc']), 'Number');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['EmissionConc']->invalid = TRUE;
            }
$vMsg = Validate($data['EmissionsEstimate'], ShortPhrase($phrases['EmissionsEstimate']), 'Number');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['EmissionsEstimate']->invalid = TRUE;
            }
$vMsg = Validate($data['ReleasePeriod'], ShortPhrase($phrases['ReleasePeriod']), 'Number');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ReleasePeriod']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of System Chemicals"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a System Chemical") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about a chemical, chemical amount, and emission estimate, associated with a system or process") );
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New System Chemical") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>