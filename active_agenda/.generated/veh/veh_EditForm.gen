<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:16:{s:9:"VehicleID";O:9:"viewfield":16:{s:4:"name";s:9:"VehicleID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:78:"Record ID|An automatically assigned number used to track vehicles of all types";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"OwnerID";O:13:"orgcombofield":26:{s:4:"name";s:7:"OwnerID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:13:"VehicleTypeID";O:10:"combofield":26:{s:4:"name";s:13:"VehicleTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"veht";s:10:"foreignKey";s:13:"VehicleTypeID";s:12:"foreignField";s:11:"VehicleType";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:152:"SELECT 
`veht`.VehicleTypeID AS ID, NULLIF(CONCAT(IFNULL(`veht`.VehicleTypeName,\'\')),\'\') AS Name FROM `veht`
WHERE veht._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:153:"SELECT 
`veht`.VehicleTypeID AS ID, NULLIF(CONCAT(IFNULL(`veht`.VehicleTypeName,\'\')),\'\') AS Name FROM `veht`

WHERE `veht`.VehicleTypeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:22:"AssignedOrganizationID";O:10:"combofield":26:{s:4:"name";s:22:"AssignedOrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:10:"LocationID";a:1:{s:4:"name";s:10:"LocationID";}}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:10:"LocationID";O:10:"combofield":26:{s:4:"name";s:10:"LocationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgl";s:10:"foreignKey";s:10:"LocationID";s:12:"foreignField";s:8:"Location";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:371:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE orgl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:369:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `orgl`.LocationID = \'/*recordID*/\'";s:11:"parentField";s:22:"AssignedOrganizationID";s:21:"parentListModuleField";s:14:"OrganizationID";s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`orgl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:7:"VehYear";O:9:"editfield":14:{s:4:"name";s:7:"VehYear";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(50)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"25";s:9:"maxLength";s:2:"25";s:5:"align";s:4:"left";}s:14:"VehicleModelID";O:10:"combofield":26:{s:4:"name";s:14:"VehicleModelID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"vehmd";s:10:"foreignKey";s:14:"VehicleModelID";s:12:"foreignField";s:12:"VehicleModel";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:331:"SELECT 
`vehmd`.VehicleModelID AS ID, NULLIF(CONCAT(IFNULL(`cod1`.Description,\'\'),\' \',IFNULL(`vehmd`.VehModel,\'\'),\' \',IFNULL(`vehmd`.VehModelNo,\'\')),\'  \') AS Name FROM `vehmd`
 
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`vehmd`.VehMakeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'29\')
WHERE vehmd._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:333:"SELECT 
`vehmd`.VehicleModelID AS ID, NULLIF(CONCAT(IFNULL(`cod1`.Description,\'\'),\' \',IFNULL(`vehmd`.VehModel,\'\'),\' \',IFNULL(`vehmd`.VehModelNo,\'\')),\'  \') AS Name FROM `vehmd`
 
 LEFT OUTER JOIN `cod` AS cod1 
   ON (`vehmd`.VehMakeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = \'29\')

WHERE `vehmd`.VehicleModelID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:7:"VehBody";O:9:"memofield":15:{s:4:"name";s:7:"VehBody";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:18:"VehOperationTypeID";O:14:"codecombofield":27:{s:4:"name";s:18:"VehOperationTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'252\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'252\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"252";}s:10:"VehColorID";O:14:"codecombofield":27:{s:4:"name";s:10:"VehColorID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'249\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'249\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"249";}s:13:"VehFuelTypeID";O:14:"codecombofield":27:{s:4:"name";s:13:"VehFuelTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'250\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'250\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"250";}s:7:"VehLoad";O:9:"editfield":14:{s:4:"name";s:7:"VehLoad";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:21:"VehLoadUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:21:"VehLoadUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:14:"VehLoadUnitsID";a:1:{s:4:"name";s:14:"VehLoadUnitsID";}}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"VehLoadUnitsID";O:10:"combofield":26:{s:4:"name";s:14:"VehLoadUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:21:"VehLoadUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:9:"VehWeight";O:9:"editfield":14:{s:4:"name";s:9:"VehWeight";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:23:"VehWeightUnitCategoryID";O:10:"combofield":26:{s:4:"name";s:23:"VehWeightUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:130:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 ORDER BY Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:16:"VehWeightUnitsID";a:1:{s:4:"name";s:16:"VehWeightUnitsID";}}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:16:"VehWeightUnitsID";O:10:"combofield":26:{s:4:"name";s:16:"VehWeightUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:23:"VehWeightUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"veh";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:5:"float";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:7:"VehDesc";O:9:"memofield":15:{s:4:"name";s:7:"VehDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:8:"VehValue";O:10:"moneyfield":18:{s:4:"name";s:8:"VehValue";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:5:"money";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";N;s:9:"maxLength";N;s:5:"align";s:4:"left";s:16:"localAmountField";N;s:20:"localCurrencyIDField";N;s:14:"conditionField";N;s:14:"conditionValue";N;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Vehicle");

//field value array
$data = array(
        'VehicleID' => '',
         'OwnerID' => '',
         'VehicleTypeID' => '',
         'PersonAccountableID' => '',
         'AssignedOrganizationID' => '',
         'LocationID' => '',
         'VehYear' => '',
         'VehicleModelID' => '',
         'VehBody' => '',
         'VehOperationTypeID' => '',
         'VehColorID' => '',
         'VehFuelTypeID' => '',
         'VehLoadUnitCategoryID' => '',
         'VehLoadUnitsID' => '',
         'VehLoad' => '',
         'VehWeightUnitCategoryID' => '',
         'VehWeightUnitsID' => '',
         'VehWeight' => '',
         'VehDesc' => '',
         'VehValue' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'VehicleID';

    $ownerField = 'AssignedOrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Numbers";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `veh`.VehicleID,
   `org2`.Name AS Owner,
   `veh`.OwnerID,
   NULLIF(CONCAT(IFNULL(`veht1`.VehicleTypeName,'')),'') AS VehicleType,
   `veh`.VehicleTypeID,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `org1`.Name AS AssignedOrganization,
   `veh`.AssignedOrganizationID,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS Location,
   `orgla1`.LocationID AS LocationID,
   `veh`.VehYear,
   NULLIF(CONCAT(IFNULL(`cod1`.Description,''),' ',IFNULL(`vehmd1`.VehModel,''),' ',IFNULL(`vehmd1`.VehModelNo,'')),'  ') AS VehicleModel,
   `veh`.VehicleModelID,
   `veh`.VehBody,
   `cod2`.Description AS VehOperationType,
   `veh`.VehOperationTypeID,
   `cod3`.Description AS VehColor,
   `veh`.VehColorID,
   `cod4`.Description AS VehFuelType,
   `veh`.VehFuelTypeID,
   `cod5`.Description AS VehLoadUnitCategory,
   `uts1`.UnitCategoryID AS VehLoadUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS VehLoadUnits,
   `veh`.VehLoadUnitsID,
   `veh`.VehLoad,
   `cod6`.Description AS VehWeightUnitCategory,
   `uts2`.UnitCategoryID AS VehWeightUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts2`.UnitName,'')),'') AS VehWeightUnits,
   `veh`.VehWeightUnitsID,
   `veh`.VehWeight,
   `veh`.VehDesc,
   `veh`.VehValue,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`cod1`.Description,''),' ',IFNULL(`vehmd1`.VehModel,''),' ',IFNULL(`vehmd1`.VehModelNo,'')),'  '),''),' | ',IFNULL(`veh`.VehLicenseNo,''),' | ',IFNULL(`org1`.Name,'')),' |  | ') AS RecordLabel
FROM `veh`
   
     LEFT OUTER JOIN `org` AS org2 
   ON (`veh`.OwnerID = `org2`.OrganizationID )
     LEFT OUTER JOIN `veht` AS veht1 
   ON (`veh`.VehicleTypeID = `veht1`.VehicleTypeID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`veh`.VehicleID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'veh'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '89')
     LEFT OUTER JOIN `org` AS org1 
   ON (`veh`.AssignedOrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`veh`.VehicleID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'veh'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `vehmd` AS vehmd1 
   ON (`veh`.VehicleModelID = `vehmd1`.VehicleModelID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`veh`.VehOperationTypeID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '252')
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`veh`.VehColorID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '249')
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`veh`.VehFuelTypeID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '250')
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`veh`.VehLoadUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `uts` AS uts2 
   ON (`veh`.VehWeightUnitsID = `uts2`.UnitID )
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`vehmd1`.VehMakeID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '29')
     LEFT OUTER JOIN `cod` AS cod5 
   ON (`uts1`.UnitCategoryID = `cod5`.CodeID 
     AND `cod5`.CodeTypeID = '37')
     LEFT OUTER JOIN `cod` AS cod6 
   ON (`uts2`.UnitCategoryID = `cod6`.CodeID 
     AND `cod6`.CodeTypeID = '37')
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   veh.VehicleID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Vehicle");
        $screenPhrase = gettext("Form|Edit summary information about a vehicle");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Vehicles");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'VehicleID' => gettext("Record ID|An automatically assigned number used to track vehicles of all types"),
   'OwnerID' => gettext("Owner|The name of the organization the vehicle is registered to"),
   'VehicleTypeID' => gettext("Vehicle Type|A combined field used to describe this vehicle type when associating it with other records"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for managing this vehicle"),
   'AssignedOrganizationID' => gettext("Assigned Organization|The name of the local organization assigned to, and responsible for, this vehicle"),
   'LocationID' => gettext("Location|Specific location within the facility where the vehicle is located during business hours"),
   'VehYear' => gettext("Year|The year the vehicle was manufactured"),
   'VehicleModelID' => gettext("Vehicle Model|A combined field used to associate this vehicle model with another record"),
   'VehBody' => gettext("Vehicle Body|A brief description of this vehicle body for identification purposes"),
   'VehOperationTypeID' => gettext("Operation Type|The type of operation performed for the organization by the vehicle"),
   'VehColorID' => gettext("Color|The color of the vehicle"),
   'VehFuelTypeID' => gettext("Fuel Type|The type of fuel required for operation of the vehicle"),
   'VehLoad' => gettext("Load Capacity|The maximum weight the vehicle is capable of carrying"),
   'VehWeight' => gettext("Unladen Weight|The weight of the vehicle without any load"),
   'VehDesc' => gettext("Vehicle Decsription|A brief description of the vehicle and any special factors needing to be tracked"),
   'VehValue' => gettext("Vehicle Value|The present estimated value of the vehicle stated in the currency established for this site installation of the software")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['OwnerID'], ShortPhrase($phrases['OwnerID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['OwnerID']->invalid = TRUE;
            }
$vMsg = Validate($data['VehicleTypeID'], ShortPhrase($phrases['VehicleTypeID']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehicleTypeID']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['AssignedOrganizationID'], ShortPhrase($phrases['AssignedOrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['AssignedOrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['LocationID'], ShortPhrase($phrases['LocationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['LocationID']->invalid = TRUE;
            }
$vMsg = Validate($data['VehYear'], ShortPhrase($phrases['VehYear']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehYear']->invalid = TRUE;
            }
$vMsg = Validate($data['VehicleModelID'], ShortPhrase($phrases['VehicleModelID']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehicleModelID']->invalid = TRUE;
            }
$vMsg = Validate($data['VehBody'], ShortPhrase($phrases['VehBody']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehBody']->invalid = TRUE;
            }
$vMsg = Validate($data['VehOperationTypeID'], ShortPhrase($phrases['VehOperationTypeID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehOperationTypeID']->invalid = TRUE;
            }
$vMsg = Validate($data['VehColorID'], ShortPhrase($phrases['VehColorID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehColorID']->invalid = TRUE;
            }
$vMsg = Validate($data['VehFuelTypeID'], ShortPhrase($phrases['VehFuelTypeID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehFuelTypeID']->invalid = TRUE;
            }
$vMsg = Validate($data['VehLoad'], ShortPhrase($phrases['VehLoad']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehLoad']->invalid = TRUE;
            }
$vMsg = Validate($data['VehWeight'], ShortPhrase($phrases['VehWeight']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehWeight']->invalid = TRUE;
            }
$vMsg = Validate($data['VehDesc'], ShortPhrase($phrases['VehDesc']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehDesc']->invalid = TRUE;
            }
$vMsg = Validate($data['VehValue'], ShortPhrase($phrases['VehValue']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['VehValue']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Vehicles"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Vehicle") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about a vehicle") );
      $tempTabs['Numbers'] = array( "edit.php?scr=Numbers&$tabsQS", gettext("Numbers|Associate tracking numbers with a vehicle") );
      $tempTabs['License'] = array( "edit.php?scr=License&$tabsQS", gettext("License|Edit license and registration information for a vehicle") );
      $tempTabs['Assignments'] = array( "edit.php?scr=Assignments&$tabsQS", gettext("Assignments|Assign vehicle operators to the vehicle") );
      $tempTabs['Odometer'] = array( "edit.php?scr=Odometer&$tabsQS", gettext("Odometer|Associate odometer readings with the vehicle") );
      $tempTabs['Equipment'] = array( "edit.php?scr=Equipment&$tabsQS", gettext("Equipment|Associate equipment with the vehicle") );
      $tempTabs['AssetProtection'] = array( "edit.php?scr=AssetProtection&$tabsQS", gettext("Audits|Associate audit requirements with the vehicle") );
      $tempTabs['CostExposures'] = array( "edit.php?scr=CostExposures&$tabsQS", gettext("Exposures|Associate cost exposures with the vehicle") );
      $tempTabs['Opportunities'] = array( "edit.php?scr=Opportunities&$tabsQS", gettext("Opportunities|Associate financial opportunities with the vehicle") );
      $tempTabs['Hazards'] = array( "edit.php?scr=Hazards&$tabsQS", gettext("Hazards|Associate hazards with the vehicle") );
      $tempTabs['Regulations'] = array( "edit.php?scr=Regulations&$tabsQS", gettext("Regulations|Associate regulations with the vehicle") );
      $tempTabs['Standards'] = array( "edit.php?scr=Standards&$tabsQS", gettext("Standards|Associate standards with the vehicle") );
      $tempTabs['BusinessContinuation'] = array( "edit.php?scr=BusinessContinuation&$tabsQS", gettext("Continuity|Associate business continuation requirements with the vehicle") );
      $tempTabs['Permits'] = array( "edit.php?scr=Permits&$tabsQS", gettext("Permits|Associate operating permits with the vehicle") );
      $tempTabs['Insurance'] = array( "edit.php?scr=Insurance&$tabsQS", gettext("Insurance|Associate insurance policies with the vehicle") );
      $tempTabs['Agreements'] = array( "edit.php?scr=Agreements&$tabsQS", gettext("Agreements|Associate business agreements and/or contracts with the vehicle") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities for the vehicle") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the vehicle") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate physical files and retention methods with the vehicle") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the vehicle") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Vehicle") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>