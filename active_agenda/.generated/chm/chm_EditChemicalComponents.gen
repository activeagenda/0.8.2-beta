<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:7:{s:10:"ChemicalID";O:9:"viewfield":16:{s:4:"name";s:10:"ChemicalID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:250:"Record ID|An automatically assigned number used to track chemicals used by the organization. This number can also used as an internal tracking number for documents; such as: Material Safety Data Sheets, manufacturer labels, waste profile sheets, etc.";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"CommonName";O:9:"viewfield":16:{s:4:"name";s:10:"CommonName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:235:"Common Name|A common name assigned to a chemical by the organization using it. Common names are more easily recognized than chemical names and can include code names used by an organization to quickly and accurately identify a chemical";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"ChemicalName";O:9:"viewfield":16:{s:4:"name";s:12:"ChemicalName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Chemical Name|The technical name for a chemical";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"CASNumber";O:9:"viewfield":16:{s:4:"name";s:9:"CASNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:168:"CAS Number|Chemical Abstracts Service Registry Number. CAS Registry Numbers (often referred to as CAS RNs or CAS Numbers) are unique identifiers for chemical substances";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Manufacturer";O:9:"viewfield":16:{s:4:"name";s:12:"Manufacturer";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:57:"Manufacturer|The name of the manufacturer of the chemical";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"MSDSAvailable";O:9:"viewfield":16:{s:4:"name";s:13:"MSDSAvailable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:234:"Material Safety Data Sheet|Whether a material safety data sheet is available for this chemical and is attached to the record or has a Material Safety Data Sheet (MSDS) Internet Uniform Resource Locater (URL - Internet address) entered";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"ExposureRoutes";O:9:"viewfield":16:{s:4:"name";s:14:"ExposureRoutes";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Routes of Exposure|The specific routes of exposure associated with the chemical";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}}');

$hasEditableFields = false;


$singularRecordName = gettext("Chemical");

//field value array
$data = array(
        'ChemicalID' => '',
         'CommonName' => '',
         'ChemicalName' => '',
         'CASNumber' => '',
         'Manufacturer' => '',
         'MSDSAvailable' => '',
         'ExposureRoutes' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:170:"SELECT 
   `chmco`.ChemCompID,
   `chmco`.ChemCompName,
   `chmco`.ComponentCASNumber,
   `chmco`.PercentByWeight
FROM `chmco`
   
WHERE
   chmco.ChemCompID=\'/**RowID**/\'";s:9:"getRowSQL";s:147:"SELECT 
   `chmco`.ChemCompName,
   `chmco`.ComponentCASNumber,
   `chmco`.PercentByWeight
FROM `chmco`
   
WHERE
   chmco.ChemCompID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:4:{s:10:"ChemCompID";O:14:"invisiblefield":11:{s:4:"name";s:10:"ChemCompID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:113:"Component ID|A unique number assigned to chemical components which is used to associate components with chemicals";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"chmco";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:12:"ChemCompName";O:9:"editfield":14:{s:4:"name";s:12:"ChemCompName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:73:"Component Name|The name of one of the chemical components of the chemical";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:5:"chmco";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:2:"75";s:5:"align";s:4:"left";}s:18:"ComponentCASNumber";O:9:"editfield":14:{s:4:"name";s:18:"ComponentCASNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:168:"CAS Number|Chemical Abstracts Service Registry Number. CAS Registry Numbers (often referred to as CAS RNs or CAS Numbers) are unique identifiers for chemical substances";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:5:"chmco";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:2:"75";s:5:"align";s:4:"left";}s:15:"PercentByWeight";O:9:"editfield":14:{s:4:"name";s:15:"PercentByWeight";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Percent By Weight (%)|The percent of the chemical which is comprised of the component";s:8:"dataType";s:3:"int";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:5:"chmco";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";N;s:5:"align";s:4:"left";}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:10:"ChemCompID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:5:"chmco";s:6:"phrase";s:19:"Chemical Components";s:6:"number";i:1;s:6:"Fields";a:3:{s:12:"ChemCompName";O:9:"viewfield":16:{s:4:"name";s:12:"ChemCompName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:73:"Component Name|The name of one of the chemical components of the chemical";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"chmco";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:18:"ComponentCASNumber";O:9:"viewfield":16:{s:4:"name";s:18:"ComponentCASNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:168:"CAS Number|Chemical Abstracts Service Registry Number. CAS Registry Numbers (often referred to as CAS RNs or CAS Numbers) are unique identifiers for chemical substances";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"chmco";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:15:"PercentByWeight";O:9:"viewfield":16:{s:4:"name";s:15:"PercentByWeight";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Percent By Weight (%)|The percent of the chemical which is comprised of the component";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"chmco";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:109:"SELECT 
    count(*) 
FROM `chmco`
   
WHERE chmco._Deleted = 0
   AND `chmco`.ChemicalID = \'/**RecordID**/\'
";s:7:"listSQL";s:187:"SELECT 
   `chmco`.ChemCompID,
`chmco`.ChemCompName,
`chmco`.ComponentCASNumber,
`chmco`.PercentByWeight
FROM `chmco`

WHERE chmco._Deleted = 0
AND `chmco`.ChemicalID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:10:"ChemicalID";s:9:"parentKey";s:10:"ChemicalID";s:8:"PKFields";a:1:{i:0;s:10:"ChemCompID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');


    /**guidanceGrid**/

    $PKField = 'ChemicalID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "ChemicalTypes";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `chm`.ChemicalID,
   `chm`.CommonName,
   `chm`.ChemicalName,
   `chm`.CASNumber,
   `org2`.Name AS Manufacturer,
   `chm`.MSDSAvailable,
   `chmer1`.ExposureRoutes AS ExposureRoutes,
   NULLIF(CONCAT(IFNULL(`chm`.CommonName,''),' | ',IFNULL(`chm`.ChemicalName,''),' | CAS: ',IFNULL(`chm`.CASNumber,'')),' |  | CAS: ') AS RecordLabel,
   `chm`.OrganizationID
FROM `chm`
   
     LEFT OUTER JOIN `org` AS org2 
   ON (`chm`.ManufacturerID = `org2`.OrganizationID )
     LEFT OUTER JOIN (SELECT 
GROUP_CONCAT(`cod1`.Description ORDER BY `cod1`.Description SEPARATOR ', ') AS ExposureRoutes,
`chmer`.ChemicalID FROM `chmer` 

LEFT OUTER JOIN `cod` AS cod1 
   ON (`chmer`.ChemicalExposureRouteID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '35')
 WHERE `chmer`._Deleted = 0 
GROUP BY `chmer`.ChemicalID 
) AS chmer1 
ON (`chm`.ChemicalID = chmer1.ChemicalID) 
WHERE
   chm.ChemicalID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Chemical");
        $screenPhrase = gettext("Components|Associate chemical components with the chemical");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Chemicals");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'ChemicalID' => gettext("Record ID|An automatically assigned number used to track chemicals used by the organization. This number can also used as an internal tracking number for documents; such as: Material Safety Data Sheets, manufacturer labels, waste profile sheets, etc."),
   'CommonName' => gettext("Common Name|A common name assigned to a chemical by the organization using it. Common names are more easily recognized than chemical names and can include code names used by an organization to quickly and accurately identify a chemical"),
   'ChemicalName' => gettext("Chemical Name|The technical name for a chemical"),
   'CASNumber' => gettext("CAS Number|Chemical Abstracts Service Registry Number. CAS Registry Numbers (often referred to as CAS RNs or CAS Numbers) are unique identifiers for chemical substances"),
   'Manufacturer' => gettext("Manufacturer|The name of the manufacturer of the chemical"),
   'MSDSAvailable' => gettext("Material Safety Data Sheet|Whether a material safety data sheet is available for this chemical and is attached to the record or has a Material Safety Data Sheet (MSDS) Internet Uniform Resource Locater (URL - Internet address) entered"),
   'ExposureRoutes' => gettext("Routes of Exposure|The specific routes of exposure associated with the chemical")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**-remove_begin-**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        


        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**-remove_end-**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Chemicals"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Chemical") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit basic information about a chemical") );
      $tempTabs['ExposureRoutes'] = array( "edit.php?scr=ExposureRoutes&$tabsQS", gettext("Routes|Associate routes of chemical exposure") );
      $tempTabs['SpecialCharacteristics'] = array( "edit.php?scr=SpecialCharacteristics&$tabsQS", gettext("Special|Edit the special characteristics of a chemical") );
      $tempTabs['PlacardRequirements'] = array( "edit.php?scr=PlacardRequirements&$tabsQS", gettext("Placard|Edit placarding requirements associated with a chemical") );
      $tempTabs['Guidance'] = array( "edit.php?scr=Guidance&$tabsQS", gettext("Guidance|Associate guidance organizations with the chemical") );
      $tempTabs['HazardClassifications'] = array( "edit.php?scr=HazardClassifications&$tabsQS", gettext("Classifications|Associate hazard classifications with the chemical ") );
      $tempTabs['PackagingEquivalents'] = array( "edit.php?scr=PackagingEquivalents&$tabsQS", gettext("Equivalents|Associate packaging unit equivalents with the chemical") );
      $tempTabs['ChemicalInventory'] = array( "edit.php?scr=ChemicalInventory&$tabsQS", gettext("Inventory|Associate inventory levels with the chemical") );
      $tempTabs['ChemicalComponents'] = array( "", gettext("Components|Associate chemical components with the chemical") );
      $tempTabs['ChemicalTypes'] = array( "edit.php?scr=ChemicalTypes&$tabsQS", gettext("Types|Associate chemical categories and types with the chemical") );
      $tempTabs['HandlingDefaults'] = array( "edit.php?scr=HandlingDefaults&$tabsQS", gettext("Handling|Generate a default chemical handling procedure which can be adopted by others and/or modified to reflect local requirements") );
      $tempTabs['HandlingProcedures'] = array( "edit.php?scr=HandlingProcedures&$tabsQS", gettext("Procedures|Assign a chemical handling procedure to an organization and the chemical") );
      $tempTabs['ChemicalPhrases'] = array( "edit.php?scr=ChemicalPhrases&$tabsQS", gettext("Phrases|Associate one or more chemical risk or safety phrases with the chemical") );
      $tempTabs['ThresholdValues'] = array( "edit.php?scr=ThresholdValues&$tabsQS", gettext("Thresholds|Associate threshold limits values with the chemical") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the chemical") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the chemical") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with a physical chemical file") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the chemical") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['ChemicalComponents'] = array( "", gettext("New Chemical") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>