<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:25:{s:10:"ChemicalID";O:9:"viewfield":16:{s:4:"name";s:10:"ChemicalID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:250:"Record ID|An automatically assigned number used to track chemicals used by the organization. This number can also used as an internal tracking number for documents; such as: Material Safety Data Sheets, manufacturer labels, waste profile sheets, etc.";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:1:{s:11:"Participant";O:13:"listcondition":3:{s:4:"name";s:11:"Participant";s:4:"mode";s:6:"equals";s:6:"values";a:1:{i:0;s:4:"true";}}}s:3:"SQL";s:138:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 AND `org`.Participant = true
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"chm";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:19:"PersonAccountableID";O:16:"personcombofield":29:{s:4:"name";s:19:"PersonAccountableID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"chm";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:23:"PersonAccountableID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:7:"MSDSURL";O:9:"editfield":14:{s:4:"name";s:7:"MSDSURL";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:11:"RTECSNumber";O:9:"editfield":14:{s:4:"name";s:11:"RTECSNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(15)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"15";s:9:"maxLength";s:2:"15";s:5:"align";s:4:"left";}s:8:"RTECSURL";O:9:"editfield":14:{s:4:"name";s:8:"RTECSURL";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:10:"ICSCNumber";O:9:"editfield":14:{s:4:"name";s:10:"ICSCNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(15)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"15";s:9:"maxLength";s:2:"15";s:5:"align";s:4:"left";}s:7:"ICSCURL";O:9:"editfield":14:{s:4:"name";s:7:"ICSCURL";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:11:"ProductName";O:9:"editfield":14:{s:4:"name";s:11:"ProductName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:10:"CommonName";O:9:"editfield":14:{s:4:"name";s:10:"CommonName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:12:"ChemicalName";O:9:"editfield":14:{s:4:"name";s:12:"ChemicalName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:9:"CASNumber";O:9:"editfield":14:{s:4:"name";s:9:"CASNumber";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(50)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:3:"100";s:5:"align";s:4:"left";}s:16:"ActiveIngredient";O:9:"editfield":14:{s:4:"name";s:16:"ActiveIngredient";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:11:"varchar(50)";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:2:"50";s:5:"align";s:4:"left";}s:12:"DateReceived";O:9:"datefield":15:{s:4:"name";s:12:"DateReceived";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"date";s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:16:"DateDiscontinued";O:9:"datefield":15:{s:4:"name";s:16:"DateDiscontinued";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"date";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"ManufacturerID";O:13:"orgcombofield":26:{s:4:"name";s:14:"ManufacturerID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"chm";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:13:"GuarExpirDate";O:9:"datefield":15:{s:4:"name";s:13:"GuarExpirDate";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"date";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:10:"FlashPoint";O:9:"editfield":14:{s:4:"name";s:10:"FlashPoint";s:10:"parentName";N;s:6:"Fields";a:1:{s:11:"TempUnitsID";O:14:"codecombofield":27:{s:4:"name";s:11:"TempUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'245\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'245\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"chm";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"245";}}s:6:"phrase";N;s:8:"dataType";s:3:"int";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:2:"pH";O:9:"editfield":14:{s:4:"name";s:2:"pH";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:3:"int";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";N;s:5:"align";s:4:"left";}s:18:"ReportableQuantity";O:9:"editfield":14:{s:4:"name";s:18:"ReportableQuantity";s:10:"parentName";N;s:6:"Fields";a:3:{s:4:"Self";N;s:23:"WeightVolUnitCategoryID";O:14:"codecombofield":27:{s:4:"name";s:23:"WeightVolUnitCategoryID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'37\'";s:14:"listConditions";a:1:{s:6:"CodeID";O:13:"listcondition":3:{s:4:"name";s:6:"CodeID";s:4:"mode";s:2:"in";s:6:"values";a:2:{i:0;s:3:"\'5\'";i:1;s:3:"\'6\'";}}}s:3:"SQL";s:172:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'37\'
 AND `cod`.CodeID IN (\'5\',\'6\')
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:1:{s:16:"WeightVolUnitsID";a:1:{s:4:"name";s:16:"WeightVolUnitsID";}}s:8:"moduleID";s:3:"chm";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"37";}s:16:"WeightVolUnitsID";O:10:"combofield":26:{s:4:"name";s:16:"WeightVolUnitsID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"uts";s:10:"foreignKey";s:6:"UnitID";s:12:"foreignField";s:4:"Unit";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:168:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`
WHERE uts._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:162:"SELECT 
`uts`.UnitID AS ID, NULLIF(CONCAT(IFNULL(`uts`.UnitName,\'\')),\'\') AS Name, `uts`.UnitCategoryID AS ParentID FROM `uts`

WHERE `uts`.UnitID = \'/*recordID*/\'";s:11:"parentField";s:23:"WeightVolUnitCategoryID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"chm";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}}s:6:"phrase";N;s:8:"dataType";s:3:"int";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}s:13:"MSDSAvailable";O:13:"checkboxfield":14:{s:4:"name";s:13:"MSDSAvailable";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:5:"Solid";O:13:"checkboxfield":14:{s:4:"name";s:5:"Solid";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:6:"Liquid";O:13:"checkboxfield":14:{s:4:"name";s:6:"Liquid";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:3:"Gas";O:13:"checkboxfield":14:{s:4:"name";s:3:"Gas";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:16:"ChemicalStatusID";O:14:"codecombofield":27:{s:4:"name";s:16:"ChemicalStatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'114\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'114\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"chm";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"114";}}');

$hasEditableFields = true;


$singularRecordName = gettext("Chemical");

//field value array
$data = array(
        'ChemicalID' => '',
         'OrganizationID' => '',
         'PersonAccountableID' => '',
         'MSDSURL' => '',
         'RTECSNumber' => '',
         'RTECSURL' => '',
         'ICSCNumber' => '',
         'ICSCURL' => '',
         'ProductName' => '',
         'CommonName' => '',
         'ChemicalName' => '',
         'CASNumber' => '',
         'ActiveIngredient' => '',
         'DateReceived' => '',
         'DateDiscontinued' => '',
         'ManufacturerID' => '',
         'GuarExpirDate' => '',
         'TempUnitsID' => '',
         'FlashPoint' => '',
         'pH' => '',
         'WeightVolUnitCategoryID' => '',
         'WeightVolUnitsID' => '',
         'ReportableQuantity' => '',
         'MSDSAvailable' => '',
         'Solid' => '',
         'Liquid' => '',
         'Gas' => '',
         'ChemicalStatusID' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'ChemicalID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "ExposureRoutes";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `chm`.ChemicalID,
   `org1`.Name AS Organization,
   `chm`.OrganizationID,
   `ppl1`.DisplayName AS PersonAccountable,
   `acc1`.PersonAccountableID AS PersonAccountableID,
   `chm`.MSDSURL,
   `chm`.RTECSNumber,
   `chm`.RTECSURL,
   `chm`.ICSCNumber,
   `chm`.ICSCURL,
   `chm`.ProductName,
   `chm`.CommonName,
   `chm`.ChemicalName,
   `chm`.CASNumber,
   `chm`.ActiveIngredient,
   `dat1`.RelatedDate AS DateReceived,
   `dat2`.RelatedDate AS DateDiscontinued,
   `org2`.Name AS Manufacturer,
   `chm`.ManufacturerID,
   `dat3`.RelatedDate AS GuarExpirDate,
   `cod6`.Description AS TempUnits,
   `chm`.TempUnitsID,
   `chm`.FlashPoint,
   `chm`.pH,
   `cod7`.Description AS WeightVolUnitCategory,
   `uts1`.UnitCategoryID AS WeightVolUnitCategoryID,
   NULLIF(CONCAT(IFNULL(`uts1`.UnitName,'')),'') AS WeightVolUnits,
   `chm`.WeightVolUnitsID,
   `chm`.ReportableQuantity,
   `chm`.MSDSAvailable,
   `chm`.Solid,
   `chm`.Liquid,
   `chm`.Gas,
   `cod1`.Description AS ChemicalStatus,
   `chm`.ChemicalStatusID,
   NULLIF(CONCAT(IFNULL(`chm`.CommonName,''),' | ',IFNULL(`chm`.ChemicalName,''),' | CAS: ',IFNULL(`chm`.CASNumber,'')),' |  | CAS: ') AS RecordLabel
FROM `chm`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`chm`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`chm`.ChemicalID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'chm'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '16')
     LEFT OUTER JOIN `dat` AS dat1 
    ON (`chm`.ChemicalID = `dat1`.SourceRecordID 
     AND `dat1`.SourceModuleID = 'chm'
     AND `dat1`._Deleted = 0
     AND `dat1`.DateDescriptorID = '12')
     LEFT OUTER JOIN `dat` AS dat2 
    ON (`chm`.ChemicalID = `dat2`.SourceRecordID 
     AND `dat2`.SourceModuleID = 'chm'
     AND `dat2`._Deleted = 0
     AND `dat2`.DateDescriptorID = '13')
     LEFT OUTER JOIN `org` AS org2 
   ON (`chm`.ManufacturerID = `org2`.OrganizationID )
     LEFT OUTER JOIN `dat` AS dat3 
    ON (`chm`.ChemicalID = `dat3`.SourceRecordID 
     AND `dat3`.SourceModuleID = 'chm'
     AND `dat3`._Deleted = 0
     AND `dat3`.DateDescriptorID = '10')
     LEFT OUTER JOIN `cod` AS cod6 
   ON (`chm`.TempUnitsID = `cod6`.CodeID 
     AND `cod6`.CodeTypeID = '245')
     LEFT OUTER JOIN `uts` AS uts1 
   ON (`chm`.WeightVolUnitsID = `uts1`.UnitID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`chm`.ChemicalStatusID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '114')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod7 
   ON (`uts1`.UnitCategoryID = `cod7`.CodeID 
     AND `cod7`.CodeTypeID = '37')
WHERE
   chm.ChemicalID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Chemical");
        $screenPhrase = gettext("Form|Edit basic information about a chemical");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Chemicals");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'ChemicalID' => gettext("Record ID|An automatically assigned number used to track chemicals used by the organization. This number can also used as an internal tracking number for documents; such as: Material Safety Data Sheets, manufacturer labels, waste profile sheets, etc."),
   'OrganizationID' => gettext("Organization|The organization with primary responsibility for chemical oversight for this specific chemical throughout the organization"),
   'PersonAccountableID' => gettext("Person Accountable|The individual assigned primary accountability for chemical oversight for this specific chemical throughout the organization"),
   'MSDSURL' => gettext("MSDS Address|Material Safety Data Sheet - Uniform Resource Locater. This is the Internt address where the manufacturer's material safety data sheet or other general information about the chemical is posted and updated"),
   'RTECSNumber' => gettext("RTECS Number|Registry of Toxic Effects of Chemical Substances Number"),
   'RTECSURL' => gettext("RTECS Address|Registry of Toxic Effects of Chemical Substances Internet address"),
   'ICSCNumber' => gettext("ICSC Number|International Chemical Safety Card number"),
   'ICSCURL' => gettext("ICSC Address|International Chemical Safety Card address"),
   'ProductName' => gettext("Product Name|A name assigned to a chemical or chemical compound by its manufacturer for product marketing and trademarking purposes"),
   'CommonName' => gettext("Common Name|A common name assigned to a chemical by the organization using it. Common names are more easily recognized than chemical names and can include code names used by an organization to quickly and accurately identify a chemical"),
   'ChemicalName' => gettext("Chemical Name|The technical name for a chemical"),
   'CASNumber' => gettext("CAS Number|Chemical Abstracts Service Registry Number. CAS Registry Numbers (often referred to as CAS RNs or CAS Numbers) are unique identifiers for chemical substances"),
   'ActiveIngredient' => gettext("Active Ingredient|The primary active ingredient which gives the chemical its differentiating properties"),
   'DateReceived' => gettext("Date Received|Date the organization first received and/or used the chemical"),
   'DateDiscontinued' => gettext("Date Discontinued|The date on which the organization assigned primary responsibility for enterprise use of this chemical elected to discontinue use of the chemical"),
   'ManufacturerID' => gettext("Manufacturer|The name of the manufacturer of the chemical"),
   'GuarExpirDate' => gettext("Guarantee Expiration Date|The date the continuing guarantee expires"),
   'FlashPoint' => gettext("Flash Point|The lowest temperature at which the material will flash or ignite when exposed to flame"),
   'pH' => gettext("pH|Measure of the hydrogen ion concentration in a solution"),
   'ReportableQuantity' => gettext("Reportable Quantity|The amount of a material which triggers release reporting requirements"),
   'MSDSAvailable' => gettext("Material Safety Data Sheet|Whether a material safety data sheet is available for this chemical and is attached to the record or has a Material Safety Data Sheet (MSDS) Internet Uniform Resource Locater (URL - Internet address) entered"),
   'Solid' => gettext("Solid?|Whether this chemical is present on site as a solid"),
   'Liquid' => gettext("Liquid?|Whether this chemical is present on site as a liquid"),
   'Gas' => gettext("Gas?|Whether this chemical is present on site as a gas"),
   'ChemicalStatusID' => gettext("Chemical Status|Present use status of this chemical throughout the organization")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['OrganizationID'], ShortPhrase($phrases['OrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['OrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['PersonAccountableID'], ShortPhrase($phrases['PersonAccountableID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['PersonAccountableID']->invalid = TRUE;
            }
$vMsg = Validate($data['MSDSURL'], ShortPhrase($phrases['MSDSURL']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MSDSURL']->invalid = TRUE;
            }
$vMsg = Validate($data['RTECSNumber'], ShortPhrase($phrases['RTECSNumber']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['RTECSNumber']->invalid = TRUE;
            }
$vMsg = Validate($data['RTECSURL'], ShortPhrase($phrases['RTECSURL']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['RTECSURL']->invalid = TRUE;
            }
$vMsg = Validate($data['ICSCNumber'], ShortPhrase($phrases['ICSCNumber']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ICSCNumber']->invalid = TRUE;
            }
$vMsg = Validate($data['ICSCURL'], ShortPhrase($phrases['ICSCURL']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ICSCURL']->invalid = TRUE;
            }
$vMsg = Validate($data['ProductName'], ShortPhrase($phrases['ProductName']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ProductName']->invalid = TRUE;
            }
$vMsg = Validate($data['CommonName'], ShortPhrase($phrases['CommonName']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['CommonName']->invalid = TRUE;
            }
$vMsg = Validate($data['ChemicalName'], ShortPhrase($phrases['ChemicalName']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ChemicalName']->invalid = TRUE;
            }
$vMsg = Validate($data['CASNumber'], ShortPhrase($phrases['CASNumber']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['CASNumber']->invalid = TRUE;
            }
$vMsg = Validate($data['ActiveIngredient'], ShortPhrase($phrases['ActiveIngredient']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ActiveIngredient']->invalid = TRUE;
            }
$vMsg = Validate($data['DateReceived'], ShortPhrase($phrases['DateReceived']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['DateReceived']->invalid = TRUE;
            }
$vMsg = Validate($data['DateDiscontinued'], ShortPhrase($phrases['DateDiscontinued']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['DateDiscontinued']->invalid = TRUE;
            }
$vMsg = Validate($data['ManufacturerID'], ShortPhrase($phrases['ManufacturerID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ManufacturerID']->invalid = TRUE;
            }
$vMsg = Validate($data['GuarExpirDate'], ShortPhrase($phrases['GuarExpirDate']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['GuarExpirDate']->invalid = TRUE;
            }
$vMsg = Validate($data['FlashPoint'], ShortPhrase($phrases['FlashPoint']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['FlashPoint']->invalid = TRUE;
            }
$vMsg = Validate($data['pH'], ShortPhrase($phrases['pH']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['pH']->invalid = TRUE;
            }
$vMsg = Validate($data['ReportableQuantity'], ShortPhrase($phrases['ReportableQuantity']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ReportableQuantity']->invalid = TRUE;
            }
$vMsg = Validate($data['MSDSAvailable'], ShortPhrase($phrases['MSDSAvailable']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MSDSAvailable']->invalid = TRUE;
            }
$vMsg = Validate($data['Solid'], ShortPhrase($phrases['Solid']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Solid']->invalid = TRUE;
            }
$vMsg = Validate($data['Liquid'], ShortPhrase($phrases['Liquid']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Liquid']->invalid = TRUE;
            }
$vMsg = Validate($data['Gas'], ShortPhrase($phrases['Gas']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Gas']->invalid = TRUE;
            }
$vMsg = Validate($data['ChemicalStatusID'], ShortPhrase($phrases['ChemicalStatusID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ChemicalStatusID']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Chemicals"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Chemical") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit basic information about a chemical") );
      $tempTabs['ExposureRoutes'] = array( "edit.php?scr=ExposureRoutes&$tabsQS", gettext("Routes|Associate routes of chemical exposure") );
      $tempTabs['SpecialCharacteristics'] = array( "edit.php?scr=SpecialCharacteristics&$tabsQS", gettext("Special|Edit the special characteristics of a chemical") );
      $tempTabs['PlacardRequirements'] = array( "edit.php?scr=PlacardRequirements&$tabsQS", gettext("Placard|Edit placarding requirements associated with a chemical") );
      $tempTabs['Guidance'] = array( "edit.php?scr=Guidance&$tabsQS", gettext("Guidance|Associate guidance organizations with the chemical") );
      $tempTabs['HazardClassifications'] = array( "edit.php?scr=HazardClassifications&$tabsQS", gettext("Classifications|Associate hazard classifications with the chemical ") );
      $tempTabs['PackagingEquivalents'] = array( "edit.php?scr=PackagingEquivalents&$tabsQS", gettext("Equivalents|Associate packaging unit equivalents with the chemical") );
      $tempTabs['ChemicalInventory'] = array( "edit.php?scr=ChemicalInventory&$tabsQS", gettext("Inventory|Associate inventory levels with the chemical") );
      $tempTabs['ChemicalComponents'] = array( "edit.php?scr=ChemicalComponents&$tabsQS", gettext("Components|Associate chemical components with the chemical") );
      $tempTabs['ChemicalTypes'] = array( "edit.php?scr=ChemicalTypes&$tabsQS", gettext("Types|Associate chemical categories and types with the chemical") );
      $tempTabs['HandlingDefaults'] = array( "edit.php?scr=HandlingDefaults&$tabsQS", gettext("Handling|Generate a default chemical handling procedure which can be adopted by others and/or modified to reflect local requirements") );
      $tempTabs['HandlingProcedures'] = array( "edit.php?scr=HandlingProcedures&$tabsQS", gettext("Procedures|Assign a chemical handling procedure to an organization and the chemical") );
      $tempTabs['ChemicalPhrases'] = array( "edit.php?scr=ChemicalPhrases&$tabsQS", gettext("Phrases|Associate one or more chemical risk or safety phrases with the chemical") );
      $tempTabs['ThresholdValues'] = array( "edit.php?scr=ThresholdValues&$tabsQS", gettext("Thresholds|Associate threshold limits values with the chemical") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with ongoing accountabilities with the chemical") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the chemical") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with a physical chemical file") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the chemical") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Chemical") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"DateReceived\",
".$User->getCalFormat(false)."
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_DateReceived\"
});
Calendar.setup({
   inputField : \"DateDiscontinued\",
".$User->getCalFormat(false)."
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_DateDiscontinued\"
});
Calendar.setup({
   inputField : \"GuarExpirDate\",
".$User->getCalFormat(false)."
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_GuarExpirDate\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>