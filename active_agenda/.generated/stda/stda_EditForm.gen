<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:12:{s:15:"StandardAssocID";O:9:"viewfield":16:{s:4:"name";s:15:"StandardAssocID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:91:"Record ID|An automatically assigned number used to associate standards with related records";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"OwnerOrganization";O:9:"viewfield":16:{s:4:"name";s:17:"OwnerOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Organization|The name of the organization affected by the standard";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"RelatedModuleRecord";O:9:"viewfield":16:{s:4:"name";s:19:"RelatedModuleRecord";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:85:"Related Record|A combined field used to display the related module name and record ID";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:17:"RelatedRecordLink";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:24:"RelatedRecordDescription";O:9:"viewfield":16:{s:4:"name";s:24:"RelatedRecordDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:129:"Related Record|A description of the related record based on a combination of field values assigned from within the related module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"Country";O:9:"viewfield":16:{s:4:"name";s:7:"Country";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:52:"Country|The country from which the standard emanates";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:13:"StandardLevel";O:9:"viewfield":16:{s:4:"name";s:13:"StandardLevel";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:86:"Standard Level|The heirarchial level of the standard from an international perspective";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:21:"StandardsOrganization";O:9:"viewfield":16:{s:4:"name";s:21:"StandardsOrganization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:129:"Standards Organization|Name of the organization, association, or body responsible for development and maintenance of the standard";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Standard";O:9:"viewfield":16:{s:4:"name";s:8:"Standard";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:123:"Regulation|A description of the regulation based on a combination of field values assigned from within the Standards module";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:19:"StandardDescription";O:9:"viewfield":16:{s:4:"name";s:19:"StandardDescription";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:50:"Description|A detailed description of the standard";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:11:"StandardURL";O:9:"viewfield":16:{s:4:"name";s:11:"StandardURL";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:70:"Uniform Resource Locator|The official Internet address of the standard";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";s:11:"StandardURL";s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"MannerAffected";O:9:"memofield":15:{s:4:"name";s:14:"MannerAffected";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:0:"";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:18:"ComplianceStatusID";O:14:"codecombofield":27:{s:4:"name";s:18:"ComplianceStatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'94\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'94\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:4:"stda";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"94";}}');

$hasEditableFields = true;


$singularRecordName = gettext("Standard Association");

//field value array
$data = array(
        'StandardAssocID' => '',
         'OwnerOrganization' => '',
         'RelatedModuleRecord' => '',
         'RelatedRecordDescription' => '',
         'Country' => '',
         'StandardLevel' => '',
         'StandardsOrganization' => '',
         'Standard' => '',
         'StandardDescription' => '',
         'StandardURL' => '',
         'MannerAffected' => '',
         'ComplianceStatusID' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'StandardAssocID';

    $ownerField = 'OwnerOrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `stda`.StandardAssocID,
   `org1`.Name AS OwnerOrganization,
   CONCAT('internal:view.php?mdl=',`stda`.RelatedModuleID,'&rid=',`stda`.RelatedRecordID) AS RelatedRecordLink,
   NULLIF(CONCAT(IFNULL(`mod1`.Name,''),' Module (Record ID: ',IFNULL(`stda`.RelatedRecordID,''),')'),' Module (Record ID: )') AS RelatedModuleRecord,
   `rdc1`.Value AS RelatedRecordDescription,
   NULLIF(CONCAT(IFNULL(`ctr1`.CountryName,''),' (',IFNULL(`ctr1`.CountryAbbreviation,''),')'),' ()') AS Country,
   `cod1`.Description AS StandardLevel,
   `org2`.Name AS StandardsOrganization,
   NULLIF(CONCAT(IFNULL(`std1`.StandardsOrganizationAbbreviation,''),' | ',IFNULL(`std1`.StandardCode,''),' ',IFNULL(`std1`.StandardSection,'')),' |  ') AS Standard,
   `std1`.StandardDescription AS StandardDescription,
   `std1`.StandardURL AS StandardURL,
   `stda`.MannerAffected,
   `cod2`.Description AS ComplianceStatus,
   `stda`.ComplianceStatusID,
   NULLIF(CONCAT(IFNULL(`org1`.Name,''),' | ',IFNULL(NULLIF(CONCAT(IFNULL(`std1`.StandardsOrganizationAbbreviation,''),' | ',IFNULL(`std1`.StandardCode,''),' ',IFNULL(`std1`.StandardSection,'')),' |  '),''),' | ',IFNULL(`mod1`.Name,''),' | ',IFNULL(`rdc1`.Value,'')),' |  |  | ') AS RecordLabel,
   `rdc1`.OrganizationID AS OwnerOrganizationID
FROM `stda`
   
     LEFT OUTER JOIN `rdc` AS rdc1 ON (`stda`.RelatedRecordID = rdc1.RecordID AND `stda`.RelatedModuleID = rdc1.ModuleID)
     LEFT OUTER JOIN `mod` AS mod1 
   ON (`stda`.RelatedModuleID = `mod1`.ModuleID )
     LEFT OUTER JOIN `std` AS std1 
   ON (`stda`.StandardID = `std1`.StandardID )
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`stda`.ComplianceStatusID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '94')
     LEFT OUTER JOIN `org` AS org1 
   ON (`rdc1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ctr` AS ctr1 
   ON (`std1`.CountryID = `ctr1`.CountryID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`std1`.StandardLevelID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '7')
     LEFT OUTER JOIN `org` AS org2 
   ON (`std1`.StandardsOrganizationID = `org2`.OrganizationID )
WHERE
   stda.StandardAssocID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Standard Association");
        $screenPhrase = gettext("Form|Edit summary information about a regulation associated with a related record");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Standard Associations");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'StandardAssocID' => gettext("Record ID|An automatically assigned number used to associate standards with related records"),
   'OwnerOrganization' => gettext("Organization|The name of the organization affected by the standard"),
   'RelatedModuleRecord' => gettext("Related Record|A combined field used to display the related module name and record ID"),
   'RelatedRecordDescription' => gettext("Related Record|A description of the related record based on a combination of field values assigned from within the related module"),
   'Country' => gettext("Country|The country from which the standard emanates"),
   'StandardLevel' => gettext("Standard Level|The heirarchial level of the standard from an international perspective"),
   'StandardsOrganization' => gettext("Standards Organization|Name of the organization, association, or body responsible for development and maintenance of the standard"),
   'Standard' => gettext("Regulation|A description of the regulation based on a combination of field values assigned from within the Standards module"),
   'StandardDescription' => gettext("Description|A detailed description of the standard"),
   'StandardURL' => gettext("Uniform Resource Locator|The official Internet address of the standard"),
   'MannerAffected' => gettext("Manner Affected|A detailed description of the manner in which the related record is affected by the standard"),
   'ComplianceStatusID' => gettext("Compliance Status|Current compliance status")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['ComplianceStatusID'], ShortPhrase($phrases['ComplianceStatusID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['ComplianceStatusID']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Standard Associations"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Standard Association") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about a regulation associated with a related record") );
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Standard Association") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>