<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:7:{s:6:"AreaID";O:9:"viewfield":16:{s:4:"name";s:6:"AreaID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:107:"Record ID|An automatically assigned number used to track knowledge, skill, and ability, areas of excellence";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:64:"Organization|The organization emphasizing the area of excellence";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:17:"PersonAccountable";O:9:"viewfield":16:{s:4:"name";s:17:"PersonAccountable";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:152:"Person Accountable|The individual assigned primary accountability for developing knowledge, skills, and abilities associated with the area of excellence";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:7:"KSAArea";O:9:"viewfield":16:{s:4:"name";s:7:"KSAArea";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Area|A short term or phrase used to define general skill areas";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"AreaTitle";O:9:"viewfield":16:{s:4:"name";s:9:"AreaTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:59:"Title|A short title used to describe the area of excellence";s:8:"dataType";s:11:"varchar(30)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"AreaDesc";O:9:"viewfield":16:{s:4:"name";s:8:"AreaDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:66:"Description|A brief phrase used to describe the area of excellence";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"AreaAbbr";O:9:"viewfield":16:{s:4:"name";s:8:"AreaAbbr";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Abbreviation|An abbreviation used to describe the area of excellence in a condensed format";s:8:"dataType";s:10:"varchar(5)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');

$hasEditableFields = false;


$singularRecordName = gettext("General Skill Area");

//field value array
$data = array(
        'AreaID' => '',
         'Organization' => '',
         'PersonAccountable' => '',
         'KSAArea' => '',
         'AreaTitle' => '',
         'AreaDesc' => '',
         'AreaAbbr' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();
   $grids[1] = unserialize('O:8:"editgrid":31:{s:9:"insertSQL";N;s:9:"updateSQL";N;s:9:"deleteSQL";N;s:6:"logSQL";N;s:10:"getFormSQL";s:300:"SELECT 
   `ksasc`.CapabilityID,
   `ksasc`.CapabilityTitle,
   `ksasc`.CapabilityDesc,
   `ksasc`.CapabilityAbbr,
   `ksaae1`.OrganizationID AS OrganizationID
FROM `ksasc`
   
     LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc`.AreaID = `ksaae1`.AreaID )
WHERE
   ksasc.CapabilityID=\'/**RowID**/\'";s:9:"getRowSQL";s:467:"SELECT 
   `ksasc`.CapabilityID,
   NULLIF(CONCAT(IFNULL(`ksasc`.CapabilityTitle,\'\'),\' (\',IFNULL(`ksasc`.CapabilityAbbr,\'\'),\')\'),\' ()\') AS Capability,
   `ksasc`.CapabilityDesc,
   NULLIF(CONCAT(IFNULL(`ksaae1`.AreaAbbr,\'\'),\':\',IFNULL(`ksasc`.CapabilityAbbr,\'\')),\':\') AS GroupAbbr,
   `ksaae1`.OrganizationID AS OrganizationID
FROM `ksasc`
   
     LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc`.AreaID = `ksaae1`.AreaID )
WHERE
   ksasc.CapabilityID=\'/**RowID**/\'";s:12:"remoteFields";N;s:11:"hasGridForm";b:1;s:10:"FormFields";a:4:{s:12:"CapabilityID";O:14:"invisiblefield":11:{s:4:"name";s:12:"CapabilityID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Record ID|An automatically assigned number used to track strategic capabilities";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"ksasc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:15:"CapabilityTitle";O:9:"editfield":14:{s:4:"name";s:15:"CapabilityTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:72:"Capability Title|A short title used to describe the strategic capability";s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:5:"ksasc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"50";s:9:"maxLength";s:2:"75";s:5:"align";s:4:"left";}s:14:"CapabilityDesc";O:9:"memofield":15:{s:4:"name";s:14:"CapabilityDesc";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Capability Description|A brief phrase used to describe the strategic capability";s:8:"dataType";s:4:"text";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"CapabilityAbbr";O:9:"editfield":14:{s:4:"name";s:14:"CapabilityAbbr";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:81:"Capability Abbreviation|An abbreviation used to describe the strategic capability";s:8:"dataType";s:10:"varchar(5)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:5:"ksasc";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:1:"5";s:9:"maxLength";s:1:"5";s:5:"align";s:4:"left";}}s:10:"selectedID";N;s:7:"encType";s:0:"";s:16:"IDTranslationSQL";s:0:"";s:20:"listExtendedConditon";s:0:"";s:7:"PKField";s:12:"CapabilityID";s:19:"showGlobalSMRecords";b:0;s:13:"orderByFields";a:0:{}s:18:"dataCollectionForm";b:1;s:8:"moduleID";s:5:"ksasc";s:6:"phrase";s:22:"Strategic Capabilities";s:6:"number";i:1;s:6:"Fields";a:4:{s:12:"CapabilityID";O:14:"invisiblefield":11:{s:4:"name";s:12:"CapabilityID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Record ID|An automatically assigned number used to track strategic capabilities";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"ksasc";s:9:"gridAlign";N;s:13:"displayFormat";N;s:9:"isDefault";N;}s:10:"Capability";O:9:"viewfield":16:{s:4:"name";s:10:"Capability";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:109:"Capability|A combined field used to describe this strategic capability when associating it with other records";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"ksasc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"CapabilityDesc";O:9:"viewfield":16:{s:4:"name";s:14:"CapabilityDesc";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:79:"Capability Description|A brief phrase used to describe the strategic capability";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"ksasc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"GroupAbbr";O:9:"viewfield":16:{s:4:"name";s:9:"GroupAbbr";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:83:"Abbreviation|A grouping of area and capability abbreviations for reporting purposes";s:8:"dataType";s:4:"text";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:5:"ksasc";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}s:8:"countSQL";s:105:"SELECT 
    count(*) 
FROM `ksasc`
   
WHERE ksasc._Deleted = 0
   AND `ksasc`.AreaID = \'/**RecordID**/\'
";s:7:"listSQL";s:473:"SELECT 
   `ksasc`.CapabilityID,
`ksaae1`.OrganizationID AS OrganizationID,
NULLIF(CONCAT(IFNULL(`ksasc`.CapabilityTitle,\'\'),\' (\',IFNULL(`ksasc`.CapabilityAbbr,\'\'),\')\'),\' ()\') AS Capability,
`ksasc`.CapabilityDesc,
NULLIF(CONCAT(IFNULL(`ksaae1`.AreaAbbr,\'\'),\':\',IFNULL(`ksasc`.CapabilityAbbr,\'\')),\':\') AS GroupAbbr
FROM `ksasc`

   LEFT OUTER JOIN `ksaae` AS ksaae1 
   ON (`ksasc`.AreaID = `ksaae1`.AreaID )
WHERE ksasc._Deleted = 0
AND `ksasc`.AreaID = \'/**RecordID**/\'

";s:12:"listExtended";b:0;s:12:"ParentRowSQL";N;s:8:"localKey";s:6:"AreaID";s:9:"parentKey";s:6:"AreaID";s:8:"PKFields";a:1:{i:0;s:12:"CapabilityID";}s:13:"formatOptions";a:0:{}s:10:"fieldTypes";a:0:{}s:4:"name";N;}');


    /**guidanceGrid**/

    $PKField = 'AreaID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form
   $content .= $grids[1]->handleForm();


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Accountability";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `ksaae`.AreaID,
   `org1`.Name AS Organization,
   `ppl1`.DisplayName AS PersonAccountable,
   `cod1`.Description AS KSAArea,
   `ksaae`.AreaTitle,
   `ksaae`.AreaDesc,
   `ksaae`.AreaAbbr,
   NULLIF(CONCAT(IFNULL(`cod1`.Description,''),': ',IFNULL(`ksaae`.AreaTitle,''),' (',IFNULL(`ksaae`.AreaAbbr,''),')'),':  ()') AS RecordLabel,
   `ksaae`.OrganizationID
FROM `ksaae`
   
     LEFT OUTER JOIN `org` AS org1 
   ON (`ksaae`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `acc` AS acc1 
    ON (`ksaae`.AreaID = `acc1`.SourceRecordID 
     AND `acc1`.SourceModuleID = 'ksaae'
     AND `acc1`._Deleted = 0
     AND `acc1`.AccountabilityDescriptorID = '177')
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ksaae`.KSAAreaID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '198')
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`acc1`.PersonAccountableID = `ppl1`.PersonID )
WHERE
   ksaae.AreaID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("General Skill Area");
        $screenPhrase = gettext("Capabilities|Associate strategic capabilities with the area of excellence");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("General Skill Areas");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'AreaID' => gettext("Record ID|An automatically assigned number used to track knowledge, skill, and ability, areas of excellence"),
   'Organization' => gettext("Organization|The organization emphasizing the area of excellence"),
   'PersonAccountable' => gettext("Person Accountable|The individual assigned primary accountability for developing knowledge, skills, and abilities associated with the area of excellence"),
   'KSAArea' => gettext("Area|A short term or phrase used to define general skill areas"),
   'AreaTitle' => gettext("Title|A short title used to describe the area of excellence"),
   'AreaDesc' => gettext("Description|A brief phrase used to describe the area of excellence"),
   'AreaAbbr' => gettext("Abbreviation|An abbreviation used to describe the area of excellence in a condensed format")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        

        /**-remove_begin-**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**-remove_end-**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of General Skill Areas"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a General Skill Area") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about the area of excellence") );
      $tempTabs['Capabilities'] = array( "", gettext("Capabilities|Associate strategic capabilities with the area of excellence") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participants with the area of excellence") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participants involved with the area of excellence") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with the area of excellence") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the area of excellence") , 'bpc');
      $tempTabs['Reports'] = array( "reports.php?scr=Reports&$tabsQS", gettext("Reports|View reports for this area of excellence") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Capabilities'] = array( "", gettext("New Area") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    /**dateFields**/
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>