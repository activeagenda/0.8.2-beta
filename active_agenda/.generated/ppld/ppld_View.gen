<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

    /**CUSTOM_CODE|init**/

    //list of objects containing the field information
    $fields = unserialize('a:13:{s:11:"DependentID";O:9:"viewfield":16:{s:4:"name";s:11:"DependentID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:67:"Dependent ID|A unique number assigned to each employee\'s\' dependent";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Organization";O:9:"viewfield":16:{s:4:"name";s:12:"Organization";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:53:"Organization|The organization the employee reports to";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"EmployeePerson";O:9:"viewfield":16:{s:4:"name";s:14:"EmployeePerson";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:100:"Employee|A combined field used to describe this employee when associating her/him with other records";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"LastName";O:9:"viewfield":16:{s:4:"name";s:8:"LastName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"Last Name|Family name of the employee dependent";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"FirstName";O:9:"viewfield":16:{s:4:"name";s:9:"FirstName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:47:"First Name|Given name of the employee dependent";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:10:"MiddleName";O:9:"viewfield":16:{s:4:"name";s:10:"MiddleName";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:60:"Middle Name|Middle name or initial of the employee dependent";s:8:"dataType";s:11:"varchar(50)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"Relationship";O:9:"viewfield":16:{s:4:"name";s:12:"Relationship";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Relationship|The relationship of the dependent to the employee";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:9:"DepGender";O:9:"viewfield":16:{s:4:"name";s:9:"DepGender";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:52:"Dependent Gender|Gender of the employee\'s dependent\'";s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:12:"DepBirthdate";O:9:"viewfield":16:{s:4:"name";s:12:"DepBirthdate";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:62:"Dependent Birthdate|The birth date of the employee\'s dependent";s:8:"dataType";s:4:"date";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:6:"DepAge";O:9:"viewfield":16:{s:4:"name";s:6:"DepAge";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:115:"Dependent Age|Age of the employee\'s dependent which is automatically calculated using the birthdate and server date";s:8:"dataType";s:10:"varchar(5)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"DepSocialSecNo";O:9:"viewfield":16:{s:4:"name";s:14:"DepSocialSecNo";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:110:"Dependent Social Security Number|The identification number assigned to individuals by the individual\'s country";s:8:"dataType";s:11:"varchar(25)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:8:"Employed";O:9:"viewfield":16:{s:4:"name";s:8:"Employed";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:43:"Employed|Whether this dependent is employed";s:8:"dataType";s:4:"bool";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"SpecialFactors";O:9:"viewfield":16:{s:4:"name";s:14:"SpecialFactors";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:122:"Additional Information|Any additional information relative to the dependent which may be of importance to the organization";s:8:"dataType";s:12:"varchar(255)";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}}');


    //list of grids
    /**grids**/

    //phrases for field names, in field order
    $phrases = array(
   'DependentID' => gettext("Dependent ID|A unique number assigned to each employee's' dependent"),
   'Organization' => gettext("Organization|The organization the employee reports to"),
   'EmployeePerson' => gettext("Employee|A combined field used to describe this employee when associating her/him with other records"),
   'LastName' => gettext("Last Name|Family name of the employee dependent"),
   'FirstName' => gettext("First Name|Given name of the employee dependent"),
   'MiddleName' => gettext("Middle Name|Middle name or initial of the employee dependent"),
   'Relationship' => gettext("Relationship|The relationship of the dependent to the employee"),
   'DepGender' => gettext("Dependent Gender|Gender of the employee's dependent'"),
   'DepBirthdate' => gettext("Dependent Birthdate|The birth date of the employee's dependent"),
   'DepAge' => gettext("Dependent Age|Age of the employee's dependent which is automatically calculated using the birthdate and server date"),
   'DepSocialSecNo' => gettext("Dependent Social Security Number|The identification number assigned to individuals by the individual's country"),
   'Employed' => gettext("Employed|Whether this dependent is employed"),
   'SpecialFactors' => gettext("Additional Information|Any additional information relative to the dependent which may be of importance to the organization")
   );


    $ownerField = 'OrganizationID';

    
    /**disbleGlobalModules**/
    /**useBestPractices**/

    //retrieve record
    $data = array();
    
    /**SQL|GET_BEGIN**/
    $SQL = "SELECT 
   `ppld`.DependentID,
   `org1`.Name AS Organization,
   NULLIF(CONCAT(IFNULL(`ppl2`.LastName,''),', ',IFNULL(`ppl2`.FirstName,'')),', ') AS EmployeePerson,
   `ppld`.LastName,
   `ppld`.FirstName,
   `ppld`.MiddleName,
   `cod1`.Description AS Relationship,
   `cod2`.Description AS DepGender,
   `ppld`.DepBirthdate,
   `ppld`.DepAge,
   `ppld`.DepSocialSecNo,
   `ppld`.Employed,
   `ppld`.SpecialFactors,
   NULLIF(CONCAT(IFNULL(NULLIF(CONCAT(IFNULL(`ppl2`.LastName,''),', ',IFNULL(`ppl2`.FirstName,'')),', '),''),' | ',IFNULL(`ppld`.FirstName,''),' ',IFNULL(`ppld`.LastName,''),' | ',IFNULL(`cod1`.Description,'')),' |   | ') AS RecordLabel,
   `ppl1`.OrganizationID AS OrganizationID
FROM `ppld`
   
     LEFT OUTER JOIN `ppl` AS ppl1 
   ON (`ppld`.EmployeePersonID = `ppl1`.PersonID )
     LEFT OUTER JOIN `pple` AS pple1 
   ON (`ppld`.EmployeePersonID = `pple1`.PersonID )
     LEFT OUTER JOIN `cod` AS cod1 
   ON (`ppld`.RelationshipID = `cod1`.CodeID 
     AND `cod1`.CodeTypeID = '78')
     LEFT OUTER JOIN `cod` AS cod2 
   ON (`ppld`.DepGenderID = `cod2`.CodeID 
     AND `cod2`.CodeTypeID = '133')
     LEFT OUTER JOIN `org` AS org1 
   ON (`ppl1`.OrganizationID = `org1`.OrganizationID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`pple1`.PersonID = `ppl2`.PersonID )
WHERE
   ppld.DependentID='/**RecordID**/'";

    /**CUSTOM_CODE|before_get**/

    //get data
    $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $SQL), DB_FETCHMODE_ASSOC);
    dbErrorCheck($r);

    
    /**SQL|GET_END**/
    //need to repeat for each getSQL........
    $data = array_merge($data, $r[0]); //assign first (only) row
    
    /**CUSTOM_CODE|get**/
    
    //check if user has permission to view or edit record - will redirect if no permission at all
    $allowEdit = $User->CheckViewScreenPermission();
    //$allowEdit = true;

    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    $tabsQS = MakeQS($tabsQSargs);

    //List tab
    $tabs['List'] = Array("list.php?$qs", gettext("List|View the list of Dependents"));

    if ($allowEdit){
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dependent") );
      $tempTabs['Form'] = array( "edit.php?scr=Form&$tabsQS", gettext("Form|Edit summary information about an employee dependent") );
$tabs = array_merge($tabs, $tempTabs);
    } else {
              $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dependent") );
      $tempTabs['View'] = array( "", gettext("View|View summary information about").' '.gettext("a Dependent") );
$tabs = array_merge($tabs, $tempTabs);
    }
    
    $recordLabelField = $data['RecordLabel'];

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $pageTitle = gettext("Dependent");
    $screenPhrase = gettext("View|View summary information about an employee dependent");

    $backlink = "list.php?$qs";

    $nextScreen = "Form";
    $editlink = "edit.php?$tabsQS&scr=$nextScreen";
    $content = renderViewTable($content, $allowEdit, $backlink, $editlink);

    //add byline info on record modification info
    $content .= "<div class=\"recinfo\">{$phrases['_ModDate']} {$data['_ModDate']}";
    if ($User->IsAdmin) {
        $content .= '&nbsp; &nbsp; <a href="audit.php?mdl='.$ModuleID.'&rid='.$recordID.'">'.gettext("Audit Trail").'</a> ';
    }
    $content .= "</div>";

    //display view grids here


//View Screen Sections here
/**VIEWSCREENSECTIONS**/
?>
