<?php
/**
 *  Template file for generated files (alt. a generated file)
 *
 *  PHP version 4
 *
 *
 * LICENSE NOTE:
 *
 * Copyright  2003-2007 Active Agenda Inc., All Rights Reserved.
 *
 * Unless explicitly acquired and licensed from Licensor under a "commercial license",
 * the contents of this file are subject to the Reciprocal Public License ("RPL")
 * Version 1.4, or subsequent versions as allowed by the RPL,and You may not copy
 * or use this file in either source code or executable form, except in compliance
 * with the terms and conditions of the RPL. You may obtain a copy of the RPL from
 * Active Agenda Inc. at http://www.activeagenda.net/license.
 *
 * All software distributed under the Licenses is provided strictly on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND ACTIVE AGENDA
 * INC. HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT LIMITATION, ANY 
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT,
 * OR NON-INFRINGEMENT. See the Licenses for specific language governing rights and
 * limitations under the Licenses.
 *
 *
 * @author         Mattias Thorslund <mthorslund@activeagenda.net>
 * @copyright      2003-2007 Active Agenda Inc.
 * @license        http://www.activeagenda.net/license  RPL 1.4
 * @version        SVN: $Revision: 499 $
 * @last-modified  SVN: $Date: 2007-02-16 13:43:40 -0800 (Fri, 16 Feb 2007) $
 */

/**CUSTOM_CODE|classdef**/

//list of objects containing the field information
$fields = unserialize('a:17:{s:9:"MeetingID";O:9:"viewfield":16:{s:4:"name";s:9:"MeetingID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:90:"Record ID|An automatically assigned number used to track meetings held by the organization";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:0;}s:14:"OrganizationID";O:13:"orgcombofield":26:{s:4:"name";s:14:"OrganizationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:2:{s:12:"DepartmentID";a:1:{s:4:"name";s:12:"DepartmentID";}s:10:"LocationID";a:1:{s:4:"name";s:10:"LocationID";}}s:8:"moduleID";s:3:"mtg";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";s:12:"defaultorgID";s:15:"suppressItemAdd";b:0;}s:17:"DepartmentMeeting";O:13:"checkboxfield":14:{s:4:"name";s:17:"DepartmentMeeting";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}s:12:"DepartmentID";O:10:"combofield":26:{s:4:"name";s:12:"DepartmentID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:5:"orgdp";s:10:"foreignKey";s:12:"DepartmentID";s:12:"foreignField";s:10:"Department";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:190:"SELECT 
`orgdp`.DepartmentID AS ID, NULLIF(CONCAT(IFNULL(`orgdp`.DepartmentName,\'\')),\'\') AS Name, `orgdp`.OrganizationID AS ParentID FROM `orgdp`
WHERE orgdp._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:190:"SELECT 
`orgdp`.DepartmentID AS ID, NULLIF(CONCAT(IFNULL(`orgdp`.DepartmentName,\'\')),\'\') AS Name, `orgdp`.OrganizationID AS ParentID FROM `orgdp`

WHERE `orgdp`.DepartmentID = \'/*recordID*/\'";s:11:"parentField";s:14:"OrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"mtg";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:30:"`orgdp`.OrganizationID IN (%s)";s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;}s:10:"LocationID";O:10:"combofield":26:{s:4:"name";s:10:"LocationID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:4:"orgl";s:10:"foreignKey";s:10:"LocationID";s:12:"foreignField";s:8:"Location";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:371:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE orgl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:369:"SELECT 
`orgl`.LocationID AS ID, NULLIF(CONCAT_WS(\', \',`bui1`.BuildingName,`buir1`.RoomName,`orgl`.LocationName),\'\') AS Name, `orgl`.OrganizationID AS ParentID FROM `orgl`
 
 LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl`.RoomID = `buir1`.RoomID )
 LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )

WHERE `orgl`.LocationID = \'/*recordID*/\'";s:11:"parentField";s:14:"OrganizationID";s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"mtg";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:29:"`orgl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:13:"MeetingTypeID";O:14:"codecombofield":27:{s:4:"name";s:13:"MeetingTypeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:17:"CodeTypeID = \'72\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:141:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'72\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"mtg";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:2:"72";}s:12:"MeetingTitle";O:9:"editfield":14:{s:4:"name";s:12:"MeetingTitle";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:12:"varchar(128)";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:4:"left";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"size";s:2:"75";s:9:"maxLength";s:3:"128";s:5:"align";s:4:"left";}s:16:"MeetingStartTime";O:9:"datefield":15:{s:4:"name";s:16:"MeetingStartTime";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";s:0:"";s:14:"conditionField";N;s:14:"conditionValue";N;}s:14:"MeetingEndTime";O:9:"datefield":15:{s:4:"name";s:14:"MeetingEndTime";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:8:"datetime";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:5:"align";s:5:"right";s:12:"defaultValue";s:0:"";s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"MeetingDuration";O:9:"viewfield":16:{s:4:"name";s:15:"MeetingDuration";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:131:"Duration|The total duration of the meeting. The duration is automatically calculated based on the meeting\'s begin time and end time";s:8:"dataType";s:3:"int";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:6:"Agenda";O:9:"memofield":15:{s:4:"name";s:6:"Agenda";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:8:"notEmpty";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"MeetingLeaderID";O:16:"personcombofield":29:{s:4:"name";s:15:"MeetingLeaderID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"mtg";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:19:"MeetingLeaderID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"MeetingScribeID";O:16:"personcombofield":29:{s:4:"name";s:15:"MeetingScribeID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"ppl";s:10:"foreignKey";s:8:"PersonID";s:12:"foreignField";s:11:"DisplayName";s:13:"listCondition";N;s:14:"listConditions";a:0:{}s:3:"SQL";s:109:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`
WHERE ppl._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:105:"SELECT 
`ppl`.PersonID AS ID, `ppl`.DisplayName AS Name FROM `ppl`

WHERE `ppl`.PersonID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"mtg";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`ppl`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;s:8:"orgField";O:10:"combofield":26:{s:4:"name";s:19:"MeetingScribeID_org";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:0:"";s:13:"displayFormat";s:0:"";s:9:"isDefault";N;s:12:"foreignTable";s:3:"org";s:10:"foreignKey";s:14:"OrganizationID";s:12:"foreignField";s:4:"Name";s:13:"listCondition";N;s:14:"listConditions";N;s:3:"SQL";s:108:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`
WHERE org._Deleted = 0
 ORDER BY Name, ID;";s:6:"getSQL";s:110:"SELECT 
`org`.OrganizationID AS ID, `org`.Name AS Name FROM `org`

WHERE `org`.OrganizationID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"ppl";s:8:"findMode";s:4:"text";s:16:"ownerFieldFilter";s:28:"`org`.OrganizationID IN (%s)";s:12:"defaultValue";N;s:15:"suppressItemAdd";b:0;}s:14:"conditionField";N;s:14:"conditionValue";N;}s:15:"IssuesDiscussed";O:9:"memofield":15:{s:4:"name";s:15:"IssuesDiscussed";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:7:"justify";s:13:"displayFormat";N;s:9:"isDefault";N;s:4:"rows";s:1:"5";s:4:"cols";s:2:"75";s:14:"conditionField";N;s:14:"conditionValue";N;}s:9:"LaborCost";O:9:"viewfield":16:{s:4:"name";s:9:"LaborCost";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";s:104:"Labor Cost|The total labor cost, as stated in the currency assigned to this installation of the software";s:8:"dataType";s:5:"money";s:8:"validate";N;s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:9:"linkField";N;s:11:"parentField";N;s:15:"displayDecimals";N;s:14:"roundingMethod";N;s:10:"needsReGet";b:1;}s:15:"MeetingStatusID";O:14:"codecombofield":27:{s:4:"name";s:15:"MeetingStatusID";s:10:"parentName";N;s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";N;s:8:"validate";s:16:"RequireSelection";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:5:"right";s:13:"displayFormat";N;s:9:"isDefault";N;s:12:"foreignTable";s:3:"cod";s:10:"foreignKey";s:6:"CodeID";s:12:"foreignField";s:11:"Description";s:13:"listCondition";s:18:"CodeTypeID = \'193\'";s:14:"listConditions";a:0:{}s:3:"SQL";s:142:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`
WHERE cod._Deleted = 0
 AND CodeTypeID = \'193\'
 ORDER BY SortOrder, Name, ID;";s:6:"getSQL";s:101:"SELECT 
`cod`.CodeID AS ID, `cod`.Description AS Name FROM `cod`

WHERE `cod`.CodeID = \'/*recordID*/\'";s:11:"parentField";N;s:21:"parentListModuleField";N;s:11:"childFields";a:0:{}s:8:"moduleID";s:3:"mtg";s:8:"findMode";s:0:"";s:16:"ownerFieldFilter";N;s:12:"defaultValue";s:0:"";s:15:"suppressItemAdd";b:0;s:10:"codeTypeID";s:3:"193";}s:18:"RegulatoryRequired";O:13:"checkboxfield":14:{s:4:"name";s:18:"RegulatoryRequired";s:10:"parentName";s:0:"";s:6:"Fields";a:0:{}s:6:"phrase";N;s:8:"dataType";s:4:"bool";s:8:"validate";s:12:"noValidation";s:7:"invalid";N;s:8:"formName";s:8:"mainForm";s:9:"gridAlign";s:6:"center";s:13:"displayFormat";N;s:9:"isDefault";N;s:11:"ShortPhrase";N;s:14:"conditionField";N;s:14:"conditionValue";N;}}');

$hasEditableFields = true;


$singularRecordName = gettext("Meeting");

//field value array
$data = array(
        'MeetingID' => '',
         'OrganizationID' => '',
         'DepartmentMeeting' => '',
         'DepartmentID' => '',
         'LocationID' => '',
         'MeetingTypeID' => '',
         'MeetingTitle' => '',
         'MeetingStartTime' => '',
         'MeetingEndTime' => '',
         'MeetingDuration' => '',
         'Agenda' => '',
         'MeetingLeaderID' => '',
         'MeetingScribeID' => '',
         'IssuesDiscussed' => '',
         'LaborCost' => '',
         'MeetingStatusID' => '',
         'RegulatoryRequired' => ''
    );
foreach($data as $fieldName=>$value){
    $data[$fieldName] = $_POST[$fieldName];
}



//list of grids
   $grids = array();


    /**guidanceGrid**/

    $PKField = 'MeetingID';

    $ownerField = 'OrganizationID';


    /**disbleGlobalModules**/

    //handle any posted grid form


    $tabsQSargs = $qsArgs;
    unset($tabsQSargs['scr']);
    unset($tabsQSargs['gid']);
    unset($tabsQSargs['grw']);
    $tabsQS = MakeQS($tabsQSargs);
    $nextScreen = "Assigned";
    $nextlink = "edit.php?$tabsQS&scr=$nextScreen";
    $form_enctype = '';

    /**CUSTOM_CODE|init**/

    $getSQL = "SELECT 
   `mtg`.MeetingID,
   `org3`.Name AS Organization,
   `mtg`.OrganizationID,
   `mtg`.DepartmentMeeting,
   NULLIF(CONCAT(IFNULL(`orgdp1`.DepartmentName,'')),'') AS Department,
   `mtg`.DepartmentID,
   NULLIF(CONCAT_WS(', ',`bui1`.BuildingName,`buir1`.RoomName,`orgl1`.LocationName),'') AS Location,
   `orgla1`.LocationID AS LocationID,
   `cod3`.Description AS MeetingType,
   `mtg`.MeetingTypeID,
   `mtg`.MeetingTitle,
   `mtg`.MeetingStartTime,
   `mtg`.MeetingEndTime,
   TIMEDIFF(`mtg`.MeetingEndTime, `mtg`.MeetingStartTime) AS MeetingDuration,
   `mtg`.Agenda,
   `ppl2`.DisplayName AS MeetingLeader,
   `inv1`.PersonInvolvedID AS MeetingLeaderID,
   `ppl3`.DisplayName AS MeetingScribe,
   `inv2`.PersonInvolvedID AS MeetingScribeID,
   `mtg`.IssuesDiscussed,
   `mtga1`.LaborCost AS LaborCost,
   `cod4`.Description AS MeetingStatus,
   `mtg`.MeetingStatusID,
   `mtg`.RegulatoryRequired,
   NULLIF(CONCAT(IFNULL(`cod3`.Description,''),' | ',IFNULL(`mtg`.MeetingTitle,''),' | ',IFNULL(`org3`.Name,''),' | ',IFNULL(`mtg`.MeetingStartTime,'')),' |  |  | ') AS RecordLabel
FROM `mtg`
   
     LEFT OUTER JOIN `org` AS org3 
   ON (`mtg`.OrganizationID = `org3`.OrganizationID )
     LEFT OUTER JOIN `orgdp` AS orgdp1 
   ON (`mtg`.DepartmentID = `orgdp1`.DepartmentID )
     LEFT OUTER JOIN `orgla` AS orgla1 
    ON (`mtg`.MeetingID = `orgla1`.SourceRecordID 
     AND `orgla1`.SourceModuleID = 'mtg'
     AND `orgla1`._Deleted = 0)
     LEFT OUTER JOIN `cod` AS cod3 
   ON (`mtg`.MeetingTypeID = `cod3`.CodeID 
     AND `cod3`.CodeTypeID = '72')
     LEFT OUTER JOIN `inv` AS inv1 
    ON (`mtg`.MeetingID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'mtg'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '58')
     LEFT OUTER JOIN `inv` AS inv2 
    ON (`mtg`.MeetingID = `inv2`.SourceRecordID 
     AND `inv2`.SourceModuleID = 'mtg'
     AND `inv2`._Deleted = 0
     AND `inv2`.InvolvementDescriptorID = '59')
     LEFT OUTER JOIN (SELECT 
SUM(IFNULL(`pple1`.HourlyWage,0) * IFNULL(TIMEDIFF(`mtg1`.MeetingEndTime, `mtg1`.MeetingStartTime),0)) AS LaborCost,
`mtga`.AttendeeID FROM `mtga` 

LEFT OUTER JOIN `mtg` AS mtg1 
   ON (`mtga`.MeetingID = `mtg1`.MeetingID )
LEFT OUTER JOIN `inv` AS inv1 
    ON (`mtga`.AttendeeID = `inv1`.SourceRecordID 
     AND `inv1`.SourceModuleID = 'mtga'
     AND `inv1`._Deleted = 0
     AND `inv1`.InvolvementDescriptorID = '57')
LEFT OUTER JOIN `pple` AS pple1 
   ON (`inv1`.PersonInvolvedID = `pple1`.PersonID )
 WHERE `mtga`._Deleted = 0 
GROUP BY `mtga`.AttendeeID 
) AS mtga1 
ON (`mtg`.MeetingID = mtga1.AttendeeID) 
     LEFT OUTER JOIN `cod` AS cod4 
   ON (`mtg`.MeetingStatusID = `cod4`.CodeID 
     AND `cod4`.CodeTypeID = '193')
     LEFT OUTER JOIN `orgl` AS orgl1 
   ON (`orgla1`.LocationID = `orgl1`.LocationID )
     LEFT OUTER JOIN `ppl` AS ppl2 
   ON (`inv1`.PersonInvolvedID = `ppl2`.PersonID )
     LEFT OUTER JOIN `ppl` AS ppl3 
   ON (`inv2`.PersonInvolvedID = `ppl3`.PersonID )
     LEFT OUTER JOIN `buir` AS buir1 
   ON (`orgl1`.RoomID = `buir1`.RoomID )
     LEFT OUTER JOIN `bui` AS bui1 
   ON (`buir1`.BuildingID = `bui1`.BuildingID )
WHERE
   mtg.MeetingID='/**RecordID**/'";


    /*populates screen messages differently depending on whether the record exists in db or not*/
    if ($recordID > 0) {
        $existing = true;

        $pageTitle = gettext("Meeting");
        $screenPhrase = gettext("Form|Edit summary information about a meeting");

        /**CUSTOM_CODE|before_get**/

        //retrieve record
        /**SQL|GET_BEGIN**/
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        /**SQL|GET_END**/
        
        if(count($r) > 0) {

            //populate data array, combining POSTed data with DB record:
            //POST data takes precedence
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }

        } else {

            $messages[] = array('e', gettext("ERROR: Empty query result."));

        }

        /**CUSTOM_CODE|get**/
    } else {
        //inserting a record
        $existing = false;
        $pageTitle = gettext("Meetings");
        /**CUSTOM_CODE|new**/
    }

    //check if user has permission to edit record
    $allowEdit = $User->CheckEditScreenPermission();
    //if not, it terminates and display error msg.


    //phrases for field names, in field order
    $phrases = array(
   'MeetingID' => gettext("Record ID|An automatically assigned number used to track meetings held by the organization"),
   'OrganizationID' => gettext("Organization|The name of the organization associated with the meeting"),
   'DepartmentMeeting' => gettext("Department Meeting|Whether this meeting is used to satsify deaprtment specific requirements"),
   'DepartmentID' => gettext("Department|The name of the department to be credited with the occurrence of this meeting"),
   'LocationID' => gettext("Location|Specific location within the facility where the meeting was held or is scheduled to be held"),
   'MeetingTypeID' => gettext("Meeting Type|The type of meeting conducted"),
   'MeetingTitle' => gettext("Meeting Title|A brief name used to identify the meeting"),
   'MeetingStartTime' => gettext("Start Time|Time this meeting began"),
   'MeetingEndTime' => gettext("End Time|Time this meeting ended"),
   'MeetingDuration' => gettext("Duration|The total duration of the meeting. The duration is automatically calculated based on the meeting's begin time and end time"),
   'Agenda' => gettext("Agenda|The stated purpose and agenda for the meeting"),
   'MeetingLeaderID' => gettext("Leader|The person responsible for leading the meeting and accountable for follow-up of meeting recommendations and outcomes"),
   'MeetingScribeID' => gettext("Scribe|The person responsible for recording the meeting content, discussion points and action items"),
   'IssuesDiscussed' => gettext("Issues Discussed|A detailed description of issues discussed or concerns raised during the meeting"),
   'LaborCost' => gettext("Labor Cost|The total labor cost, as stated in the currency assigned to this installation of the software"),
   'MeetingStatusID' => gettext("Meeting Status|Status of this meeting"),
   'RegulatoryRequired' => gettext("Regulatory Required|Whether this meeting is being conducted to satisfy a regulatory requirement")
   );


    //if the form was posted by clicking the Save button
    if(!empty($_POST['Save'])){
        /**DB_SAVE_BEGIN**/

        /**CUSTOM_CODE|save**/

        //validate submitted data:
        $vMsgs = "";
        $vMsg = Validate($data['OrganizationID'], ShortPhrase($phrases['OrganizationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['OrganizationID']->invalid = TRUE;
            }
$vMsg = Validate($data['DepartmentMeeting'], ShortPhrase($phrases['DepartmentMeeting']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['DepartmentMeeting']->invalid = TRUE;
            }
$vMsg = Validate($data['DepartmentID'], ShortPhrase($phrases['DepartmentID']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['DepartmentID']->invalid = TRUE;
            }
$vMsg = Validate($data['LocationID'], ShortPhrase($phrases['LocationID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['LocationID']->invalid = TRUE;
            }
$vMsg = Validate($data['MeetingTypeID'], ShortPhrase($phrases['MeetingTypeID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MeetingTypeID']->invalid = TRUE;
            }
$vMsg = Validate($data['MeetingTitle'], ShortPhrase($phrases['MeetingTitle']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MeetingTitle']->invalid = TRUE;
            }
$vMsg = Validate($data['MeetingStartTime'], ShortPhrase($phrases['MeetingStartTime']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MeetingStartTime']->invalid = TRUE;
            }
$vMsg = Validate($data['MeetingEndTime'], ShortPhrase($phrases['MeetingEndTime']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MeetingEndTime']->invalid = TRUE;
            }
$vMsg = Validate($data['Agenda'], ShortPhrase($phrases['Agenda']), 'notEmpty');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['Agenda']->invalid = TRUE;
            }
$vMsg = Validate($data['MeetingLeaderID'], ShortPhrase($phrases['MeetingLeaderID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MeetingLeaderID']->invalid = TRUE;
            }
$vMsg = Validate($data['MeetingScribeID'], ShortPhrase($phrases['MeetingScribeID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MeetingScribeID']->invalid = TRUE;
            }
$vMsg = Validate($data['IssuesDiscussed'], ShortPhrase($phrases['IssuesDiscussed']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['IssuesDiscussed']->invalid = TRUE;
            }
$vMsg = Validate($data['MeetingStatusID'], ShortPhrase($phrases['MeetingStatusID']), 'RequireSelection');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['MeetingStatusID']->invalid = TRUE;
            }
$vMsg = Validate($data['RegulatoryRequired'], ShortPhrase($phrases['RegulatoryRequired']), 'noValidation');
            if($vMsg != ''){
                $vMsgs .= $vMsg;
                $fields['RegulatoryRequired']->invalid = TRUE;
            }



        if(0 != strlen($vMsgs)){
            //prepend a general error message
            $vMsgs = gettext("The record has not been saved, because:")."\n".$vMsgs;
            $vMsgs = nl2br($vMsgs);

            //return error messages
            $messages[] = array('e', $vMsgs);

        } else {
        
            /**CUSTOM_CODE|check_deleted_row_exists**/

            $dh = GetDataHandler($ModuleID);
            $recordID = $dh->saveRow($data, $recordID);
            
            //recreate $nextlink b/c of new record ID when inserting
            if(!$existing){
                $qsArgs['rid'] = $recordID; //pass both to tabs and other links
                $tabsQSargs = $qsArgs;
                unset($tabsQSargs['scr']);
                //$tabsQSargs['rid'] = $recordID;
                $tabsQS = MakeQS($tabsQSargs);
                $nextlink = "edit.php?$tabsQS&scr=$nextScreen";

                $existing = true;
            }
        }

        /**CUSTOM_CODE|save_end**/
        /**DB_SAVE_END**/

        /**RE-GET_BEGIN**/
        //only executed on screens that need it: have ViewField with Update, or Calculated/Summary fields
        $r = $dbh->getAll(str_replace('/**RecordID**/', $recordID, $getSQL), DB_FETCHMODE_ASSOC);
        dbErrorCheck($r);
        if(count($r) > 0) {
            foreach($r[0] as $fieldName=>$dbValue){
                //(checking for gridnum avoids interference with any posted edit grid)
                if (empty($_POST['gridnum']) && isset($_POST[$fieldName])){
                    $data[$fieldName] = $_POST[$fieldName];
                } else {
                    $data[$fieldName] = $dbValue;
                }
            }
        } else {
            $messages[] = array('e', gettext("Error: Empty query result."));
        }
        /**RE-GET_END**/
       
        //note: assumes all messages up til this point were errors
        if (count($messages) == 0){
            //add success message
            if ($existing){
                $messages[] = array('m', gettext("The record was updated successfully."));
            } else {
                $messages[] = array('m', gettext("The record was added successfully."));
            }
        }
    }
    /**SQL|DELETE_BEGIN**/
    if(!empty($_POST['Delete'])){

        $dh = GetDataHandler($ModuleID);
        $result = $dh->deleteRow($recordID);

        $deletelink = "list.php?$tabsQS";
        
        //redirect to list screen
        header("Location:" . $deletelink);
        exit;
        
    }
    /**SQL|DELETE_END**/
    
    /**CUSTOM_CODE|after_save**/

    //moved down from above
    $qs = MakeQS($qsArgs);

    //List tab
    $tabs['List'] = Array("list.php?$tabsQS", gettext("List|View the list of Meetings"));

    //setting up tabs:

    //target for FORMs
    $targetlink = "edit.php?$qs";

    //formatting that depends on whether the record exists or not
    if($existing){
        //delete button only appears on the first EditScreen.
        $deletelink = "view.php?$tabsQS&delete=1";
        //link for Cancel button
        $cancellink = "view.php?$tabsQS";

              $tempTabs['View'] = array( "view.php?scr=View&$tabsQS", gettext("View|View summary information about").' '.gettext("a Meeting") );
      $tempTabs['Form'] = array( "", gettext("Form|Edit summary information about a meeting") );
      $tempTabs['Assigned'] = array( "edit.php?scr=Assigned&$tabsQS", gettext("Assigned|Whether this meeting satisfies a meeting assignment") );
      $tempTabs['Attendees'] = array( "edit.php?scr=Attendees&$tabsQS", gettext("Attendees|Assign attendees to a meeting") );
      $tempTabs['Participation'] = array( "edit.php?scr=Participation&$tabsQS", gettext("Participation|Associate attendee participation and involvement with the meeting") );
      $tempTabs['Equipment'] = array( "edit.php?scr=Equipment&$tabsQS", gettext("Equipment|Associate equipment with the meeting") );
      $tempTabs['Imperatives'] = array( "edit.php?scr=Imperatives&$tabsQS", gettext("Imperatives|Associate risk imperatives with the meeting") );
      $tempTabs['Training'] = array( "edit.php?scr=Training&$tabsQS", gettext("Training|Associate training courses with the meeting") );
      $tempTabs['FileRetention'] = array( "edit.php?scr=FileRetention&$tabsQS", gettext("Files|Associate file retention methods with the meeting") );
      $tempTabs['Accountability'] = array( "edit.php?scr=Accountability&$tabsQS", gettext("Accountability|Associate participant accountabilities with the meeting") );
      $tempTabs['Involvement'] = array( "edit.php?scr=Involvement&$tabsQS", gettext("Involvement|Associate participant involvement with the meeting") );
      $tempTabs['BestPractices'] = array( "edit.php?scr=BestPractices&$tabsQS", gettext("Best Practices|Associate best practices with the meeting") , 'bpc');
      $tempTabs['RecordReports'] = array( "reports.php?scr=RecordReports&$tabsQS", gettext("Reports|View the current meeting reports") , 'bpc');
$tabs = array_merge($tabs, $tempTabs);

    } else {
        $deletelink = "";
        //link for Cancel button
        $cancellink = "list.php?$tabsQS";

              $tabs['Form'] = array( "", gettext("New Meeting") );


    }

    /**CUSTOM_CODE|form**/

    $content = '';
    foreach($fields as $key => $field){
        if (!$field->isSubField()){
            $content .= $field->render($data, $phrases);
        }
    }

    $content = renderForm($content, $targetlink, $deletelink, $cancellink, $nextScreen, $form_enctype, $ModuleID, $hasEditableFields);

    //insert code to enable calendar controls
    $content .= "
<script type=\"text/javascript\">
Calendar.setup({
   inputField : \"MeetingStartTime\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_MeetingStartTime\"
});
Calendar.setup({
   inputField : \"MeetingEndTime\",
".$User->getCalFormat(true)."
   showsTime   : true,
   onUpdate    : indicateUnsavedDateChanges,
   button      : \"cal_MeetingEndTime\"
});
</script>\n";
    
    /**CUSTOM_CODE|after_form**/

    //display edit grids here
foreach($grids as $gridID => $grid){
   $content .= $grid->render('edit.php', $qsArgs);
}


    /**CUSTOM_CODE|after_grids**/
    
    $recordLabelField = $data['RecordLabel'];
?>